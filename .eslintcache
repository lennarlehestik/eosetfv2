[{"C:\\Users\\Admin\\Desktop\\eosetfv2\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\eosetfv2\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\eosetfv2\\src\\reportWebVitals.js":"3"},{"size":1850,"mtime":1610572441432,"results":"4","hashOfConfig":"5"},{"size":30435,"mtime":1610658370864,"results":"6","hashOfConfig":"5"},{"size":375,"mtime":1610319986879,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9o52tp",{"filePath":"10","messages":"11","errorCount":0,"warningCount":99,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Desktop\\eosetfv2\\src\\index.js",[],"C:\\Users\\Admin\\Desktop\\eosetfv2\\src\\App.js",["15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Slider } from '@material-ui/core';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { withUAL } from \"ual-reactjs-renderer\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport Drawer from '@material-ui/core/Drawer';\r\n\r\nconst CustomSlider = withStyles({\r\n  root: {\r\n    color: '#52af77',\r\n    height: 8,\r\n  },\r\n  thumb: {\r\n    height: 24,\r\n    width: 24,\r\n    backgroundColor: '#fff',\r\n    border: '2px solid currentColor',\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n    '&:focus, &:hover, &$active': {\r\n      boxShadow: 'inherit',\r\n    },\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: 'calc(-50% + 4px)',\r\n  },\r\n  track: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n  rail: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n})(Slider);\r\n\r\nfunction App(props) {\r\n  const {\r\n    ual: { showModal, hideModal, activeUser, login, logout },\r\n  } = props;\r\n  if (activeUser) {\r\n    const accountName = activeUser.getAccountName();\r\n    accountName.then(function (result) {\r\n      setAccountName(result);\r\n    });\r\n  }\r\n  const displayaccountname = () => {\r\n    if (accountname) {\r\n      return accountname;\r\n    }\r\n  };\r\n  const [drawerstate, setDrawerstate] = useState(false)\r\n  const [tokens, setTokens] = useState(1)\r\n  const [view, setView] = useState(\"create\")\r\n  const [accountname, setAccountName] = useState(\"\")\r\n\r\n  const logmeout = () => {\r\n    logout()\r\n    setAccountName(\"\")\r\n  }\r\n\r\n  const efxmult = 10.6593\r\n  const dadmult = 1.439439\r\n  const iqmult = 50.082\r\n  const vigmult = 196.7187\r\n  const dappmult = 19.2562\r\n  const boxmult = 0.035523\r\n  const ogxmult = 1.26108207\r\n\r\n  const sucessstake = () => {\r\n    const Toast = Swal.mixin({\r\n      toast: true,\r\n      position: \"bottom-end\",\r\n      showConfirmButton: false,\r\n      timer: 6000,\r\n      timerProgressBar: true,\r\n      onOpen: (toast) => {\r\n        toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n        toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n      },\r\n    });\r\n    Toast.fire({\r\n      icon: \"success\",\r\n      title: \"Successfully increased voting and polling rewards\",\r\n    });\r\n  };\r\n\r\n  const actionpuccis = (err) => {\r\n    const Toast = Swal.mixin({\r\n      toast: true,\r\n      position: \"bottom-end\",\r\n      showConfirmButton: false,\r\n      timer: 5000,\r\n      timerProgressBar: true,\r\n      didOpen: (toast) => {\r\n        toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n        toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n      },\r\n    });\r\n    Toast.fire({\r\n      icon: \"error\",\r\n      title: err,\r\n    });\r\n  };\r\n\r\n\r\n  const [ogxbalance, setOgx] = useState({ rows: [] });\r\n  const [dadbalance, setDad] = useState({ rows: [] });\r\n  const [boxbalance, setBox] = useState({ rows: [] });\r\n  const [vigbalance, setVig] = useState({ rows: [] });\r\n  const [iqbalance, setIq] = useState({ rows: [] });\r\n  const [efxbalance, setEfx] = useState({ rows: [] });\r\n  const [dappbalance, setDapp] = useState({ rows: [] });\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"core.ogx\",\r\n        table: \"accounts\",\r\n        scope: displayaccountname(),\r\n        limit: 1,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((ogxbalance) => setOgx(ogxbalance))\r\n    );\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"dadtoken1111\",\r\n        table: \"accounts\",\r\n        scope: displayaccountname(),\r\n        limit: 1,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((dadbalance) => setDad(dadbalance))\r\n    );\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"token.defi\",\r\n        table: \"accounts\",\r\n        scope: displayaccountname(),\r\n        limit: 1,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((boxbalance) => setBox(boxbalance))\r\n    );\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"vig111111111\",\r\n        table: \"accounts\",\r\n        scope: displayaccountname(),\r\n        limit: 1,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((vigbalance) => setVig(vigbalance))\r\n    );\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"everipediaiq\",\r\n        table: \"accounts\",\r\n        scope: displayaccountname(),\r\n        limit: 1,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((iqbalance) => setIq(iqbalance))\r\n\r\n    );\r\n  }, [accountname]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"effecttokens\",\r\n        table: \"accounts\",\r\n        scope: displayaccountname(),\r\n        limit: 1,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((efxbalance) => setEfx(efxbalance))\r\n    );\r\n  }, [accountname]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"dappservices\",\r\n        table: \"accounts\",\r\n        scope: displayaccountname(),\r\n        limit: 1,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((dappbalance) => setDapp(dappbalance))\r\n    );\r\n  }, [accountname]);\r\n\r\n\r\n  const gettokenbalance = (token) => {\r\n    if (token.rows[0]) {\r\n      return Math.floor(Number(token.rows[0].balance.split(\" \")[0]));\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n\r\n  const send = async () => {\r\n    const {\r\n      ual: { login, displayError, showModal },\r\n    } = props;\r\n    // Via static contextType = UALContext, access to the activeUser object on this.context is now available\r\n    const {\r\n      ual: { activeUser },\r\n    } = props;\r\n\r\n    //console.log(getdapp())\r\n\r\n    if (activeUser) {\r\n      try {\r\n        const transaction = {\r\n          actions: [\r\n            {\r\n              account: \"dappservices\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 19.2562 * tokens + \" DAPP\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(dappmult * tokens).toFixed(4) + \" DAPP\",\r\n\r\n              },\r\n            },\r\n\r\n\r\n            {\r\n              account: \"effecttokens\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 10.6593 * tokens + \" EFX\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(10.6593 * tokens).toFixed(4) + \" EFX\",\r\n\r\n              },\r\n            },\r\n\r\n\r\n\r\n            {\r\n              account: \"core.ogx\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 1.26108207 * tokens + \" OGX\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(ogxmult * tokens).toFixed(8) + \" OGX\",\r\n              },\r\n            },\r\n\r\n\r\n\r\n\r\n            {\r\n              account: \"everipediaiq\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 50.082 * tokens + \" IQ\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(iqmult * tokens).toFixed(3) + \" IQ\",\r\n\r\n              },\r\n            },\r\n\r\n\r\n\r\n\r\n            {\r\n              account: \"vig111111111\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 196.7187 * tokens + \" VIG\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(vigmult * tokens).toFixed(4) + \" VIG\",\r\n\r\n              },\r\n            },\r\n\r\n\r\n\r\n            {\r\n              account: \"token.defi\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 0.035523 * tokens + \" BOX\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(boxmult * tokens).toFixed(6) + \" BOX\",\r\n\r\n              },\r\n            },\r\n\r\n\r\n\r\n\r\n            {\r\n              account: \"dadtoken1111\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: efxmult * tokens + \" DAD\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(dadmult * tokens).toFixed(6) + \" DAD\",\r\n\r\n              },\r\n            },\r\n          ],\r\n        };\r\n        // The activeUser.signTransaction will propose the passed in transaction to the logged in Authenticator\r\n        await activeUser.signTransaction(transaction, {\r\n          broadcast: true,\r\n          expireSeconds: 300,\r\n        });\r\n\r\n        sucessstake();\r\n\r\n      } catch (error) {\r\n        console.log(error.message);\r\n        actionpuccis(\r\n          error.message\r\n        );\r\n      }\r\n    } else {\r\n      showModal();\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  const sendetf = async () => {\r\n    const {\r\n      ual: { login, displayError, showModal },\r\n    } = props;\r\n    // Via static contextType = UALContext, access to the activeUser object on this.context is now available\r\n    const {\r\n      ual: { activeUser },\r\n    } = props;\r\n\r\n\r\n    var eosetf = tokens.toFixed(4);\r\n\r\n\r\n    if (activeUser) {\r\n      try {\r\n        const transaction = {\r\n          actions: [\r\n            {\r\n              account: \"consortiumtt\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                quantity: eosetf + \" EOSETF\",\r\n                memo: \"EOSETF redemption\",\r\n\r\n              },\r\n            },\r\n\r\n\r\n          ],\r\n        };\r\n        // The activeUser.signTransaction will propose the passed in transaction to the logged in Authenticator\r\n        await activeUser.signTransaction(transaction, {\r\n          broadcast: true,\r\n          expireSeconds: 300,\r\n        });\r\n\r\n        sucessstake();\r\n\r\n        //alert(\"GREAT SUCCESS!\")\r\n        //window.location.reload(false);\r\n\r\n      } catch (error) {\r\n        console.log(error.message);\r\n        actionpuccis(\r\n          error.message\r\n        );\r\n      }\r\n    } else {\r\n      showModal();\r\n    }\r\n  };\r\n\r\n  const toggleDrawer = (open) => (event) => {\r\n    setDrawerstate(open);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src=\"assets/burger.svg\" class=\"menubutton\" onClick={toggleDrawer(true)} />\r\n        <div class=\"maincard\">\r\n          <Drawer\r\n            anchor=\"right\"\r\n            open={drawerstate}\r\n            onClose={toggleDrawer(false)}\r\n            onOpen={toggleDrawer(true)}\r\n            opacity=\"0.5\"\r\n          >\r\n            <div class=\"sidemenu\">\r\n              <div class=\"mobilemenu\">\r\n                <div class=\"logo\">\r\n                  <img width=\"64px\" src=\"assets/logo.svg\" />\r\n                </div>\r\n                <div class=\"appname\">\r\n                  <a>EOSETF</a>\r\n                </div>\r\n                <div class=\"accountname\">\r\n                  {accountname == \"\" ? <a>not signed in</a> : accountname}\r\n                </div>\r\n                <div class=\"menuitemswrapper\">\r\n                  <table class=\"menuitems\">\r\n                    <tr onClick={() => setView(\"create\")}>\r\n                      <td><img class=\"menuimg\" src=\"assets/productbox1.svg\" /></td>\r\n                      <td><a class=\"menuitemtext\">Create</a></td>\r\n                    </tr>\r\n                    <tr onClick={() => setView(\"redeem\")}>\r\n                      <td><img class=\"menuimg\" src=\"assets/productbox2.svg\" /></td>\r\n                      <td><a class=\"menuitemtext\">Redeem</a></td>\r\n                    </tr>\r\n                    <tr onClick={() => window.open('https://newdex.io/', \"_blank\")}>\r\n                      <td><img class=\"menuimg\" src=\"assets/checkout.svg\" /></td>\r\n                      <td><a class=\"menuitemtext\">Buy</a></td>\r\n                    </tr>\r\n                    <tr onClick={() => window.open('https://app.consortium.vote/', \"_blank\")}>\r\n                      <td><img class=\"menuimg\" src=\"assets/govern.svg\" /></td>\r\n                      <td><a class=\"menuitemtext\">Govern</a></td>\r\n                    </tr>\r\n                    {accountname == \"\" ?\r\n                      <tr onClick={() => showModal()}>\r\n                        <td><img class=\"menuimg\" src=\"assets/login.svg\" /></td>\r\n                        <td><a class=\"menuitemtext\">Login</a></td>\r\n                      </tr>\r\n                      :\r\n                      <tr onClick={() => logmeout()}>\r\n                        <td><img class=\"menuimg\" src=\"assets/logout.svg\" /></td>\r\n                        <td><a class=\"menuitemtext\">Logout</a></td>\r\n                      </tr>\r\n                    }\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Drawer>\r\n          <div class=\"leftbar\">\r\n            <div class=\"logo\">\r\n              <img width=\"64px\" src=\"assets/logo.svg\" />\r\n            </div>\r\n            <div class=\"appname\">\r\n              <a>EOSETF</a>\r\n            </div>\r\n            <div class=\"accountname\">\r\n              {accountname == \"\" ? <a>not signed in</a> : accountname}\r\n            </div>\r\n            <div class=\"menuitemswrapper\">\r\n              <table class=\"menuitems\">\r\n                <tr onClick={() => setView(\"create\")}>\r\n                  <td><img class=\"menuimg\" src=\"assets/productbox1.svg\" /></td>\r\n                  <td><a class=\"menuitemtext\">Create</a></td>\r\n                </tr>\r\n                <tr onClick={() => setView(\"redeem\")}>\r\n                  <td><img class=\"menuimg\" src=\"assets/productbox2.svg\" /></td>\r\n                  <td><a class=\"menuitemtext\">Redeem</a></td>\r\n                </tr>\r\n                <tr onClick={() => window.open('https://newdex.io/', \"_blank\")}>\r\n                  <td><img class=\"menuimg\" src=\"assets/checkout.svg\" /></td>\r\n                  <td><a class=\"menuitemtext\">Buy</a></td>\r\n                </tr>\r\n                <tr onClick={() => window.open('https://app.consortium.vote/', \"_blank\")}>\r\n                  <td><img class=\"menuimg\" src=\"assets/govern.svg\" /></td>\r\n                  <td><a class=\"menuitemtext\">Govern</a></td>\r\n                </tr>\r\n                {accountname == \"\" ?\r\n                  <tr onClick={() => showModal()}>\r\n                    <td><img class=\"menuimg\" src=\"assets/login.svg\" /></td>\r\n                    <td><a class=\"menuitemtext\">Login</a></td>\r\n                  </tr>\r\n                  :\r\n                  <tr onClick={() => logmeout()}>\r\n                    <td><img class=\"menuimg\" src=\"assets/logout.svg\" /></td>\r\n                    <td><a class=\"menuitemtext\">Logout</a></td>\r\n                  </tr>\r\n                }\r\n              </table>\r\n            </div>\r\n          </div>\r\n          {view == \"create\" ?\r\n            <div class=\"rightbar\">\r\n              <div class=\"rightbartopbox\">\r\n                <div class=\"createetftitle\">\r\n                  <a>Create EOSETF</a>\r\n                </div>\r\n                <div class=\"slidertext\">\r\n                  <a>You are creating <a class=\"highlighttext\">{tokens}</a> EOSETF.</a>\r\n                </div>\r\n                <div class=\"slider\">\r\n                  <CustomSlider\r\n                    defaultValue={1.0000}\r\n                    aria-label=\"custom thumb label\"\r\n                    step={1.0000}\r\n                    min={0}\r\n                    max={10.0000}\r\n                    onChangeCommitted={(e, val) => setTokens(val)}\r\n                    style={{\r\n                      marginBottom: \"10px\",\r\n                      \"margin-top\": \"10px\",\r\n                      color: \"white\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Scrollbars class=\"mask\" style={{ width: \"100%\", height: \"90%\" }} autoHide >\r\n                <div class=\"rightbar\">\r\n                  <div class=\"smallcard\" style={{\"border\": parseFloat(dappmult * tokens).toFixed(4) > gettokenbalance(dappbalance) ? \"solid 2px red\" : \"none\"}}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/dapp.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(dappmult * tokens).toFixed(4)} DAPP tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(dappmult * tokens).toFixed(4) < gettokenbalance(dappbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://newdex.io/', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{\"border\": parseFloat(vigmult * tokens).toFixed(4) > gettokenbalance(vigbalance) ? \"solid 2px red\" : \"none\"}}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/vigor.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(vigmult * tokens).toFixed(4)} VIG tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                    {parseFloat(vigmult * tokens).toFixed(4) < gettokenbalance(vigbalance) ?\r\n                      <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      :\r\n                      <img class=\"trximage\" onClick={() => window.open('https://newdex.io/', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                    }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{\"border\": parseFloat(iqmult * tokens).toFixed(3) > gettokenbalance(iqbalance) ? \"solid 2px red\" : \"none\"}}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/everipedia.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(iqmult * tokens).toFixed(3)} IQ tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                    {parseFloat(iqmult * tokens).toFixed(3) < gettokenbalance(iqbalance) ?\r\n                      <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      :\r\n                      <img class=\"trximage\" onClick={() => window.open('https://newdex.io/', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                    }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{\"border\": parseFloat(ogxmult * tokens).toFixed(8) > gettokenbalance(ogxbalance) ? \"solid 2px red\" : \"none\"}}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/ogx.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(ogxmult * tokens).toFixed(8)} OGX tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                    {parseFloat(ogxmult * tokens).toFixed(8) < gettokenbalance(ogxbalance) ?\r\n                      <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      :\r\n                      <img class=\"trximage\" onClick={() => window.open('https://newdex.io/', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                    }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{\"border\": parseFloat(boxmult * tokens).toFixed(6) > gettokenbalance(boxbalance) ? \"solid 2px red\" : \"none\"}}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/tokendefi.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(boxmult * tokens).toFixed(6)} BOX tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                    {parseFloat(boxmult * tokens).toFixed(6) < gettokenbalance(boxbalance) ?\r\n                      <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      :\r\n                      <img class=\"trximage\" onClick={() => window.open('https://newdex.io/', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                    }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{\"border\": parseFloat(efxmult * tokens).toFixed(4) > gettokenbalance(efxbalance) ? \"solid 2px red\" : \"none\"}}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/efx.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(10.6593 * tokens).toFixed(4)} EFX tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                    {parseFloat(efxmult * tokens).toFixed(4) < gettokenbalance(efxbalance) ?\r\n                      <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      :\r\n                      <img class=\"trximage\" onClick={() => window.open('https://newdex.io/', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                    }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{\"border\": parseFloat(dadmult * tokens).toFixed(6) > gettokenbalance(dadbalance) ? \"solid 2px red\" : \"none\"}}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/dad.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(dadmult * tokens).toFixed(6)} DAD tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                    {parseFloat(dadmult * tokens).toFixed(6) < gettokenbalance(dadbalance) ?\r\n                      <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      :\r\n                      <img class=\"trximage\" onClick={() => window.open('https://newdex.io/', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                    }\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Scrollbars>\r\n              <div class=\"fade\" />\r\n              <button onClick={() => send()} class=\"createbutton\">Create EOSETF</button>\r\n            </div>\r\n            : view == \"redeem\" ?\r\n              <div class=\"rightbar\">\r\n                <div class=\"rightbartopbox\">\r\n                  <div class=\"createetftitle\">\r\n                    <a>Redeem EOSETF</a>\r\n                  </div>\r\n                  <div class=\"slidertext\">\r\n                    <a>You are redeeming <a class=\"highlighttext\">{tokens}</a> EOSETF.</a>\r\n                  </div>\r\n                  <div class=\"slider\">\r\n                    <CustomSlider\r\n                      defaultValue={1.0000}\r\n                      aria-label=\"custom thumb label\"\r\n                      step={1.0000}\r\n                      min={0}\r\n                      max={10.0000}\r\n                      onChangeCommitted={(e, val) => setTokens(val)}\r\n                      style={{\r\n                        marginBottom: \"10px\",\r\n                        \"margin-top\": \"10px\",\r\n                        color: \"white\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <Scrollbars style={{ width: \"100%\", height: \"90%\" }} autoHide >\r\n                  <div class=\"rightbar\">\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>You will get: 100 DAPP tokens</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>You will get: 100 DAPP tokens</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>You will get: 100 DAPP tokens</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>You will get: 100 DAPP tokens</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Scrollbars>\r\n                <button class=\"createbutton\" onClick={() => sendetf()}>Redeem EOSETF</button>\r\n              </div>\r\n              : <a>Error</a>\r\n          }\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withUAL(App);\r\n","C:\\Users\\Admin\\Desktop\\eosetfv2\\src\\reportWebVitals.js",[],{"ruleId":"114","severity":1,"message":"115","line":1,"column":8,"nodeType":"116","messageId":"117","endLine":1,"endColumn":12},{"ruleId":"114","severity":1,"message":"118","line":5,"column":22,"nodeType":"116","messageId":"117","endLine":5,"endColumn":32},{"ruleId":"114","severity":1,"message":"119","line":44,"column":23,"nodeType":"116","messageId":"117","endLine":44,"endColumn":32},{"ruleId":"114","severity":1,"message":"120","line":44,"column":46,"nodeType":"116","messageId":"117","endLine":44,"endColumn":51},{"ruleId":"121","severity":1,"message":"122","line":141,"column":6,"nodeType":"123","endLine":141,"endColumn":19,"suggestions":"124"},{"ruleId":"121","severity":1,"message":"122","line":162,"column":6,"nodeType":"123","endLine":162,"endColumn":19,"suggestions":"125"},{"ruleId":"121","severity":1,"message":"122","line":183,"column":6,"nodeType":"123","endLine":183,"endColumn":19,"suggestions":"126"},{"ruleId":"121","severity":1,"message":"122","line":204,"column":6,"nodeType":"123","endLine":204,"endColumn":19,"suggestions":"127"},{"ruleId":"121","severity":1,"message":"122","line":226,"column":6,"nodeType":"123","endLine":226,"endColumn":19,"suggestions":"128"},{"ruleId":"121","severity":1,"message":"122","line":246,"column":6,"nodeType":"123","endLine":246,"endColumn":19,"suggestions":"129"},{"ruleId":"121","severity":1,"message":"122","line":268,"column":6,"nodeType":"123","endLine":268,"endColumn":19,"suggestions":"130"},{"ruleId":"114","severity":1,"message":"120","line":283,"column":14,"nodeType":"116","messageId":"117","endLine":283,"endColumn":19},{"ruleId":"114","severity":1,"message":"131","line":283,"column":21,"nodeType":"116","messageId":"117","endLine":283,"endColumn":33},{"ruleId":"114","severity":1,"message":"120","line":467,"column":14,"nodeType":"116","messageId":"117","endLine":467,"endColumn":19},{"ruleId":"114","severity":1,"message":"131","line":467,"column":21,"nodeType":"116","messageId":"117","endLine":467,"endColumn":33},{"ruleId":"132","severity":1,"message":"133","line":533,"column":9,"nodeType":"134","endLine":533,"endColumn":88},{"ruleId":"132","severity":1,"message":"133","line":545,"column":19,"nodeType":"134","endLine":545,"endColumn":61},{"ruleId":"135","severity":1,"message":"136","line":548,"column":19,"nodeType":"134","endLine":548,"endColumn":22},{"ruleId":"137","severity":1,"message":"138","line":551,"column":32,"nodeType":"139","messageId":"140","endLine":551,"endColumn":34},{"ruleId":"135","severity":1,"message":"136","line":551,"column":40,"nodeType":"134","endLine":551,"endColumn":43},{"ruleId":"132","severity":1,"message":"133","line":556,"column":27,"nodeType":"134","endLine":556,"endColumn":79},{"ruleId":"135","severity":1,"message":"136","line":557,"column":27,"nodeType":"134","endLine":557,"endColumn":51},{"ruleId":"132","severity":1,"message":"133","line":560,"column":27,"nodeType":"134","endLine":560,"endColumn":79},{"ruleId":"135","severity":1,"message":"136","line":561,"column":27,"nodeType":"134","endLine":561,"endColumn":51},{"ruleId":"132","severity":1,"message":"133","line":564,"column":27,"nodeType":"134","endLine":564,"endColumn":76},{"ruleId":"135","severity":1,"message":"136","line":565,"column":27,"nodeType":"134","endLine":565,"endColumn":51},{"ruleId":"132","severity":1,"message":"133","line":568,"column":27,"nodeType":"134","endLine":568,"endColumn":74},{"ruleId":"135","severity":1,"message":"136","line":569,"column":27,"nodeType":"134","endLine":569,"endColumn":51},{"ruleId":"137","severity":1,"message":"138","line":571,"column":34,"nodeType":"139","messageId":"140","endLine":571,"endColumn":36},{"ruleId":"132","severity":1,"message":"133","line":573,"column":29,"nodeType":"134","endLine":573,"endColumn":75},{"ruleId":"135","severity":1,"message":"136","line":574,"column":29,"nodeType":"134","endLine":574,"endColumn":53},{"ruleId":"132","severity":1,"message":"133","line":578,"column":29,"nodeType":"134","endLine":578,"endColumn":76},{"ruleId":"135","severity":1,"message":"136","line":579,"column":29,"nodeType":"134","endLine":579,"endColumn":53},{"ruleId":"132","severity":1,"message":"133","line":589,"column":15,"nodeType":"134","endLine":589,"endColumn":57},{"ruleId":"135","severity":1,"message":"136","line":592,"column":15,"nodeType":"134","endLine":592,"endColumn":18},{"ruleId":"137","severity":1,"message":"138","line":595,"column":28,"nodeType":"139","messageId":"140","endLine":595,"endColumn":30},{"ruleId":"135","severity":1,"message":"136","line":595,"column":36,"nodeType":"134","endLine":595,"endColumn":39},{"ruleId":"132","severity":1,"message":"133","line":600,"column":23,"nodeType":"134","endLine":600,"endColumn":75},{"ruleId":"135","severity":1,"message":"136","line":601,"column":23,"nodeType":"134","endLine":601,"endColumn":47},{"ruleId":"132","severity":1,"message":"133","line":604,"column":23,"nodeType":"134","endLine":604,"endColumn":75},{"ruleId":"135","severity":1,"message":"136","line":605,"column":23,"nodeType":"134","endLine":605,"endColumn":47},{"ruleId":"132","severity":1,"message":"133","line":608,"column":23,"nodeType":"134","endLine":608,"endColumn":72},{"ruleId":"135","severity":1,"message":"136","line":609,"column":23,"nodeType":"134","endLine":609,"endColumn":47},{"ruleId":"132","severity":1,"message":"133","line":612,"column":23,"nodeType":"134","endLine":612,"endColumn":70},{"ruleId":"135","severity":1,"message":"136","line":613,"column":23,"nodeType":"134","endLine":613,"endColumn":47},{"ruleId":"137","severity":1,"message":"138","line":615,"column":30,"nodeType":"139","messageId":"140","endLine":615,"endColumn":32},{"ruleId":"132","severity":1,"message":"133","line":617,"column":25,"nodeType":"134","endLine":617,"endColumn":71},{"ruleId":"135","severity":1,"message":"136","line":618,"column":25,"nodeType":"134","endLine":618,"endColumn":49},{"ruleId":"132","severity":1,"message":"133","line":622,"column":25,"nodeType":"134","endLine":622,"endColumn":72},{"ruleId":"135","severity":1,"message":"136","line":623,"column":25,"nodeType":"134","endLine":623,"endColumn":49},{"ruleId":"137","severity":1,"message":"138","line":629,"column":17,"nodeType":"139","messageId":"140","endLine":629,"endColumn":19},{"ruleId":"135","severity":1,"message":"136","line":633,"column":19,"nodeType":"134","endLine":633,"endColumn":22},{"ruleId":"135","severity":1,"message":"136","line":636,"column":19,"nodeType":"134","endLine":636,"endColumn":22},{"ruleId":"135","severity":1,"message":"136","line":636,"column":39,"nodeType":"134","endLine":636,"endColumn":64},{"ruleId":"132","severity":1,"message":"133","line":658,"column":23,"nodeType":"134","endLine":658,"endColumn":100},{"ruleId":"135","severity":1,"message":"136","line":661,"column":23,"nodeType":"134","endLine":661,"endColumn":26},{"ruleId":"132","severity":1,"message":"133","line":665,"column":25,"nodeType":"134","endLine":665,"endColumn":85},{"ruleId":"132","severity":1,"message":"133","line":667,"column":25,"nodeType":"134","endLine":667,"endColumn":151},{"ruleId":"132","severity":1,"message":"133","line":674,"column":23,"nodeType":"134","endLine":674,"endColumn":101},{"ruleId":"135","severity":1,"message":"136","line":677,"column":23,"nodeType":"134","endLine":677,"endColumn":26},{"ruleId":"132","severity":1,"message":"133","line":681,"column":23,"nodeType":"134","endLine":681,"endColumn":83},{"ruleId":"132","severity":1,"message":"133","line":683,"column":23,"nodeType":"134","endLine":683,"endColumn":149},{"ruleId":"132","severity":1,"message":"133","line":690,"column":23,"nodeType":"134","endLine":690,"endColumn":106},{"ruleId":"135","severity":1,"message":"136","line":693,"column":23,"nodeType":"134","endLine":693,"endColumn":26},{"ruleId":"132","severity":1,"message":"133","line":697,"column":23,"nodeType":"134","endLine":697,"endColumn":83},{"ruleId":"132","severity":1,"message":"133","line":699,"column":23,"nodeType":"134","endLine":699,"endColumn":149},{"ruleId":"132","severity":1,"message":"133","line":706,"column":23,"nodeType":"134","endLine":706,"endColumn":99},{"ruleId":"135","severity":1,"message":"136","line":709,"column":23,"nodeType":"134","endLine":709,"endColumn":26},{"ruleId":"132","severity":1,"message":"133","line":713,"column":23,"nodeType":"134","endLine":713,"endColumn":83},{"ruleId":"132","severity":1,"message":"133","line":715,"column":23,"nodeType":"134","endLine":715,"endColumn":149},{"ruleId":"132","severity":1,"message":"133","line":722,"column":23,"nodeType":"134","endLine":722,"endColumn":105},{"ruleId":"135","severity":1,"message":"136","line":725,"column":23,"nodeType":"134","endLine":725,"endColumn":26},{"ruleId":"132","severity":1,"message":"133","line":729,"column":23,"nodeType":"134","endLine":729,"endColumn":83},{"ruleId":"132","severity":1,"message":"133","line":731,"column":23,"nodeType":"134","endLine":731,"endColumn":149},{"ruleId":"132","severity":1,"message":"133","line":738,"column":23,"nodeType":"134","endLine":738,"endColumn":99},{"ruleId":"135","severity":1,"message":"136","line":741,"column":23,"nodeType":"134","endLine":741,"endColumn":26},{"ruleId":"132","severity":1,"message":"133","line":745,"column":23,"nodeType":"134","endLine":745,"endColumn":83},{"ruleId":"132","severity":1,"message":"133","line":747,"column":23,"nodeType":"134","endLine":747,"endColumn":149},{"ruleId":"132","severity":1,"message":"133","line":754,"column":23,"nodeType":"134","endLine":754,"endColumn":99},{"ruleId":"135","severity":1,"message":"136","line":757,"column":23,"nodeType":"134","endLine":757,"endColumn":26},{"ruleId":"132","severity":1,"message":"133","line":761,"column":23,"nodeType":"134","endLine":761,"endColumn":83},{"ruleId":"132","severity":1,"message":"133","line":763,"column":23,"nodeType":"134","endLine":763,"endColumn":149},{"ruleId":"137","severity":1,"message":"138","line":772,"column":20,"nodeType":"139","messageId":"140","endLine":772,"endColumn":22},{"ruleId":"135","severity":1,"message":"136","line":776,"column":21,"nodeType":"134","endLine":776,"endColumn":24},{"ruleId":"135","severity":1,"message":"136","line":779,"column":21,"nodeType":"134","endLine":779,"endColumn":24},{"ruleId":"135","severity":1,"message":"136","line":779,"column":42,"nodeType":"134","endLine":779,"endColumn":67},{"ruleId":"132","severity":1,"message":"133","line":801,"column":25,"nodeType":"134","endLine":801,"endColumn":153},{"ruleId":"135","severity":1,"message":"136","line":804,"column":25,"nodeType":"134","endLine":804,"endColumn":28},{"ruleId":"132","severity":1,"message":"133","line":807,"column":25,"nodeType":"134","endLine":807,"endColumn":85},{"ruleId":"132","severity":1,"message":"133","line":813,"column":25,"nodeType":"134","endLine":813,"endColumn":153},{"ruleId":"135","severity":1,"message":"136","line":816,"column":25,"nodeType":"134","endLine":816,"endColumn":28},{"ruleId":"132","severity":1,"message":"133","line":819,"column":25,"nodeType":"134","endLine":819,"endColumn":85},{"ruleId":"132","severity":1,"message":"133","line":825,"column":25,"nodeType":"134","endLine":825,"endColumn":153},{"ruleId":"135","severity":1,"message":"136","line":828,"column":25,"nodeType":"134","endLine":828,"endColumn":28},{"ruleId":"132","severity":1,"message":"133","line":831,"column":25,"nodeType":"134","endLine":831,"endColumn":85},{"ruleId":"132","severity":1,"message":"133","line":837,"column":25,"nodeType":"134","endLine":837,"endColumn":153},{"ruleId":"135","severity":1,"message":"136","line":840,"column":25,"nodeType":"134","endLine":840,"endColumn":28},{"ruleId":"132","severity":1,"message":"133","line":843,"column":25,"nodeType":"134","endLine":843,"endColumn":85},{"ruleId":"135","severity":1,"message":"136","line":850,"column":17,"nodeType":"134","endLine":850,"endColumn":20},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.","'hideModal' is assigned a value but never used.","'login' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'displayaccountname'. Either include it or remove the dependency array.","ArrayExpression",["141"],["142"],["143"],["144"],["145"],["146"],["147"],"'displayError' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"148","fix":"149"},{"desc":"148","fix":"150"},{"desc":"148","fix":"151"},{"desc":"148","fix":"152"},{"desc":"148","fix":"153"},{"desc":"148","fix":"154"},{"desc":"148","fix":"155"},"Update the dependencies array to be: [accountname, displayaccountname]",{"range":"156","text":"157"},{"range":"158","text":"157"},{"range":"159","text":"157"},{"range":"160","text":"157"},{"range":"161","text":"157"},{"range":"162","text":"157"},{"range":"163","text":"157"},[3639,3652],"[accountname, displayaccountname]",[4172,4185],[4703,4716],[5236,5249],[5768,5781],[6299,6312],[6837,6850]]