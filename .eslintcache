[{"C:\\Users\\Admin\\Desktop\\eosetfv2\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\eosetfv2\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\eosetfv2\\src\\reportWebVitals.js":"3"},{"size":1321,"mtime":1610319986876,"results":"4","hashOfConfig":"5"},{"size":14950,"mtime":1610495422854,"results":"6","hashOfConfig":"5"},{"size":375,"mtime":1610319986879,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9o52tp",{"filePath":"10","messages":"11","errorCount":0,"warningCount":66,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Desktop\\eosetfv2\\src\\index.js",[],"C:\\Users\\Admin\\Desktop\\eosetfv2\\src\\App.js",["15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Slider } from '@material-ui/core';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { withUAL } from \"ual-reactjs-renderer\";\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nconst CustomSlider = withStyles({\r\n  root: {\r\n    color: '#52af77',\r\n    height: 8,\r\n  },\r\n  thumb: {\r\n    height: 24,\r\n    width: 24,\r\n    backgroundColor: '#fff',\r\n    border: '2px solid currentColor',\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n    '&:focus, &:hover, &$active': {\r\n      boxShadow: 'inherit',\r\n    },\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: 'calc(-50% + 4px)',\r\n  },\r\n  track: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n  rail: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n})(Slider);\r\n\r\nfunction App(props) {\r\n  const {\r\n    ual: { showModal, hideModal, activeUser, login, logout },\r\n  } = props;\r\n  if (activeUser) {\r\n    const accountName = activeUser.getAccountName();\r\n    accountName.then(function (result) {\r\n      setAccountName(result);\r\n    });\r\n  }\r\n  const displayaccountname = () => {\r\n    if (accountname) {\r\n      return accountname;\r\n    }\r\n  };\r\n  const [tokens, setTokens] = useState(1)\r\n  const [view, setView] = useState(\"create\")\r\n  const [accountname, setAccountName] = useState(\"\")\r\n\r\n  const logmeout = () => {\r\n    logout()\r\n    setAccountName(\"\")\r\n  }\r\n\r\n\r\n  const send = async () => {\r\n    const {\r\n      ual: { login, displayError, showModal },\r\n    } = props;\r\n    // Via static contextType = UALContext, access to the activeUser object on this.context is now available\r\n    const {\r\n      ual: { activeUser },\r\n    } = props;\r\n\r\n    var efx = tokens.toFixed(4);\r\n\r\n    if (activeUser) {\r\n      try {\r\n        const transaction = {\r\n          actions: [\r\n            {\r\n              account: \"dappservices\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                quantity: 2.1563 * tokens + \" DAPP\",\r\n                memo: \"test\",\r\n\r\n              },\r\n            },\r\n\r\n\r\n            {\r\n              account: \"effecttokens\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                quantity: efx + \" EFX\",\r\n                memo: \"test2\",\r\n\r\n              },\r\n            },\r\n\r\n\r\n          ],\r\n        };\r\n        // The activeUser.signTransaction will propose the passed in transaction to the logged in Authenticator\r\n        await activeUser.signTransaction(transaction, {\r\n          broadcast: true,\r\n          expireSeconds: 300,\r\n        });\r\n        //alert(\"GREAT SUCCESS!\")\r\n        window.location.reload(false);\r\n\r\n      } catch (error) {\r\n        //if (error.message.startsWith(\"TypeError: Cannot\") == true) {\r\n\r\n      }\r\n    } else {\r\n      showModal();\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  const sendetf = async () => {\r\n    const {\r\n      ual: { login, displayError, showModal },\r\n    } = props;\r\n    // Via static contextType = UALContext, access to the activeUser object on this.context is now available\r\n    const {\r\n      ual: { activeUser },\r\n    } = props;\r\n\r\n\r\n    var eosetf = tokens.toFixed(4);\r\n\r\n\r\n    if (activeUser) {\r\n      try {\r\n        const transaction = {\r\n          actions: [\r\n            {\r\n              account: \"consortiumtt\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                quantity: eosetf + \" EOSETF\",\r\n                memo: \"test\",\r\n\r\n              },\r\n            },\r\n\r\n\r\n          ],\r\n        };\r\n        // The activeUser.signTransaction will propose the passed in transaction to the logged in Authenticator\r\n        await activeUser.signTransaction(transaction, {\r\n          broadcast: true,\r\n          expireSeconds: 300,\r\n        });\r\n        //alert(\"GREAT SUCCESS!\")\r\n        window.location.reload(false);\r\n\r\n      } catch (error) {\r\n        //if (error.message.startsWith(\"TypeError: Cannot\") == true) {\r\n\r\n      }\r\n    } else {\r\n      showModal();\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div class=\"maincard\">\r\n\r\n          <div class=\"leftbar\">\r\n            <div class=\"logo\">\r\n              <img width=\"64px\" src=\"assets/logo.svg\" />\r\n            </div>\r\n            <div class=\"appname\">\r\n              <a>EOSETF</a>\r\n            </div>\r\n            <div class=\"accountname\">\r\n              {accountname == \"\" ? <a>not signed in</a> : accountname}\r\n            </div>\r\n            <div class=\"menuitemswrapper\">\r\n              <table class=\"menuitems\">\r\n                <tr onClick={() => setView(\"create\")}>\r\n                  <td><img class=\"menuimg\" src=\"assets/productbox1.svg\" /></td>\r\n                  <td><a class=\"menuitemtext\">Create</a></td>\r\n                </tr>\r\n                <tr onClick={() => setView(\"redeem\")}>\r\n                  <td><img class=\"menuimg\" src=\"assets/productbox2.svg\" /></td>\r\n                  <td><a class=\"menuitemtext\">Redeem</a></td>\r\n                </tr>\r\n                <tr onClick={() => window.open('https://newdex.io/', \"_blank\")}>\r\n                  <td><img class=\"menuimg\" src=\"assets/checkout.svg\" /></td>\r\n                  <td><a class=\"menuitemtext\">Buy</a></td>\r\n                </tr>\r\n                {accountname == \"\" ?\r\n                  <tr onClick={() => showModal()}>\r\n                    <td><img class=\"menuimg\" src=\"assets/login.svg\" /></td>\r\n                    <td><a class=\"menuitemtext\">Login</a></td>\r\n                  </tr>\r\n                  :\r\n                  <tr onClick={() => logmeout()}>\r\n                    <td><img class=\"menuimg\" src=\"assets/logout.svg\" /></td>\r\n                    <td><a class=\"menuitemtext\">Logout</a></td>\r\n                  </tr>\r\n                }\r\n              </table>\r\n            </div>\r\n          </div>\r\n          {view == \"create\" ?\r\n          <div class=\"rightbar\">\r\n            <div class=\"rightbartopbox\">\r\n              <div class=\"createetftitle\">\r\n                <a>Create EOSETF</a>\r\n              </div>\r\n              <div class=\"slidertext\">\r\n                <a>You are creating <a class=\"highlighttext\">{tokens}</a> EOSETF.</a>\r\n              </div>\r\n              <div class=\"slider\">\r\n                <CustomSlider\r\n                  defaultValue={1.0000}\r\n                  aria-label=\"custom thumb label\"\r\n                  step={1.0000}\r\n                  min={0}\r\n                  max={10.0000}\r\n                  onChangeCommitted={(e, val) => setTokens(val)}\r\n                  style={{\r\n                    marginBottom: \"10px\",\r\n                    \"margin-top\": \"10px\",\r\n                    color: \"white\",\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <Scrollbars style={{ width: \"100%\", height: \"90%\" }} autoHide >\r\n            <div class=\"rightbar\">\r\n            <div class=\"smallcard\">\r\n              <div class=\"tokenlogo\">\r\n                <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\r\n              </div>\r\n              <div class=\"smallcardtext\">\r\n                <a>Send: 100 DAPP tokens</a>\r\n              </div>\r\n              <div class=\"trxbutton\">\r\n                <img class=\"trximage\" height=\"100%\" src=\"assets/connection.svg\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"smallcard\">\r\n              <div class=\"tokenlogo\">\r\n                <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\r\n              </div>\r\n              <div class=\"smallcardtext\">\r\n                <a>Send: 100 DAPP tokens</a>\r\n              </div>\r\n              <div class=\"trxbutton\">\r\n                <img class=\"trximage\" height=\"100%\" src=\"assets/connection.svg\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"smallcard\">\r\n              <div class=\"tokenlogo\">\r\n                <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\r\n              </div>\r\n              <div class=\"smallcardtext\">\r\n                <a>Send: 100 DAPP tokens</a>\r\n              </div>\r\n              <div class=\"trxbutton\">\r\n                <img class=\"trximage\" height=\"100%\" src=\"assets/connection.svg\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"smallcard\">\r\n              <div class=\"tokenlogo\">\r\n                <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\r\n              </div>\r\n              <div class=\"smallcardtext\">\r\n                <a>Send: 100 DAPP tokens</a>\r\n              </div>\r\n              <div class=\"trxbutton\">\r\n                <img class=\"trximage\" height=\"100%\" src=\"assets/connection.svg\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"smallcard\">\r\n              <div class=\"tokenlogo\">\r\n                <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\r\n              </div>\r\n              <div class=\"smallcardtext\">\r\n                <a>Send: 100 DAPP tokens</a>\r\n              </div>\r\n              <div class=\"trxbutton\">\r\n                <img class=\"trximage\" height=\"100%\" src=\"assets/connection.svg\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"smallcard\">\r\n              <div class=\"tokenlogo\">\r\n                <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\r\n              </div>\r\n              <div class=\"smallcardtext\">\r\n                <a>Send: 100 DAPP tokens</a>\r\n              </div>\r\n              <div class=\"trxbutton\">\r\n                <img class=\"trximage\" height=\"100%\" src=\"assets/connection.svg\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"smallcard\">\r\n              <div class=\"tokenlogo\">\r\n                <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\r\n              </div>\r\n              <div class=\"smallcardtext\">\r\n                <a>Send: 100 DAPP tokens</a>\r\n              </div>\r\n              <div class=\"trxbutton\">\r\n                <img class=\"trximage\" height=\"100%\" src=\"assets/connection.svg\" />\r\n              </div>\r\n            </div>\r\n            </div>\r\n            </Scrollbars>\r\n            <div class=\"fade\" />\r\n            <button onClick={() => send()} class=\"createbutton\">Create EOSETF</button>\r\n          </div>\r\n          : view == \"redeem\" ?\r\n          <div class=\"rightbar\">\r\n            <div class=\"rightbartopbox\">\r\n              <div class=\"createetftitle\">\r\n                <a>Redeem EOSETF</a>\r\n              </div>\r\n              <div class=\"slidertext\">\r\n                <a>You are redeeming <a class=\"highlighttext\">{tokens}</a> EOSETF.</a>\r\n              </div>\r\n              <div class=\"slider\">\r\n                <CustomSlider\r\n                  defaultValue={1.0000}\r\n                  aria-label=\"custom thumb label\"\r\n                  step={1.0000}\r\n                  min={0}\r\n                  max={10.0000}\r\n                  onChangeCommitted={(e, val) => setTokens(val)}\r\n                  style={{\r\n                    marginBottom: \"10px\",\r\n                    \"margin-top\": \"10px\",\r\n                    color: \"white\",\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <Scrollbars style={{ width: \"100%\", height: \"90%\" }} autoHide >\r\n            <div class=\"rightbar\">\r\n            <div class=\"smallcard\">\r\n              <div class=\"tokenlogo\">\r\n                <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\r\n              </div>\r\n              <div class=\"smallcardtext\">\r\n                <a>You will get: 100 DAPP tokens</a>\r\n              </div>\r\n              <div class=\"trxbutton\">\r\n                <img class=\"trximage\" height=\"100%\" src=\"assets/connection.svg\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"smallcard\">\r\n              <div class=\"tokenlogo\">\r\n                <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\r\n              </div>\r\n              <div class=\"smallcardtext\">\r\n                <a>You will get: 100 DAPP tokens</a>\r\n              </div>\r\n              <div class=\"trxbutton\">\r\n                <img class=\"trximage\" height=\"100%\" src=\"assets/connection.svg\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"smallcard\">\r\n              <div class=\"tokenlogo\">\r\n                <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\r\n              </div>\r\n              <div class=\"smallcardtext\">\r\n                <a>You will get: 100 DAPP tokens</a>\r\n              </div>\r\n              <div class=\"trxbutton\">\r\n                <img class=\"trximage\" height=\"100%\" src=\"assets/connection.svg\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"smallcard\">\r\n              <div class=\"tokenlogo\">\r\n                <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\r\n              </div>\r\n              <div class=\"smallcardtext\">\r\n                <a>You will get: 100 DAPP tokens</a>\r\n              </div>\r\n              <div class=\"trxbutton\">\r\n                <img class=\"trximage\" height=\"100%\" src=\"assets/connection.svg\" />\r\n              </div>\r\n            </div>\r\n            </div>\r\n            </Scrollbars>\r\n            <button class=\"createbutton\" onClick={() => sendetf()}>Redeem EOSETF</button>\r\n          </div>\r\n          : <a>Error</a>\r\n          }\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withUAL(App);\r\n","C:\\Users\\Admin\\Desktop\\eosetfv2\\src\\reportWebVitals.js",[],{"ruleId":"81","severity":1,"message":"82","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":12},{"ruleId":"81","severity":1,"message":"85","line":4,"column":27,"nodeType":"83","messageId":"84","endLine":4,"endColumn":36},{"ruleId":"81","severity":1,"message":"86","line":5,"column":22,"nodeType":"83","messageId":"84","endLine":5,"endColumn":32},{"ruleId":"81","severity":1,"message":"87","line":41,"column":23,"nodeType":"83","messageId":"84","endLine":41,"endColumn":32},{"ruleId":"81","severity":1,"message":"88","line":41,"column":46,"nodeType":"83","messageId":"84","endLine":41,"endColumn":51},{"ruleId":"81","severity":1,"message":"88","line":66,"column":14,"nodeType":"83","messageId":"84","endLine":66,"endColumn":19},{"ruleId":"81","severity":1,"message":"89","line":66,"column":21,"nodeType":"83","messageId":"84","endLine":66,"endColumn":33},{"ruleId":"81","severity":1,"message":"88","line":141,"column":14,"nodeType":"83","messageId":"84","endLine":141,"endColumn":19},{"ruleId":"81","severity":1,"message":"89","line":141,"column":21,"nodeType":"83","messageId":"84","endLine":141,"endColumn":33},{"ruleId":"90","severity":1,"message":"91","line":202,"column":15,"nodeType":"92","endLine":202,"endColumn":57},{"ruleId":"93","severity":1,"message":"94","line":205,"column":15,"nodeType":"92","endLine":205,"endColumn":18},{"ruleId":"95","severity":1,"message":"96","line":208,"column":28,"nodeType":"97","messageId":"98","endLine":208,"endColumn":30},{"ruleId":"93","severity":1,"message":"94","line":208,"column":36,"nodeType":"92","endLine":208,"endColumn":39},{"ruleId":"90","severity":1,"message":"91","line":213,"column":23,"nodeType":"92","endLine":213,"endColumn":75},{"ruleId":"93","severity":1,"message":"94","line":214,"column":23,"nodeType":"92","endLine":214,"endColumn":47},{"ruleId":"90","severity":1,"message":"91","line":217,"column":23,"nodeType":"92","endLine":217,"endColumn":75},{"ruleId":"93","severity":1,"message":"94","line":218,"column":23,"nodeType":"92","endLine":218,"endColumn":47},{"ruleId":"90","severity":1,"message":"91","line":221,"column":23,"nodeType":"92","endLine":221,"endColumn":72},{"ruleId":"93","severity":1,"message":"94","line":222,"column":23,"nodeType":"92","endLine":222,"endColumn":47},{"ruleId":"95","severity":1,"message":"96","line":224,"column":30,"nodeType":"97","messageId":"98","endLine":224,"endColumn":32},{"ruleId":"90","severity":1,"message":"91","line":226,"column":25,"nodeType":"92","endLine":226,"endColumn":71},{"ruleId":"93","severity":1,"message":"94","line":227,"column":25,"nodeType":"92","endLine":227,"endColumn":49},{"ruleId":"90","severity":1,"message":"91","line":231,"column":25,"nodeType":"92","endLine":231,"endColumn":72},{"ruleId":"93","severity":1,"message":"94","line":232,"column":25,"nodeType":"92","endLine":232,"endColumn":49},{"ruleId":"95","severity":1,"message":"96","line":238,"column":17,"nodeType":"97","messageId":"98","endLine":238,"endColumn":19},{"ruleId":"93","severity":1,"message":"94","line":242,"column":17,"nodeType":"92","endLine":242,"endColumn":20},{"ruleId":"93","severity":1,"message":"94","line":245,"column":17,"nodeType":"92","endLine":245,"endColumn":20},{"ruleId":"93","severity":1,"message":"94","line":245,"column":37,"nodeType":"92","endLine":245,"endColumn":62},{"ruleId":"90","severity":1,"message":"91","line":267,"column":17,"nodeType":"92","endLine":267,"endColumn":145},{"ruleId":"93","severity":1,"message":"94","line":270,"column":17,"nodeType":"92","endLine":270,"endColumn":20},{"ruleId":"90","severity":1,"message":"91","line":273,"column":17,"nodeType":"92","endLine":273,"endColumn":83},{"ruleId":"90","severity":1,"message":"91","line":279,"column":17,"nodeType":"92","endLine":279,"endColumn":145},{"ruleId":"93","severity":1,"message":"94","line":282,"column":17,"nodeType":"92","endLine":282,"endColumn":20},{"ruleId":"90","severity":1,"message":"91","line":285,"column":17,"nodeType":"92","endLine":285,"endColumn":83},{"ruleId":"90","severity":1,"message":"91","line":291,"column":17,"nodeType":"92","endLine":291,"endColumn":145},{"ruleId":"93","severity":1,"message":"94","line":294,"column":17,"nodeType":"92","endLine":294,"endColumn":20},{"ruleId":"90","severity":1,"message":"91","line":297,"column":17,"nodeType":"92","endLine":297,"endColumn":83},{"ruleId":"90","severity":1,"message":"91","line":303,"column":17,"nodeType":"92","endLine":303,"endColumn":145},{"ruleId":"93","severity":1,"message":"94","line":306,"column":17,"nodeType":"92","endLine":306,"endColumn":20},{"ruleId":"90","severity":1,"message":"91","line":309,"column":17,"nodeType":"92","endLine":309,"endColumn":83},{"ruleId":"90","severity":1,"message":"91","line":315,"column":17,"nodeType":"92","endLine":315,"endColumn":145},{"ruleId":"93","severity":1,"message":"94","line":318,"column":17,"nodeType":"92","endLine":318,"endColumn":20},{"ruleId":"90","severity":1,"message":"91","line":321,"column":17,"nodeType":"92","endLine":321,"endColumn":83},{"ruleId":"90","severity":1,"message":"91","line":327,"column":17,"nodeType":"92","endLine":327,"endColumn":145},{"ruleId":"93","severity":1,"message":"94","line":330,"column":17,"nodeType":"92","endLine":330,"endColumn":20},{"ruleId":"90","severity":1,"message":"91","line":333,"column":17,"nodeType":"92","endLine":333,"endColumn":83},{"ruleId":"90","severity":1,"message":"91","line":339,"column":17,"nodeType":"92","endLine":339,"endColumn":145},{"ruleId":"93","severity":1,"message":"94","line":342,"column":17,"nodeType":"92","endLine":342,"endColumn":20},{"ruleId":"90","severity":1,"message":"91","line":345,"column":17,"nodeType":"92","endLine":345,"endColumn":83},{"ruleId":"95","severity":1,"message":"96","line":353,"column":18,"nodeType":"97","messageId":"98","endLine":353,"endColumn":20},{"ruleId":"93","severity":1,"message":"94","line":357,"column":17,"nodeType":"92","endLine":357,"endColumn":20},{"ruleId":"93","severity":1,"message":"94","line":360,"column":17,"nodeType":"92","endLine":360,"endColumn":20},{"ruleId":"93","severity":1,"message":"94","line":360,"column":38,"nodeType":"92","endLine":360,"endColumn":63},{"ruleId":"90","severity":1,"message":"91","line":382,"column":17,"nodeType":"92","endLine":382,"endColumn":145},{"ruleId":"93","severity":1,"message":"94","line":385,"column":17,"nodeType":"92","endLine":385,"endColumn":20},{"ruleId":"90","severity":1,"message":"91","line":388,"column":17,"nodeType":"92","endLine":388,"endColumn":83},{"ruleId":"90","severity":1,"message":"91","line":394,"column":17,"nodeType":"92","endLine":394,"endColumn":145},{"ruleId":"93","severity":1,"message":"94","line":397,"column":17,"nodeType":"92","endLine":397,"endColumn":20},{"ruleId":"90","severity":1,"message":"91","line":400,"column":17,"nodeType":"92","endLine":400,"endColumn":83},{"ruleId":"90","severity":1,"message":"91","line":406,"column":17,"nodeType":"92","endLine":406,"endColumn":145},{"ruleId":"93","severity":1,"message":"94","line":409,"column":17,"nodeType":"92","endLine":409,"endColumn":20},{"ruleId":"90","severity":1,"message":"91","line":412,"column":17,"nodeType":"92","endLine":412,"endColumn":83},{"ruleId":"90","severity":1,"message":"91","line":418,"column":17,"nodeType":"92","endLine":418,"endColumn":145},{"ruleId":"93","severity":1,"message":"94","line":421,"column":17,"nodeType":"92","endLine":421,"endColumn":20},{"ruleId":"90","severity":1,"message":"91","line":424,"column":17,"nodeType":"92","endLine":424,"endColumn":83},{"ruleId":"93","severity":1,"message":"94","line":431,"column":13,"nodeType":"92","endLine":431,"endColumn":16},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'makeStyles' is defined but never used.","'hideModal' is assigned a value but never used.","'login' is assigned a value but never used.","'displayError' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]