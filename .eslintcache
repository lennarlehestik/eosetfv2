[{"C:\\Users\\Kasutaja\\Desktop\\eosetf\\src\\reportWebVitals.js":"1","C:\\Users\\Kasutaja\\Desktop\\eosetf\\src\\App.js":"2"},{"size":362,"mtime":1606379858196,"results":"3","hashOfConfig":"4"},{"size":71376,"mtime":1614533323615,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9mcfsq",{"filePath":"8","messages":"9","errorCount":0,"warningCount":190,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"C:\\Users\\Kasutaja\\Desktop\\eosetf\\src\\reportWebVitals.js",[],"C:\\Users\\Kasutaja\\Desktop\\eosetf\\src\\App.js",["11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Slider } from '@material-ui/core';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { withUAL } from \"ual-reactjs-renderer\";\r\nimport Swal from \"sweetalert2\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ReactGA from \"react-ga\";\r\nimport { Bar, Pie, Doughnut } from 'react-chartjs-2';\r\n//import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst CustomSlider = withStyles({\r\n  root: {\r\n    color: '#52af77',\r\n    height: 8,\r\n  },\r\n  thumb: {\r\n    height: 24,\r\n    width: 24,\r\n    backgroundColor: '#fff',\r\n    border: '2px solid currentColor',\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n    '&:focus, &:hover, &$active': {\r\n      boxShadow: 'inherit',\r\n    },\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: 'calc(-50% + 4px)',\r\n  },\r\n  track: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n  rail: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n})(Slider);\r\n\r\nfunction App(props) {\r\n\r\n\r\n\r\n\r\n  const {\r\n    ual: { showModal, hideModal, activeUser, login, logout },\r\n  } = props;\r\n  if (activeUser) {\r\n    const accountName = activeUser.getAccountName();\r\n    accountName.then(function (result) {\r\n      setAccountName(result);\r\n    });\r\n  }\r\n  const displayaccountname = () => {\r\n    if (accountname) {\r\n      return accountname;\r\n    }\r\n  };\r\n  const [drawerstate, setDrawerstate] = useState(false)\r\n  const [tokens, setTokens] = useState(0)\r\n  const [redeemtokens, setRedeemtokens] = useState(0)\r\n  const [view, setView] = useState(\"create\")\r\n  const [accountname, setAccountName] = useState(\"\")\r\n\r\n  const logmeout = () => {\r\n    logout()\r\n    setAccountName(\"\")\r\n  }\r\n\r\n  /*\r\n    const efxmult = 2.6911\r\n    const dadmult = 0.880282\r\n    const iqmult = 26.233\r\n    const vigmult = 125.0000\r\n    const dappmult = 12.6263\r\n    const boxmult = 0.036075\r\n    const ogxmult = 2.13675214\r\n\r\n    const chexmult = 56.94760820\r\n    const pizzamult = 9.4696\r\n    const dfsmult = 0.0361\r\n    const emtmult = 16.3399\r\n    const ndxmult = 338.5071\r\n    const tptmult = 17.9856\r\n  */\r\n\r\n\r\n\r\n  const efxmult = 2.6911\r\n  const dadmult = 0.880282\r\n  const iqmult = 26.233\r\n  const vigmult = 125.0000\r\n  const dappmult = 12.6263\r\n  const boxmult = 0.036075\r\n  const ogxmult = 2.13675214\r\n\r\n  const chexmult = 56.94760820\r\n  const pizzamult = 9.4696\r\n  const dfsmult = 0.0361\r\n  const emtmult = 16.3399\r\n  const ndxmult = 338.5071\r\n  const tptmult = 17.9856\r\n\r\n\r\n  const sucessstake = () => {\r\n    const Toast = Swal.mixin({\r\n      toast: true,\r\n      position: \"bottom-end\",\r\n      showConfirmButton: false,\r\n      timer: 6000,\r\n      timerProgressBar: true,\r\n      onOpen: (toast) => {\r\n        toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n        toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n      },\r\n    });\r\n    Toast.fire({\r\n      icon: \"success\",\r\n      title: \"CETF and EOSETF successfully issued!\",\r\n    });\r\n  };\r\n\r\n  const sucessredemption = () => {\r\n    const Toast = Swal.mixin({\r\n      toast: true,\r\n      position: \"bottom-end\",\r\n      showConfirmButton: false,\r\n      timer: 6000,\r\n      timerProgressBar: true,\r\n      onOpen: (toast) => {\r\n        toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n        toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n      },\r\n    });\r\n    Toast.fire({\r\n      icon: \"success\",\r\n      title: \"Tokens successfully redeemed!\",\r\n    });\r\n  };\r\n\r\n\r\n\r\n  const actionpuccis = (err) => {\r\n    const Toast = Swal.mixin({\r\n      toast: true,\r\n      position: \"bottom-end\",\r\n      showConfirmButton: false,\r\n      timer: 5000,\r\n      timerProgressBar: true,\r\n      didOpen: (toast) => {\r\n        toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n        toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n      },\r\n    });\r\n    Toast.fire({\r\n      icon: \"error\",\r\n      title: err,\r\n    });\r\n  };\r\n\r\n\r\n  const [ogxbalance, setOgx] = useState({ rows: [] });\r\n  const [dadbalance, setDad] = useState({ rows: [] });\r\n  const [boxbalance, setBox] = useState({ rows: [] });\r\n  const [vigbalance, setVig] = useState({ rows: [] });\r\n  const [iqbalance, setIq] = useState({ rows: [] });\r\n  const [efxbalance, setEfx] = useState({ rows: [] });\r\n  const [dappbalance, setDapp] = useState({ rows: [] });\r\n\r\n  const [chexbalance, setChex] = useState({ rows: [] });\r\n  const [pizzabalance, setPizza] = useState({ rows: [] });\r\n  const [dfsbalance, setDfs] = useState({ rows: [] });\r\n  const [emtbalance, setEmt] = useState({ rows: [] });\r\n  const [ndxbalance, setNdx] = useState({ rows: [] });\r\n  const [tptbalance, setTpt] = useState({ rows: [] });\r\n\r\n  const [govrnprice, setGovrnprice] = useState({ rows: [] });\r\n  const [dadpriceeos, setDadprice] = useState({ rows: [] });\r\n\r\n  const [prices, setPrices] = useState([]);\r\n\r\n  const [eosetfbalance, setEosetf] = useState({ rows: [] });\r\n  const [etfbalance, setEtf] = useState({ rows: [] });\r\n  const [eosetfbalanceind, setEosetfind] = useState({ rows: [] });\r\n  const [etfbalanceind, setEtfind] = useState({ rows: [] });\r\n\r\n  const menuClick = (which) => {\r\n    setView(which)\r\n    setDrawerstate(false)\r\n  }\r\n\r\n  /*\r\n\r\n    const getdata = () => {\r\n      fetch('https://api.newdex.io/v1/price?symbol=consortiumlv-govrn-eos')\r\n        .then(response => response.json())\r\n        .then(data => console.log(data.data.price));\r\n\r\n      );\r\n\r\n    }\r\n    '\r\n\r\n  useEffect(() => {\r\n    fetch('https://api.newdex.io/v1/price?symbol=consortiumlv-govrn-eos', {\r\n    }).then((response) =>\r\n      response.json().then((govrnprice) => setGovrnprice(govrnprice.data.price))\r\n    );\r\n    console.log(govrnprice);\r\n\r\n  }, [accountname]);\r\n\r\n\r\n  const getdata = () => {\r\n    fetch('https://api.newdex.io/v1/price?symbol=consortiumlv-govrn-eos', {\r\n    }).then((response) =>\r\n      response.json().then((govrnprice) => setGovrnprice(govrnprice.data.price))\r\n    );\r\n    console.log(govrnprice);\r\n  }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n      fetch('https://api.newdex.io/v1/price?symbol=consortiumlv-govrn-eos', {\r\n    }).then((response) =>\r\n      response.json().then((govrnprice) => setGovrnprice(govrnprice))\r\n    );\r\n    console.log(govrnprice);\r\n\r\n    }, [accountname]);\r\n\r\n\r\n\r\n    */\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"swap.defi\",\r\n        table: \"pairs\",\r\n        scope: \"swap.defi\",\r\n        lower_bound: 588,\r\n        upper_bound: 588,\r\n        limit: 1,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((dadpriceeos) => setDadprice(dadpriceeos))\r\n    );\r\n  }, [accountname]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetch('https://api.newdex.io/v1/price?symbol=consortiumlv-govrn-eos', {\r\n    }).then((response) =>\r\n      response.json().then((govrnprice) => setGovrnprice(govrnprice.data.price))\r\n    );\r\n    console.log(govrnprice);\r\n\r\n  }, [accountname]);\r\n\r\n\r\n  useEffect(() => {\r\n    const newdexcomms = [{ community: \"box\", symbol: \"token.defi-box-eos\" }, { community: \"ogx\", symbol: \"core.ogx-ogx-eos\" }, { community: \"iq\", symbol: \"everipediaiq-iq-eos\" }\r\n      , { community: \"dapp\", symbol: \"dappservices-dapp-eos\" }, { community: \"vig\", symbol: \"vig111111111-vig-eos\" }, { community: \"efx\", symbol: \"effecttokens-efx-eos\" }, { community: \"chex\", symbol: \"chexchexchex-chex-eos\" }, { community: \"pizza\", symbol: \"pizzatotoken-pizza-eos\" }\r\n      , { community: \"dfs\", symbol: \"minedfstoken-dfs-eos\" }, { community: \"emt\", symbol: \"emanateoneos-emt-eos\" }, { community: \"ndx\", symbol: \"newdexissuer-ndx-eos\" }, { community: \"tpt\", symbol: \"eosiotptoken-tpt-eos\" }]\r\n    newdexcomms.forEach((item) => {\r\n      fetch('https://api.newdex.io/v1/price?symbol=' + item.symbol)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          Object.assign(item, { price: data?.data?.price })\r\n          setPrices([...newdexcomms]);\r\n        }\r\n        )\r\n    })\r\n    console.log(prices)\r\n  }, [accountname]);\r\n\r\n  const getprice = (community) => {\r\n    if (prices) {\r\n      const datar = prices.filter(\r\n        function (data) { return data.community == community }\r\n      );\r\n      if (datar[0])\r\n        return datar[0].price\r\n    }\r\n  }\r\n\r\n\r\n  const getdadprice = () => {\r\n    if (dadpriceeos.rows[0]) {\r\n      return Number(dadpriceeos.rows[0].price1_last);\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const getpricesum = () => {\r\n    if (prices) {\r\n\r\n\r\n\r\n      return getprice(\"box\") * boxmult + getprice(\"ogx\") * ogxmult + getprice(\"iq\") * iqmult + getprice(\"dapp\") * dappmult + getprice(\"vig\") * vigmult + getprice(\"efx\") * efxmult + getprice(\"chex\") * chexmult\r\n        + getprice(\"pizza\") * pizzamult + getprice(\"dfs\") * dfsmult + getprice(\"emt\") * emtmult + getprice(\"ndx\") * ndxmult + getprice(\"tpt\") * tptmult + getdadprice() * dadmult;\r\n\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const data = {\r\n    labels: ['BOX', 'OGX', 'IQ', 'DAPP', 'VIG', 'EFX', 'CHEX', 'PIZZA', 'DFS', 'EMT', 'NDX', 'TPT', 'DAD'],\r\n    datasets: [\r\n      {\r\n        label: 'ETF weight',\r\n        fill: true,\r\n        lineTension: 0.1,\r\n        backgroundColor: [\"#f17ae9\", \"#f9a9f1\", \"#fdd5f8\", \"#ffffff\", \"#cbf0ff\", \"#8fe1ff\", \"#21d2ff\", \"#f9a9f1\", \"#fdd5f8\", \"#ffffff\", \"#cbf0ff\", \"#8fe1ff\", \"#21d2ff\"],\r\n        borderCapStyle: 'butt',\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: 'miter',\r\n        data: [parseFloat((getprice(\"box\") * boxmult / getpricesum() * 100)).toFixed(2), parseFloat((getprice(\"ogx\") * ogxmult / getpricesum() * 100)).toFixed(2), parseFloat((getprice(\"iq\") * iqmult / getpricesum() * 100)).toFixed(2), parseFloat((getprice(\"dapp\") * dappmult / getpricesum() * 100)).toFixed(2),\r\n        parseFloat((getprice(\"vig\") * vigmult / getpricesum() * 100)).toFixed(2), parseFloat((getprice(\"efx\") * efxmult / getpricesum() * 100)).toFixed(2), parseFloat((getprice(\"chex\") * chexmult / getpricesum() * 100)).toFixed(2), parseFloat((getprice(\"pizza\") * pizzamult / getpricesum() * 100)).toFixed(2),\r\n        parseFloat((getprice(\"dfs\") * dfsmult / getpricesum() * 100)).toFixed(2), parseFloat((getprice(\"emt\") * emtmult / getpricesum() * 100)).toFixed(2), parseFloat((getprice(\"ndx\") * ndxmult / getpricesum() * 100)).toFixed(2), parseFloat((getprice(\"tpt\") * tptmult / getpricesum() * 100)).toFixed(2), parseFloat((getdadprice() * dadmult / getpricesum() * 100)).toFixed(2)]\r\n      }\r\n    ]\r\n  };\r\n\r\n\r\n\r\n  //price1_last\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"consortiumtt\",\r\n        table: \"accounts\",\r\n        scope: displayaccountname(),\r\n        limit: 3,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((etfbalanceind) => setEtfind(etfbalanceind))\r\n    );\r\n  }, [accountname]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"consortiumtt\",\r\n        table: \"accounts\",\r\n        scope: displayaccountname(),\r\n        limit: 3,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((eosetfbalanceind) => setEosetfind(eosetfbalanceind))\r\n    );\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"consortiumtt\",\r\n        table: \"statnew\",\r\n        scope: \"ETF\",\r\n        limit: 1,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((etfbalance) => setEtf(etfbalance))\r\n    );\r\n  }, [accountname]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"consortiumtt\",\r\n        table: \"statnew\",\r\n        scope: \"EOSETF\",\r\n        limit: 1,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((eosetfbalance) => setEosetf(eosetfbalance))\r\n    );\r\n  }, [accountname]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"core.ogx\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((ogxbalance) => setOgx(ogxbalance))\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"dadtoken1111\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((dadbalance) => setDad(dadbalance))\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"token.defi\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((boxbalance) => setBox(boxbalance))\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"vig111111111\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((vigbalance) => setVig(vigbalance))\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"everipediaiq\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((iqbalance) => setIq(iqbalance))\r\n\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"effecttokens\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((efxbalance) => setEfx(efxbalance))\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"dappservices\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((dappbalance) => setDapp(dappbalance))\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"chexchexchex\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((chexbalance) => setChex(chexbalance))\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"pizzatotoken\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((pizzabalance) => setPizza(pizzabalance))\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"minedfstoken\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((dfsbalance) => setDfs(dfsbalance))\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"emanateoneos\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((emtbalance) => setEmt(emtbalance))\r\n\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"newdexissuer\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((ndxbalance) => setNdx(ndxbalance))\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"eosiotptoken\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((tptbalance) => setTpt(tptbalance))\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const gettokenbalance = (token) => {\r\n    if (token.rows[0]) {\r\n      return Number(token.rows[0].balance.split(\" \")[0]);\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const gettokenbalanceone = (token) => {\r\n    if (token.rows[0]) {\r\n      return Math.floor(Number(token.rows[0].balance.split(\" \")[0]));\r\n      //return (token.rows[0].balance);\r\n\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const gettokenbalancetwo = (token) => {\r\n    if (token.rows[1]) {\r\n      return Math.floor(Number(token.rows[1].balance.split(\" \")[0]));\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n\r\n  const gettokensupply = (token) => {\r\n    if (token.rows[0]) {\r\n      return Math.floor(Number(token.rows[0].supply.split(\" \")[0]));\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const halvingdivider = () => {\r\n    if (etfbalance.rows[0]) {\r\n      return parseInt(\r\n        Math.pow(\r\n          2,\r\n          parseInt(\r\n            Math.floor(Number(etfbalance.rows[0].supply.split(\" \")[0])) /\r\n            5000000\r\n          )\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  const creationreward = () => {\r\n    return parseInt(\r\n      120000 /\r\n      halvingdivider()\r\n    );\r\n  };\r\n\r\n\r\n  const halvings = (totalcirc) => {\r\n    if (totalcirc < 5000000) {\r\n      return 0;\r\n    } else if (totalcirc >> 5000000 && totalcirc < 10000000) {\r\n      return 1;\r\n    } else if (totalcirc >> 10000000 && totalcirc < 15000000) {\r\n      return 2;\r\n    } else if (totalcirc >> 15000000 && totalcirc < 20000000) {\r\n      return 3;\r\n    } else if (totalcirc >> 20000000 && totalcirc < 25000000) {\r\n      return 4;\r\n    } else if (totalcirc >> 25000000 && totalcirc < 30000000) {\r\n      return 5;\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const send = async () => {\r\n    const {\r\n      ual: { login, displayError, showModal },\r\n    } = props;\r\n    // Via static contextType = UALContext, access to the activeUser object on this.context is now available\r\n    const {\r\n      ual: { activeUser },\r\n    } = props;\r\n\r\n    //console.log(getdapp())\r\n\r\n    if (activeUser) {\r\n      try {\r\n        const transaction = {\r\n          actions: [\r\n            {\r\n              account: \"dappservices\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 19.2562 * tokens + \" DAPP\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(dappmult * tokens).toFixed(4) + \" DAPP\",\r\n\r\n              },\r\n            },\r\n\r\n\r\n            {\r\n              account: \"effecttokens\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 10.6593 * tokens + \" EFX\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(efxmult * tokens).toFixed(4) + \" EFX\",\r\n\r\n              },\r\n            },\r\n\r\n\r\n\r\n            {\r\n              account: \"core.ogx\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 1.26108207 * tokens + \" OGX\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(ogxmult * tokens).toFixed(8) + \" OGX\",\r\n              },\r\n            },\r\n\r\n\r\n\r\n\r\n            {\r\n              account: \"everipediaiq\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 50.082 * tokens + \" IQ\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(iqmult * tokens).toFixed(3) + \" IQ\",\r\n\r\n              },\r\n            },\r\n\r\n\r\n\r\n            {\r\n              account: \"vig111111111\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 196.7187 * tokens + \" VIG\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(vigmult * tokens).toFixed(4) + \" VIG\",\r\n\r\n              },\r\n            },\r\n\r\n\r\n            {\r\n              account: \"token.defi\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 0.035523 * tokens + \" BOX\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(boxmult * tokens).toFixed(6) + \" BOX\",\r\n\r\n              },\r\n            },\r\n\r\n\r\n            {\r\n              account: \"dadtoken1111\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: efxmult * tokens + \" DAD\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(dadmult * tokens).toFixed(6) + \" DAD\",\r\n\r\n              },\r\n            },\r\n\r\n\r\n\r\n\r\n\r\n            {\r\n              account: \"pizzatotoken\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 10.6593 * tokens + \" EFX\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(pizzamult * tokens).toFixed(4) + \" PIZZA\",\r\n\r\n              },\r\n            },\r\n\r\n\r\n\r\n            {\r\n              account: \"chexchexchex\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 10.6593 * tokens + \" EFX\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(chexmult * tokens).toFixed(8) + \" CHEX\",\r\n\r\n              },\r\n            },\r\n\r\n            {\r\n              account: \"newdexissuer\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 10.6593 * tokens + \" EFX\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(ndxmult * tokens).toFixed(4) + \" NDX\",\r\n\r\n              },\r\n            },\r\n\r\n            {\r\n              account: \"eosiotptoken\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 10.6593 * tokens + \" EFX\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(tptmult * tokens).toFixed(4) + \" TPT\",\r\n\r\n              },\r\n            },\r\n\r\n            {\r\n              account: \"emanateoneos\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 10.6593 * tokens + \" EFX\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(emtmult * tokens).toFixed(4) + \" EMT\",\r\n\r\n              },\r\n            },\r\n\r\n\r\n            {\r\n              account: \"minedfstoken\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 10.6593 * tokens + \" EFX\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(dfsmult * tokens).toFixed(4) + \" DFS\",\r\n\r\n              },\r\n            },\r\n\r\n\r\n\r\n\r\n          ],\r\n        };\r\n        // The activeUser.signTransaction will propose the passed in transaction to the logged in Authenticator\r\n        await activeUser.signTransaction(transaction, {\r\n          broadcast: true,\r\n          expireSeconds: 300,\r\n        });\r\n\r\n\r\n        ReactGA.event({\r\n          category: \"Chain acion\",\r\n          action: \"User created EOSETF.\",\r\n        });\r\n\r\n        sucessstake();\r\n\r\n      } catch (error) {\r\n        console.log(error.message);\r\n        actionpuccis(\r\n          error.message\r\n        );\r\n      }\r\n    } else {\r\n      showModal();\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  const sendetf = async () => {\r\n    const {\r\n      ual: { login, displayError, showModal },\r\n    } = props;\r\n    // Via static contextType = UALContext, access to the activeUser object on this.context is now available\r\n    const {\r\n      ual: { activeUser },\r\n    } = props;\r\n\r\n\r\n    var eosetf = redeemtokens.toFixed(4);\r\n\r\n\r\n    if (activeUser) {\r\n      try {\r\n        const transaction = {\r\n          actions: [\r\n            {\r\n              account: \"consortiumtt\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                quantity: eosetf + \" EOSETF\",\r\n                memo: \"EOSETF redemption\",\r\n              },\r\n            },\r\n\r\n\r\n          ],\r\n        };\r\n        // The activeUser.signTransaction will propose the passed in transaction to the logged in Authenticator\r\n        await activeUser.signTransaction(transaction, {\r\n          broadcast: true,\r\n          expireSeconds: 300,\r\n        });\r\n\r\n        sucessredemption();\r\n\r\n\r\n        ReactGA.event({\r\n          category: \"Chain acion\",\r\n          action: \"User redeemed tokens.\",\r\n        });\r\n\r\n        //alert(\"GREAT SUCCESS!\")\r\n        //window.location.reload(false);\r\n\r\n      } catch (error) {\r\n        console.log(error.message);\r\n        actionpuccis(\r\n          error.message\r\n        );\r\n      }\r\n    } else {\r\n      showModal();\r\n    }\r\n  };\r\n\r\n  const toggleDrawer = (open) => (event) => {\r\n    setDrawerstate(open);\r\n  };\r\n\r\n  const compare = () => {\r\n    const a = parseFloat(vigmult * tokens).toFixed(4)\r\n    const b = gettokenbalance(vigbalance)\r\n    const c = Math.floor(a * 100) > Math.floor(b * 100)\r\n    return c\r\n\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"App\">\r\n      <ReactTooltip id=\"all\" place=\"bottom\" type=\"dark\"\r\n        effect=\"solid\"\r\n        backgroundColor=\"black\"\r\n        style={{\r\n          fontWeight: \"bold\",\r\n        }} />\r\n\r\n      <header className=\"App-header\">\r\n        <div class=\"outsidebutton githubbutton\" onClick={() => window.open('https://github.com', \"_blank\")}><img class=\"outsideimgright\" src=\"assets/github.png\" /><div class=\"outsidebuttontext\">GIT</div></div>\r\n        <div class=\"outsidebutton telegrambutton\" onClick={() => window.open('https://telegram.org', \"_blank\")}><img class=\"outsideimgright\" src=\"assets/telegram.webp\" /><div class=\"outsidebuttontext\">TG</div></div>\r\n        <img src=\"assets/burger.svg\" class=\"menubutton\" onClick={toggleDrawer(true)} />\r\n        <div class=\"maincard\">\r\n          <div class=\"outsidebutton govrnbutton\" onClick={() => window.open('https://app.consortium.vote/community/zlmdhu2blclw', \"_blank\")}><img class=\"outsideimg\" src=\"assets/consologo.png\" /><div class=\"outsidebuttontext\">VOTE</div></div>\r\n          <div class=\"outsidebutton buybutton\" onClick={() => window.open('https://newdex.io/', \"_blank\")}><img class=\"outsideimg\" src=\"assets/newdex.png\" /><div class=\"outsidebuttontext\">BUY/SELL</div></div>\r\n          <Drawer\r\n            anchor=\"right\"\r\n            open={drawerstate}\r\n            onClose={toggleDrawer(false)}\r\n            onOpen={toggleDrawer(true)}\r\n            opacity=\"0.5\"\r\n          >\r\n            <div class=\"sidemenu\">\r\n              <div class=\"mobilemenu\">\r\n                <div class=\"logo\">\r\n                  <img width=\"64px\" src=\"assets/logo.svg\" />\r\n                </div>\r\n                <div class=\"appname\">\r\n                  <a>CETF</a>\r\n                </div>\r\n                <div class=\"accountname\">\r\n                  {accountname == \"\" ? <a>not logged in</a> : accountname}\r\n                </div>\r\n                <div class=\"menuitemswrapper\">\r\n                  <table class=\"menuitems\">\r\n                    <tr onClick={() => menuClick(\"create\")}>\r\n                      <td><img class=\"menuimg\" src=\"assets/productbox1.svg\" /></td>\r\n                      <td><a class=\"menuitemtext\">Create</a></td>\r\n                    </tr>\r\n                    <tr onClick={() => menuClick(\"redeem\")}>\r\n                      <td><img class=\"menuimg\" src=\"assets/productbox2.svg\" /></td>\r\n                      <td><a class=\"menuitemtext\">Redeem</a></td>\r\n                    </tr>\r\n                    <tr onClick={() => window.open('https://newdex.io/', \"_blank\")}>\r\n                      <td><img class=\"menuimg\" src=\"assets/checkout.svg\" /></td>\r\n                      <td><a class=\"menuitemtext\">Buy</a></td>\r\n                    </tr>\r\n                    <tr onClick={() => window.open('https://app.consortium.vote/', \"_blank\")}>\r\n                      <td><img class=\"menuimg\" src=\"assets/govern.svg\" /></td>\r\n                      <td><a class=\"menuitemtext\">Govern</a></td>\r\n                    </tr>\r\n                    <tr onClick={() => menuClick(\"stats\")}>\r\n                      <td><img class=\"menuimg\" src=\"assets/stats.svg\" /></td>\r\n                      <td><a class=\"menuitemtext\">Balances</a></td>\r\n                    </tr>\r\n                    <tr onClick={() => menuClick(\"about\")}>\r\n                      <td><img class=\"menuimg\" src=\"assets/briefcase.svg\" /></td>\r\n                      <td><a class=\"menuitemtext\">Tokens</a></td>\r\n                    </tr>\r\n                    <tr onClick={() => window.open('https://telegram.org/', \"_blank\")}>\r\n                      <td><img class=\"menuimg\" src=\"assets/telegram.svg\" /></td>\r\n                      <td><a class=\"menuitemtext\">Telegram</a></td>\r\n                    </tr>\r\n                    <tr onClick={() => window.open('https://github.com/', \"_blank\")}>\r\n                      <td><img class=\"menuimg\" src=\"assets/github.svg\" /></td>\r\n                      <td><a class=\"menuitemtext\">Github</a></td>\r\n                    </tr>\r\n                    {accountname == \"\" ?\r\n                      <tr onClick={() => showModal()}>\r\n                        <td><img class=\"menuimg\" src=\"assets/login.svg\" /></td>\r\n                        <td><a class=\"menuitemtext\">Login</a></td>\r\n                      </tr>\r\n                      :\r\n                      <tr onClick={() => logmeout()}>\r\n                        <td><img class=\"menuimg\" src=\"assets/logout.svg\" /></td>\r\n                        <td><a class=\"menuitemtext\">Logout</a></td>\r\n                      </tr>\r\n                    }\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Drawer>\r\n          <div class=\"leftbar\">\r\n            <div class=\"logo\">\r\n              <img width=\"64px\" src=\"assets/logo.svg\" />\r\n            </div>\r\n            <div class=\"appname\">\r\n              <a>CETF</a>\r\n            </div>\r\n            <div class=\"accountname\">\r\n              {accountname == \"\" ? <a>Not logged in</a> : accountname}\r\n            </div>\r\n            <div class=\"menuitemswrapper\">\r\n              <table class=\"menuitems\">\r\n                <tr onClick={() => setView(\"create\")}>\r\n                  <td><img class=\"menuimg\" src=\"assets/productbox1.svg\" /></td>\r\n                  <td><a class=\"menuitemtext\">Create</a></td>\r\n                </tr>\r\n                <tr onClick={() => setView(\"redeem\")}>\r\n                  <td><img class=\"menuimg\" src=\"assets/productbox2.svg\" /></td>\r\n                  <td><a class=\"menuitemtext\">Redeem</a></td>\r\n                </tr>\r\n                <tr onClick={() => setView(\"stats\")}>\r\n                  <td><img class=\"menuimg\" src=\"assets/stats.svg\" /></td>\r\n                  <td><a class=\"menuitemtext\">Balances</a></td>\r\n                </tr>\r\n                <tr onClick={() => setView(\"about\")}>\r\n                  <td><img class=\"menuimg\" src=\"assets/briefcase.svg\" /></td>\r\n                  <td><a class=\"menuitemtext\">Tokens</a></td>\r\n                </tr>\r\n                {accountname == \"\" ?\r\n                  <tr onClick={() => showModal()}>\r\n                    <td><img class=\"menuimg\" src=\"assets/login.svg\" /></td>\r\n                    <td><a class=\"menuitemtext\">Login</a></td>\r\n                  </tr>\r\n                  :\r\n                  <tr onClick={() => logmeout()}>\r\n                    <td><img class=\"menuimg\" src=\"assets/logout.svg\" /></td>\r\n                    <td><a class=\"menuitemtext\">Logout</a></td>\r\n                  </tr>\r\n                }\r\n              </table>\r\n            </div>\r\n          </div>\r\n          {view == \"create\" ?\r\n            <div class=\"rightbar\">\r\n              <div class=\"rightbartopbox\">\r\n                <div class=\"createetftitle\">\r\n                  <div>\r\n                    <a\r\n                      //class=\"value\"\r\n                      data-html=\"true\"\r\n                      data-for=\"all\"\r\n\r\n                      data-tip={\r\n                        \"<b>*To create EOSETF your account must hold 13 different EOS mainnet tokens.  <br/> <br/> *After creation your account is issued EOSETF and CETF tokens <br/> (starting with 30k CETF per 1 EOSETF). <br/> CETF will be used as a governance and fee distribution token.  <br/> <br/> *Each time 5m CETF are issued the issuance of CETF is halved. <br/> circulation <5m CETF | 1 EOSETF = 30k CETF<br/> circulation <10m CETF | 1 EOSETF = 15k CETF etc. <br/> <br/> *At 30m CETF (21166 EOSETF / 5 halvings) no more CETF will be issued.<br/> <br/> *Due to the initial CETF distribution, when <br/> redeeming tokens 10% less is returned. <br/> <br/>  *NB! Creation involves transfer of tokens to cet.f account,<br/> the code is unaudited, please remember that risk.</b> \"\r\n\r\n\r\n                      }\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n\r\n                      Create EOSETF\r\n\r\n                    <InfoIcon\r\n\r\n                        style={{\r\n                          height: \"20px\",\r\n                          width: \"20px\",\r\n                          color: \"black\",\r\n                          opacity: \"0.7\",\r\n                          \"margin-left\": \"2px\",\r\n                          \"vertical-align\": \"top\",\r\n                          \"margin-top\": \"-4px\",\r\n\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      />\r\n\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n                <div class=\"slidertext\">\r\n                  <a>You are creating <input style={{ \"color\": tokens > 200 ? \"red\" : \"inherit\" }} class=\"tokeninput\" type=\"number\" value={tokens} onChange={e => setTokens(e.target.value)}></input> EOSETF</a>\r\n                </div>\r\n                <div class=\"slider\">\r\n                  <CustomSlider\r\n                    defaultValue={0.0000}\r\n                    value={tokens}\r\n                    aria-label=\"custom thumb label\"\r\n                    step={1.0000}\r\n                    min={0}\r\n                    max={200.0000}\r\n                    onChangeCommitted={(e, val) => setTokens(val)}\r\n                    style={{\r\n                      marginBottom: \"10px\",\r\n                      \"margin-top\": \"10px\",\r\n                      color: \"white\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Scrollbars class=\"mask\" style={{ width: \"100%\", height: \"90%\" }} autoHide >\r\n                <div class=\"rightbar\">\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(dappmult * tokens).toFixed(4) > gettokenbalance(dappbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/dapp.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(dappmult * tokens).toFixed(4)} DAPP tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(dappmult * tokens).toFixed(4) < gettokenbalance(dappbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/193', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": compare(vigmult, tokens, vigbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/vigor.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(vigmult * tokens).toFixed(4)} VIG tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(vigmult * tokens).toFixed(4) < gettokenbalance(vigbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/11', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(iqmult * tokens).toFixed(3) > gettokenbalance(iqbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/everipedia.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(iqmult * tokens).toFixed(3)} IQ tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(iqmult * tokens).toFixed(3) < gettokenbalance(iqbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/93', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(ogxmult * tokens).toFixed(8) > gettokenbalance(ogxbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/ogx.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(ogxmult * tokens).toFixed(8)} OGX tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(ogxmult * tokens).toFixed(8) < gettokenbalance(ogxbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/878', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(boxmult * tokens).toFixed(6) > gettokenbalance(boxbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/tokendefi.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(boxmult * tokens).toFixed(6)} BOX tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(boxmult * tokens).toFixed(6) < gettokenbalance(boxbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/878', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(efxmult * tokens).toFixed(4) > gettokenbalance(efxbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/efx.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(efxmult * tokens).toFixed(4)} EFX tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(efxmult * tokens).toFixed(4) < gettokenbalance(efxbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/191', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(pizzamult * tokens).toFixed(4) > gettokenbalance(pizzabalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/pizza.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(pizzamult * tokens).toFixed(4)} PIZZA tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(pizzamult * tokens).toFixed(4) < gettokenbalance(pizzabalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/14', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(chexmult * tokens).toFixed(8) > gettokenbalance(chexbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/chex.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(chexmult * tokens).toFixed(8)} CHEX tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(chexmult * tokens).toFixed(8) < gettokenbalance(chexbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/28', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(ndxmult * tokens).toFixed(4) > gettokenbalance(ndxbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/ndx.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(ndxmult * tokens).toFixed(4)} NDX tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(ndxmult * tokens).toFixed(4) < gettokenbalance(ndxbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/1', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(tptmult * tokens).toFixed(4) > gettokenbalance(tptbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/tpt.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(tptmult * tokens).toFixed(4)} TPT tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(tptmult * tokens).toFixed(4) < gettokenbalance(tptbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/4', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(emtmult * tokens).toFixed(4) > gettokenbalance(emtbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/emt.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(emtmult * tokens).toFixed(4)} EMT tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(emtmult * tokens).toFixed(4) < gettokenbalance(emtbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/255', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(dfsmult * tokens).toFixed(4) > gettokenbalance(dfsbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/dfs.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(dfsmult * tokens).toFixed(4)} DFS tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(dfsmult * tokens).toFixed(4) < gettokenbalance(dfsbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/22', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(dadmult * tokens).toFixed(6) > gettokenbalance(dadbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/dad.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(dadmult * tokens).toFixed(6)} DAD tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(dadmult * tokens).toFixed(6) < gettokenbalance(dadbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/588', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                  <div style={{ \"display\": \"block\" }}>.</div>\r\n\r\n\r\n                </div>\r\n              </Scrollbars>\r\n              <div class=\"fade\" />\r\n              <button onClick={() => send()} class=\"createbutton\">Create EOSETF</button>\r\n            </div>\r\n\r\n\r\n            : view == \"redeem\" ?\r\n              <div class=\"rightbar\">\r\n                <div class=\"rightbartopbox\">\r\n                  <div class=\"createetftitle\">\r\n                    <div>\r\n                      <a\r\n                        //class=\"value\"\r\n                        data-html=\"true\"\r\n                        data-for=\"all\"\r\n\r\n                        data-tip={\r\n                          \"<b>*To redeem 13 tokens your account must hold EOSETF. <br/> <br/>*Due to the initial CETF distribution, when <br/> redeeming tokens 10% less is returned.</b> \"\r\n\r\n\r\n                        }\r\n                        style={{\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      >\r\n\r\n                        Redeem tokens\r\n\r\n                    <InfoIcon\r\n\r\n                          style={{\r\n                            height: \"20px\",\r\n                            width: \"20px\",\r\n                            color: \"black\",\r\n                            opacity: \"0.7\",\r\n                            \"margin-left\": \"2px\",\r\n                            \"vertical-align\": \"top\",\r\n                            \"margin-top\": \"-4px\",\r\n\r\n                            fontWeight: \"bold\",\r\n                          }}\r\n                        />\r\n\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"slidertext\">\r\n                    <a>You are redeeming <input class=\"tokeninput\" type=\"number\" value={redeemtokens} onChange={e => setRedeemtokens(e.target.value)}></input> EOSETF</a>\r\n                  </div>\r\n                  <div class=\"slider\">\r\n                    <CustomSlider\r\n                      defaultValue={0.0000}\r\n                      aria-label=\"custom thumb label\"\r\n                      step={1.0000}\r\n                      value={redeemtokens}\r\n                      min={0}\r\n                      max={200.0000}\r\n                      onChangeCommitted={(e, val) => setRedeemtokens(val)}\r\n                      style={{\r\n                        marginBottom: \"10px\",\r\n                        \"margin-top\": \"10px\",\r\n                        color: \"white\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <Scrollbars class=\"mask\" style={{ width: \"100%\", height: \"90%\" }} autoHide >\r\n                  <div class=\"rightbar\">\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/dapp.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * dappmult).toFixed(4)} DAPP tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/vigor.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * vigmult).toFixed(4)} VIG tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/everipedia.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * iqmult).toFixed(3)} IQ tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/ogx.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * ogxmult).toFixed(8)} OGX tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/tokendefi.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * boxmult).toFixed(6)} BOX tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/efx.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * efxmult).toFixed(4)} EFX tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/dad.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * dadmult).toFixed(6)} DAD tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n                    <div style={{ \"display\": \"block\" }}>.</div>\r\n\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/dfs.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * dfsmult).toFixed(4)} DFS tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/emt.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * emtmult).toFixed(4)} EMT tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/tpt.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * tptmult).toFixed(4)} TPT tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/ndx.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * ndxmult).toFixed(4)} NDX tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/chex.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * chexmult).toFixed(8)} CHEX tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/pizza.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * pizzamult).toFixed(4)} PIZZA tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div style={{ \"display\": \"block\" }}>.</div>\r\n\r\n\r\n\r\n                  </div>\r\n                </Scrollbars>\r\n                <button class=\"createbutton\" onClick={() => sendetf()}>Redeem tokens</button>\r\n              </div>\r\n\r\n              : view == \"stats\" ?\r\n                <div class=\"rightbar\">\r\n                  <div class=\"rightbartopbox\">\r\n                    <div class=\"createetftitle\">\r\n                      <div>\r\n                        <a\r\n                          //class=\"value\"\r\n                          data-html=\"true\"\r\n                          data-for=\"all\"\r\n\r\n                          data-tip={\r\n                            \"<b>*It should be fairly quick distribution of CETF <br/> since when aprox. 25k USD worth of EOSETF is created the circulation will be 30m CETF, <br/> meaning the issusance will end.</b> \"\r\n                          }\r\n                          style={{\r\n                            fontWeight: \"bold\",\r\n                          }}\r\n                        >\r\n\r\n                          Statistics\r\n                    <InfoIcon\r\n\r\n                            style={{\r\n                              height: \"20px\",\r\n                              width: \"20px\",\r\n                              color: \"black\",\r\n                              opacity: \"0.7\",\r\n                              \"margin-left\": \"2px\",\r\n                              \"vertical-align\": \"top\",\r\n                              \"margin-top\": \"-4px\",\r\n\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          />\r\n\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <br /> <br />\r\n\r\n                  <Scrollbars class=\"mask\" style={{ width: \"80%\" }} autoHide >\r\n                    <div class=\"statcards\">\r\n                      <div class=\"statcard\">\r\n                        <a class=\"stat\">{gettokenbalancetwo(eosetfbalanceind).toLocaleString()} EOSETF</a><a class=\"statexplainer\">My balance</a>\r\n                      </div>\r\n\r\n                      <div class=\"statcard\">\r\n                        <a class=\"stat\">{gettokenbalanceone(eosetfbalanceind).toLocaleString()} CETF</a><a class=\"statexplainer\">My balance</a>\r\n                      </div>\r\n\r\n                      <div class=\"statcard\">\r\n                        <a class=\"stat\">{gettokensupply(etfbalance).toLocaleString()} CETF</a><a class=\"statexplainer\">Circulating supply (Max 30m)</a>\r\n                      </div>\r\n\r\n                      <div class=\"statcard\">\r\n                        <a class=\"stat\">{gettokensupply(eosetfbalance).toLocaleString()} EOSETF</a><a class=\"statexplainer\">Circulating supply</a>\r\n                      </div>\r\n                      <div class=\"statcard\">\r\n                        <a class=\"stat\">{creationreward().toLocaleString()} CETF</a><a class=\"statexplainer\"> Issuance per 1 EOSTF</a>\r\n                      </div>\r\n                      <div class=\"statcard\">\r\n                        <a class=\"stat\">{halvings(gettokensupply(etfbalance)).toLocaleString()}</a><a class=\"statexplainer\">Halvings (Max 5)</a>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </Scrollbars>\r\n                  <div class=\"fade\" />\r\n                </div>\r\n                : view == \"about\" ?\r\n                  <div class=\"rightbar\">\r\n                    <div class=\"rightbartopbox\">\r\n                      <div class=\"createetftitle\">\r\n                        EOSETF token allocation\r\n                    </div>\r\n                      <div class=\"slidertext\">\r\n                        <a>Chart shows % of each token in the fund.</a>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"chartwrapper\">\r\n                      <Doughnut data={data} legend={{ \"position\": \"bottom\" }} />\r\n                    </div>\r\n                  </div>\r\n\r\n                  : <a>Error</a>\r\n          }\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withUAL(App);\r\n//                      <a> My balance: {gettokenbalance(etfbalanceind)} CETF  </a>                       <a>Total supply: {gettokensupply(etfbalance)} CETF  </a>                       <a>Total supply: {gettokensupply(eosetfbalance)} EOSETF  </a>\r\n/*\r\n\r\n\r\n\r\n                      <a> Current supply: {gettokensupply(etfbalance)} CETF (Distribution ends at 30m CETF, no more CETF will be issued) </a>\r\n                      <br></br><br></br>\r\n\r\n                      <a>Current supply: {gettokensupply(eosetfbalance)} EOSETF </a>\r\n                      <br></br><br></br>\r\n\r\n                      <a>Issuance per 1 EOSETF: {creationreward()} CETF   </a>\r\n\r\n                      <br></br><br></br>\r\n\r\n                      <a>Halvings: {halvings(gettokensupply(etfbalance))}   </a>\r\n\r\n*/\r\n",{"ruleId":"201","severity":1,"message":"202","line":1,"column":8,"nodeType":"203","messageId":"204","endLine":1,"endColumn":12},{"ruleId":"201","severity":1,"message":"205","line":5,"column":22,"nodeType":"203","messageId":"204","endLine":5,"endColumn":32},{"ruleId":"201","severity":1,"message":"206","line":13,"column":10,"nodeType":"203","messageId":"204","endLine":13,"endColumn":13},{"ruleId":"201","severity":1,"message":"207","line":13,"column":15,"nodeType":"203","messageId":"204","endLine":13,"endColumn":18},{"ruleId":"201","severity":1,"message":"208","line":52,"column":23,"nodeType":"203","messageId":"204","endLine":52,"endColumn":32},{"ruleId":"201","severity":1,"message":"209","line":52,"column":46,"nodeType":"203","messageId":"204","endLine":52,"endColumn":51},{"ruleId":"201","severity":1,"message":"210","line":191,"column":10,"nodeType":"203","messageId":"204","endLine":191,"endColumn":23},{"ruleId":"211","severity":1,"message":"212","line":275,"column":6,"nodeType":"213","endLine":275,"endColumn":19,"suggestions":"214"},{"ruleId":"211","severity":1,"message":"215","line":292,"column":6,"nodeType":"213","endLine":292,"endColumn":19,"suggestions":"216"},{"ruleId":"217","severity":1,"message":"218","line":297,"column":49,"nodeType":"219","messageId":"220","endLine":297,"endColumn":51},{"ruleId":"211","severity":1,"message":"221","line":373,"column":6,"nodeType":"213","endLine":373,"endColumn":19,"suggestions":"222"},{"ruleId":"211","severity":1,"message":"221","line":392,"column":6,"nodeType":"213","endLine":392,"endColumn":19,"suggestions":"223"},{"ruleId":"211","severity":1,"message":"221","line":462,"column":6,"nodeType":"213","endLine":462,"endColumn":19,"suggestions":"224"},{"ruleId":"211","severity":1,"message":"221","line":485,"column":6,"nodeType":"213","endLine":485,"endColumn":19,"suggestions":"225"},{"ruleId":"211","severity":1,"message":"221","line":508,"column":6,"nodeType":"213","endLine":508,"endColumn":19,"suggestions":"226"},{"ruleId":"211","severity":1,"message":"221","line":531,"column":6,"nodeType":"213","endLine":531,"endColumn":19,"suggestions":"227"},{"ruleId":"211","severity":1,"message":"221","line":555,"column":6,"nodeType":"213","endLine":555,"endColumn":19,"suggestions":"228"},{"ruleId":"211","severity":1,"message":"221","line":577,"column":6,"nodeType":"213","endLine":577,"endColumn":19,"suggestions":"229"},{"ruleId":"211","severity":1,"message":"221","line":601,"column":6,"nodeType":"213","endLine":601,"endColumn":19,"suggestions":"230"},{"ruleId":"211","severity":1,"message":"221","line":633,"column":6,"nodeType":"213","endLine":633,"endColumn":19,"suggestions":"231"},{"ruleId":"211","severity":1,"message":"221","line":656,"column":6,"nodeType":"213","endLine":656,"endColumn":19,"suggestions":"232"},{"ruleId":"211","severity":1,"message":"221","line":679,"column":6,"nodeType":"213","endLine":679,"endColumn":19,"suggestions":"233"},{"ruleId":"211","severity":1,"message":"221","line":703,"column":6,"nodeType":"213","endLine":703,"endColumn":19,"suggestions":"234"},{"ruleId":"211","severity":1,"message":"221","line":725,"column":6,"nodeType":"213","endLine":725,"endColumn":19,"suggestions":"235"},{"ruleId":"211","severity":1,"message":"221","line":749,"column":6,"nodeType":"213","endLine":749,"endColumn":19,"suggestions":"236"},{"ruleId":"201","severity":1,"message":"209","line":851,"column":14,"nodeType":"203","messageId":"204","endLine":851,"endColumn":19},{"ruleId":"201","severity":1,"message":"237","line":851,"column":21,"nodeType":"203","messageId":"204","endLine":851,"endColumn":33},{"ruleId":"201","severity":1,"message":"209","line":1162,"column":14,"nodeType":"203","messageId":"204","endLine":1162,"endColumn":19},{"ruleId":"201","severity":1,"message":"237","line":1162,"column":21,"nodeType":"203","messageId":"204","endLine":1162,"endColumn":33},{"ruleId":"238","severity":1,"message":"239","line":1249,"column":109,"nodeType":"240","endLine":1249,"endColumn":164},{"ruleId":"238","severity":1,"message":"239","line":1250,"column":113,"nodeType":"240","endLine":1250,"endColumn":171},{"ruleId":"238","severity":1,"message":"239","line":1251,"column":9,"nodeType":"240","endLine":1251,"endColumn":88},{"ruleId":"238","severity":1,"message":"239","line":1253,"column":142,"nodeType":"240","endLine":1253,"endColumn":195},{"ruleId":"238","severity":1,"message":"239","line":1254,"column":108,"nodeType":"240","endLine":1254,"endColumn":158},{"ruleId":"238","severity":1,"message":"239","line":1265,"column":19,"nodeType":"240","endLine":1265,"endColumn":61},{"ruleId":"241","severity":1,"message":"242","line":1268,"column":19,"nodeType":"240","endLine":1268,"endColumn":22},{"ruleId":"217","severity":1,"message":"218","line":1271,"column":32,"nodeType":"219","messageId":"220","endLine":1271,"endColumn":34},{"ruleId":"241","severity":1,"message":"242","line":1271,"column":40,"nodeType":"240","endLine":1271,"endColumn":43},{"ruleId":"238","severity":1,"message":"239","line":1276,"column":27,"nodeType":"240","endLine":1276,"endColumn":79},{"ruleId":"241","severity":1,"message":"242","line":1277,"column":27,"nodeType":"240","endLine":1277,"endColumn":51},{"ruleId":"238","severity":1,"message":"239","line":1280,"column":27,"nodeType":"240","endLine":1280,"endColumn":79},{"ruleId":"241","severity":1,"message":"242","line":1281,"column":27,"nodeType":"240","endLine":1281,"endColumn":51},{"ruleId":"238","severity":1,"message":"239","line":1284,"column":27,"nodeType":"240","endLine":1284,"endColumn":76},{"ruleId":"241","severity":1,"message":"242","line":1285,"column":27,"nodeType":"240","endLine":1285,"endColumn":51},{"ruleId":"238","severity":1,"message":"239","line":1288,"column":27,"nodeType":"240","endLine":1288,"endColumn":74},{"ruleId":"241","severity":1,"message":"242","line":1289,"column":27,"nodeType":"240","endLine":1289,"endColumn":51},{"ruleId":"238","severity":1,"message":"239","line":1292,"column":27,"nodeType":"240","endLine":1292,"endColumn":73},{"ruleId":"241","severity":1,"message":"242","line":1293,"column":27,"nodeType":"240","endLine":1293,"endColumn":51},{"ruleId":"238","severity":1,"message":"239","line":1296,"column":27,"nodeType":"240","endLine":1296,"endColumn":77},{"ruleId":"241","severity":1,"message":"242","line":1297,"column":27,"nodeType":"240","endLine":1297,"endColumn":51},{"ruleId":"238","severity":1,"message":"239","line":1300,"column":27,"nodeType":"240","endLine":1300,"endColumn":76},{"ruleId":"241","severity":1,"message":"242","line":1301,"column":27,"nodeType":"240","endLine":1301,"endColumn":51},{"ruleId":"238","severity":1,"message":"239","line":1304,"column":27,"nodeType":"240","endLine":1304,"endColumn":74},{"ruleId":"241","severity":1,"message":"242","line":1305,"column":27,"nodeType":"240","endLine":1305,"endColumn":51},{"ruleId":"217","severity":1,"message":"218","line":1307,"column":34,"nodeType":"219","messageId":"220","endLine":1307,"endColumn":36},{"ruleId":"238","severity":1,"message":"239","line":1309,"column":29,"nodeType":"240","endLine":1309,"endColumn":75},{"ruleId":"241","severity":1,"message":"242","line":1310,"column":29,"nodeType":"240","endLine":1310,"endColumn":53},{"ruleId":"238","severity":1,"message":"239","line":1314,"column":29,"nodeType":"240","endLine":1314,"endColumn":76},{"ruleId":"241","severity":1,"message":"242","line":1315,"column":29,"nodeType":"240","endLine":1315,"endColumn":53},{"ruleId":"238","severity":1,"message":"239","line":1325,"column":15,"nodeType":"240","endLine":1325,"endColumn":57},{"ruleId":"241","severity":1,"message":"242","line":1328,"column":15,"nodeType":"240","endLine":1328,"endColumn":18},{"ruleId":"217","severity":1,"message":"218","line":1331,"column":28,"nodeType":"219","messageId":"220","endLine":1331,"endColumn":30},{"ruleId":"241","severity":1,"message":"242","line":1331,"column":36,"nodeType":"240","endLine":1331,"endColumn":39},{"ruleId":"238","severity":1,"message":"239","line":1336,"column":23,"nodeType":"240","endLine":1336,"endColumn":75},{"ruleId":"241","severity":1,"message":"242","line":1337,"column":23,"nodeType":"240","endLine":1337,"endColumn":47},{"ruleId":"238","severity":1,"message":"239","line":1340,"column":23,"nodeType":"240","endLine":1340,"endColumn":75},{"ruleId":"241","severity":1,"message":"242","line":1341,"column":23,"nodeType":"240","endLine":1341,"endColumn":47},{"ruleId":"238","severity":1,"message":"239","line":1344,"column":23,"nodeType":"240","endLine":1344,"endColumn":69},{"ruleId":"241","severity":1,"message":"242","line":1345,"column":23,"nodeType":"240","endLine":1345,"endColumn":47},{"ruleId":"238","severity":1,"message":"239","line":1348,"column":23,"nodeType":"240","endLine":1348,"endColumn":73},{"ruleId":"241","severity":1,"message":"242","line":1349,"column":23,"nodeType":"240","endLine":1349,"endColumn":47},{"ruleId":"217","severity":1,"message":"218","line":1351,"column":30,"nodeType":"219","messageId":"220","endLine":1351,"endColumn":32},{"ruleId":"238","severity":1,"message":"239","line":1353,"column":25,"nodeType":"240","endLine":1353,"endColumn":71},{"ruleId":"241","severity":1,"message":"242","line":1354,"column":25,"nodeType":"240","endLine":1354,"endColumn":49},{"ruleId":"238","severity":1,"message":"239","line":1358,"column":25,"nodeType":"240","endLine":1358,"endColumn":72},{"ruleId":"241","severity":1,"message":"242","line":1359,"column":25,"nodeType":"240","endLine":1359,"endColumn":49},{"ruleId":"217","severity":1,"message":"218","line":1365,"column":17,"nodeType":"219","messageId":"220","endLine":1365,"endColumn":19},{"ruleId":"241","severity":1,"message":"242","line":1370,"column":21,"nodeType":"240","endLine":1383,"endColumn":22},{"ruleId":"241","severity":1,"message":"242","line":1406,"column":19,"nodeType":"240","endLine":1406,"endColumn":22},{"ruleId":"238","severity":1,"message":"239","line":1429,"column":23,"nodeType":"240","endLine":1429,"endColumn":100},{"ruleId":"241","severity":1,"message":"242","line":1432,"column":23,"nodeType":"240","endLine":1432,"endColumn":26},{"ruleId":"238","severity":1,"message":"239","line":1436,"column":25,"nodeType":"240","endLine":1436,"endColumn":85},{"ruleId":"238","severity":1,"message":"239","line":1438,"column":25,"nodeType":"240","endLine":1438,"endColumn":175},{"ruleId":"238","severity":1,"message":"239","line":1445,"column":23,"nodeType":"240","endLine":1445,"endColumn":101},{"ruleId":"241","severity":1,"message":"242","line":1448,"column":23,"nodeType":"240","endLine":1448,"endColumn":26},{"ruleId":"238","severity":1,"message":"239","line":1452,"column":25,"nodeType":"240","endLine":1452,"endColumn":85},{"ruleId":"238","severity":1,"message":"239","line":1454,"column":25,"nodeType":"240","endLine":1454,"endColumn":174},{"ruleId":"238","severity":1,"message":"239","line":1461,"column":23,"nodeType":"240","endLine":1461,"endColumn":106},{"ruleId":"241","severity":1,"message":"242","line":1464,"column":23,"nodeType":"240","endLine":1464,"endColumn":26},{"ruleId":"238","severity":1,"message":"239","line":1468,"column":25,"nodeType":"240","endLine":1468,"endColumn":85},{"ruleId":"238","severity":1,"message":"239","line":1470,"column":25,"nodeType":"240","endLine":1470,"endColumn":174},{"ruleId":"238","severity":1,"message":"239","line":1477,"column":23,"nodeType":"240","endLine":1477,"endColumn":99},{"ruleId":"241","severity":1,"message":"242","line":1480,"column":23,"nodeType":"240","endLine":1480,"endColumn":26},{"ruleId":"238","severity":1,"message":"239","line":1484,"column":25,"nodeType":"240","endLine":1484,"endColumn":85},{"ruleId":"238","severity":1,"message":"239","line":1486,"column":25,"nodeType":"240","endLine":1486,"endColumn":175},{"ruleId":"238","severity":1,"message":"239","line":1493,"column":23,"nodeType":"240","endLine":1493,"endColumn":105},{"ruleId":"241","severity":1,"message":"242","line":1496,"column":23,"nodeType":"240","endLine":1496,"endColumn":26},{"ruleId":"238","severity":1,"message":"239","line":1500,"column":25,"nodeType":"240","endLine":1500,"endColumn":85},{"ruleId":"238","severity":1,"message":"239","line":1502,"column":25,"nodeType":"240","endLine":1502,"endColumn":175},{"ruleId":"238","severity":1,"message":"239","line":1509,"column":23,"nodeType":"240","endLine":1509,"endColumn":99},{"ruleId":"241","severity":1,"message":"242","line":1512,"column":23,"nodeType":"240","endLine":1512,"endColumn":26},{"ruleId":"238","severity":1,"message":"239","line":1516,"column":25,"nodeType":"240","endLine":1516,"endColumn":85},{"ruleId":"238","severity":1,"message":"239","line":1518,"column":25,"nodeType":"240","endLine":1518,"endColumn":175},{"ruleId":"238","severity":1,"message":"239","line":1527,"column":23,"nodeType":"240","endLine":1527,"endColumn":101},{"ruleId":"241","severity":1,"message":"242","line":1530,"column":23,"nodeType":"240","endLine":1530,"endColumn":26},{"ruleId":"238","severity":1,"message":"239","line":1534,"column":25,"nodeType":"240","endLine":1534,"endColumn":85},{"ruleId":"238","severity":1,"message":"239","line":1536,"column":25,"nodeType":"240","endLine":1536,"endColumn":174},{"ruleId":"238","severity":1,"message":"239","line":1543,"column":23,"nodeType":"240","endLine":1543,"endColumn":100},{"ruleId":"241","severity":1,"message":"242","line":1546,"column":23,"nodeType":"240","endLine":1546,"endColumn":26},{"ruleId":"238","severity":1,"message":"239","line":1550,"column":25,"nodeType":"240","endLine":1550,"endColumn":85},{"ruleId":"238","severity":1,"message":"239","line":1552,"column":25,"nodeType":"240","endLine":1552,"endColumn":174},{"ruleId":"238","severity":1,"message":"239","line":1559,"column":23,"nodeType":"240","endLine":1559,"endColumn":99},{"ruleId":"241","severity":1,"message":"242","line":1562,"column":23,"nodeType":"240","endLine":1562,"endColumn":26},{"ruleId":"238","severity":1,"message":"239","line":1566,"column":25,"nodeType":"240","endLine":1566,"endColumn":85},{"ruleId":"238","severity":1,"message":"239","line":1568,"column":25,"nodeType":"240","endLine":1568,"endColumn":173},{"ruleId":"238","severity":1,"message":"239","line":1575,"column":23,"nodeType":"240","endLine":1575,"endColumn":99},{"ruleId":"241","severity":1,"message":"242","line":1578,"column":23,"nodeType":"240","endLine":1578,"endColumn":26},{"ruleId":"238","severity":1,"message":"239","line":1582,"column":25,"nodeType":"240","endLine":1582,"endColumn":85},{"ruleId":"238","severity":1,"message":"239","line":1584,"column":25,"nodeType":"240","endLine":1584,"endColumn":173},{"ruleId":"238","severity":1,"message":"239","line":1591,"column":23,"nodeType":"240","endLine":1591,"endColumn":99},{"ruleId":"241","severity":1,"message":"242","line":1594,"column":23,"nodeType":"240","endLine":1594,"endColumn":26},{"ruleId":"238","severity":1,"message":"239","line":1598,"column":25,"nodeType":"240","endLine":1598,"endColumn":85},{"ruleId":"238","severity":1,"message":"239","line":1600,"column":25,"nodeType":"240","endLine":1600,"endColumn":175},{"ruleId":"238","severity":1,"message":"239","line":1609,"column":23,"nodeType":"240","endLine":1609,"endColumn":99},{"ruleId":"241","severity":1,"message":"242","line":1612,"column":23,"nodeType":"240","endLine":1612,"endColumn":26},{"ruleId":"238","severity":1,"message":"239","line":1616,"column":25,"nodeType":"240","endLine":1616,"endColumn":85},{"ruleId":"238","severity":1,"message":"239","line":1618,"column":25,"nodeType":"240","endLine":1618,"endColumn":174},{"ruleId":"238","severity":1,"message":"239","line":1627,"column":23,"nodeType":"240","endLine":1627,"endColumn":99},{"ruleId":"241","severity":1,"message":"242","line":1630,"column":23,"nodeType":"240","endLine":1630,"endColumn":26},{"ruleId":"238","severity":1,"message":"239","line":1634,"column":25,"nodeType":"240","endLine":1634,"endColumn":85},{"ruleId":"238","severity":1,"message":"239","line":1636,"column":25,"nodeType":"240","endLine":1636,"endColumn":175},{"ruleId":"217","severity":1,"message":"218","line":1650,"column":20,"nodeType":"219","messageId":"220","endLine":1650,"endColumn":22},{"ruleId":"241","severity":1,"message":"242","line":1655,"column":23,"nodeType":"240","endLine":1668,"endColumn":24},{"ruleId":"241","severity":1,"message":"242","line":1691,"column":21,"nodeType":"240","endLine":1691,"endColumn":24},{"ruleId":"238","severity":1,"message":"239","line":1714,"column":25,"nodeType":"240","endLine":1714,"endColumn":102},{"ruleId":"241","severity":1,"message":"242","line":1717,"column":25,"nodeType":"240","endLine":1717,"endColumn":28},{"ruleId":"238","severity":1,"message":"239","line":1720,"column":25,"nodeType":"240","endLine":1720,"endColumn":85},{"ruleId":"238","severity":1,"message":"239","line":1726,"column":25,"nodeType":"240","endLine":1726,"endColumn":103},{"ruleId":"241","severity":1,"message":"242","line":1729,"column":25,"nodeType":"240","endLine":1729,"endColumn":28},{"ruleId":"238","severity":1,"message":"239","line":1732,"column":25,"nodeType":"240","endLine":1732,"endColumn":85},{"ruleId":"238","severity":1,"message":"239","line":1738,"column":25,"nodeType":"240","endLine":1738,"endColumn":108},{"ruleId":"241","severity":1,"message":"242","line":1741,"column":25,"nodeType":"240","endLine":1741,"endColumn":28},{"ruleId":"238","severity":1,"message":"239","line":1744,"column":25,"nodeType":"240","endLine":1744,"endColumn":85},{"ruleId":"238","severity":1,"message":"239","line":1750,"column":25,"nodeType":"240","endLine":1750,"endColumn":101},{"ruleId":"241","severity":1,"message":"242","line":1753,"column":25,"nodeType":"240","endLine":1753,"endColumn":28},{"ruleId":"238","severity":1,"message":"239","line":1756,"column":25,"nodeType":"240","endLine":1756,"endColumn":85},{"ruleId":"238","severity":1,"message":"239","line":1762,"column":25,"nodeType":"240","endLine":1762,"endColumn":107},{"ruleId":"241","severity":1,"message":"242","line":1765,"column":25,"nodeType":"240","endLine":1765,"endColumn":28},{"ruleId":"238","severity":1,"message":"239","line":1768,"column":25,"nodeType":"240","endLine":1768,"endColumn":85},{"ruleId":"238","severity":1,"message":"239","line":1774,"column":25,"nodeType":"240","endLine":1774,"endColumn":101},{"ruleId":"241","severity":1,"message":"242","line":1777,"column":25,"nodeType":"240","endLine":1777,"endColumn":28},{"ruleId":"238","severity":1,"message":"239","line":1780,"column":25,"nodeType":"240","endLine":1780,"endColumn":85},{"ruleId":"238","severity":1,"message":"239","line":1786,"column":25,"nodeType":"240","endLine":1786,"endColumn":101},{"ruleId":"241","severity":1,"message":"242","line":1789,"column":25,"nodeType":"240","endLine":1789,"endColumn":28},{"ruleId":"238","severity":1,"message":"239","line":1792,"column":25,"nodeType":"240","endLine":1792,"endColumn":85},{"ruleId":"238","severity":1,"message":"239","line":1800,"column":25,"nodeType":"240","endLine":1800,"endColumn":101},{"ruleId":"241","severity":1,"message":"242","line":1803,"column":25,"nodeType":"240","endLine":1803,"endColumn":28},{"ruleId":"238","severity":1,"message":"239","line":1806,"column":25,"nodeType":"240","endLine":1806,"endColumn":85},{"ruleId":"238","severity":1,"message":"239","line":1812,"column":25,"nodeType":"240","endLine":1812,"endColumn":101},{"ruleId":"241","severity":1,"message":"242","line":1815,"column":25,"nodeType":"240","endLine":1815,"endColumn":28},{"ruleId":"238","severity":1,"message":"239","line":1818,"column":25,"nodeType":"240","endLine":1818,"endColumn":85},{"ruleId":"238","severity":1,"message":"239","line":1824,"column":25,"nodeType":"240","endLine":1824,"endColumn":101},{"ruleId":"241","severity":1,"message":"242","line":1827,"column":25,"nodeType":"240","endLine":1827,"endColumn":28},{"ruleId":"238","severity":1,"message":"239","line":1830,"column":25,"nodeType":"240","endLine":1830,"endColumn":85},{"ruleId":"238","severity":1,"message":"239","line":1836,"column":25,"nodeType":"240","endLine":1836,"endColumn":101},{"ruleId":"241","severity":1,"message":"242","line":1839,"column":25,"nodeType":"240","endLine":1839,"endColumn":28},{"ruleId":"238","severity":1,"message":"239","line":1842,"column":25,"nodeType":"240","endLine":1842,"endColumn":85},{"ruleId":"238","severity":1,"message":"239","line":1848,"column":25,"nodeType":"240","endLine":1848,"endColumn":102},{"ruleId":"241","severity":1,"message":"242","line":1851,"column":25,"nodeType":"240","endLine":1851,"endColumn":28},{"ruleId":"238","severity":1,"message":"239","line":1854,"column":25,"nodeType":"240","endLine":1854,"endColumn":85},{"ruleId":"238","severity":1,"message":"239","line":1860,"column":25,"nodeType":"240","endLine":1860,"endColumn":103},{"ruleId":"241","severity":1,"message":"242","line":1863,"column":25,"nodeType":"240","endLine":1863,"endColumn":28},{"ruleId":"238","severity":1,"message":"239","line":1866,"column":25,"nodeType":"240","endLine":1866,"endColumn":85},{"ruleId":"217","severity":1,"message":"218","line":1881,"column":22,"nodeType":"219","messageId":"220","endLine":1881,"endColumn":24},{"ruleId":"241","severity":1,"message":"242","line":1886,"column":25,"nodeType":"240","endLine":1897,"endColumn":26},{"ruleId":"241","severity":1,"message":"242","line":1925,"column":25,"nodeType":"240","endLine":1925,"endColumn":41},{"ruleId":"241","severity":1,"message":"242","line":1925,"column":107,"nodeType":"240","endLine":1925,"endColumn":132},{"ruleId":"241","severity":1,"message":"242","line":1929,"column":25,"nodeType":"240","endLine":1929,"endColumn":41},{"ruleId":"241","severity":1,"message":"242","line":1929,"column":105,"nodeType":"240","endLine":1929,"endColumn":130},{"ruleId":"241","severity":1,"message":"242","line":1933,"column":25,"nodeType":"240","endLine":1933,"endColumn":41},{"ruleId":"241","severity":1,"message":"242","line":1933,"column":95,"nodeType":"240","endLine":1933,"endColumn":120},{"ruleId":"241","severity":1,"message":"242","line":1937,"column":25,"nodeType":"240","endLine":1937,"endColumn":41},{"ruleId":"241","severity":1,"message":"242","line":1937,"column":100,"nodeType":"240","endLine":1937,"endColumn":125},{"ruleId":"241","severity":1,"message":"242","line":1940,"column":25,"nodeType":"240","endLine":1940,"endColumn":41},{"ruleId":"241","severity":1,"message":"242","line":1940,"column":85,"nodeType":"240","endLine":1940,"endColumn":110},{"ruleId":"241","severity":1,"message":"242","line":1943,"column":25,"nodeType":"240","endLine":1943,"endColumn":41},{"ruleId":"241","severity":1,"message":"242","line":1943,"column":100,"nodeType":"240","endLine":1943,"endColumn":125},{"ruleId":"217","severity":1,"message":"218","line":1950,"column":24,"nodeType":"219","messageId":"220","endLine":1950,"endColumn":26},{"ruleId":"241","severity":1,"message":"242","line":1957,"column":25,"nodeType":"240","endLine":1957,"endColumn":28},{"ruleId":"241","severity":1,"message":"242","line":1965,"column":21,"nodeType":"240","endLine":1965,"endColumn":24},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.","'Bar' is defined but never used.","'Pie' is defined but never used.","'hideModal' is assigned a value but never used.","'login' is assigned a value but never used.","'etfbalanceind' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'govrnprice'. Either include it or remove the dependency array.","ArrayExpression",["243"],"React Hook useEffect has a missing dependency: 'prices'. Either include it or remove the dependency array.",["244"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'displayaccountname'. Either include it or remove the dependency array.",["245"],["246"],["247"],["248"],["249"],["250"],["251"],["252"],["253"],["254"],["255"],["256"],["257"],["258"],["259"],"'displayError' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"264","fix":"266"},{"desc":"264","fix":"267"},{"desc":"264","fix":"268"},{"desc":"264","fix":"269"},{"desc":"264","fix":"270"},{"desc":"264","fix":"271"},{"desc":"264","fix":"272"},{"desc":"264","fix":"273"},{"desc":"264","fix":"274"},{"desc":"264","fix":"275"},{"desc":"264","fix":"276"},{"desc":"264","fix":"277"},{"desc":"264","fix":"278"},{"desc":"264","fix":"279"},"Update the dependencies array to be: [accountname, govrnprice]",{"range":"280","text":"281"},"Update the dependencies array to be: [accountname, prices]",{"range":"282","text":"283"},"Update the dependencies array to be: [accountname, displayaccountname]",{"range":"284","text":"285"},{"range":"286","text":"285"},{"range":"287","text":"285"},{"range":"288","text":"285"},{"range":"289","text":"285"},{"range":"290","text":"285"},{"range":"291","text":"285"},{"range":"292","text":"285"},{"range":"293","text":"285"},{"range":"294","text":"285"},{"range":"295","text":"285"},{"range":"296","text":"285"},{"range":"297","text":"285"},{"range":"298","text":"285"},{"range":"299","text":"285"},[7236,7249],"[accountname, govrnprice]",[8304,8317],"[accountname, prices]",[11297,11310],"[accountname, displayaccountname]",[11844,11857],[13492,13505],[14088,14101],[14682,14695],[15278,15291],[15873,15886],[16467,16480],[17068,17081],[17685,17698],[18287,18300],[18883,18896],[19481,19494],[20075,20088],[20673,20686]]