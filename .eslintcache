[{"/Users/vlad/Desktop/lennyetf/eosetfv2/src/index.js":"1","/Users/vlad/Desktop/lennyetf/eosetfv2/src/reportWebVitals.js":"2","/Users/vlad/Desktop/lennyetf/eosetfv2/src/App.js":"3"},{"size":1792,"mtime":1612813170879,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1610316645021,"results":"6","hashOfConfig":"5"},{"size":73801,"mtime":1615888391403,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"187o1g5",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":199,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/Users/vlad/Desktop/lennyetf/eosetfv2/src/index.js",[],["16","17"],"/Users/vlad/Desktop/lennyetf/eosetfv2/src/reportWebVitals.js",[],"/Users/vlad/Desktop/lennyetf/eosetfv2/src/App.js",["18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216"],"import logo from './logo.svg';\nimport './App.css';\nimport { Slider } from '@material-ui/core';\nimport React, { useState, useEffect } from \"react\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { withUAL } from \"ual-reactjs-renderer\";\nimport Swal from \"sweetalert2\";\nimport ReactTooltip from \"react-tooltip\";\nimport InfoIcon from '@material-ui/icons/Info';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport Drawer from '@material-ui/core/Drawer';\nimport ReactGA from \"react-ga\";\nimport { Bar, Pie, Doughnut } from 'react-chartjs-2';\n//import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst CustomSlider = withStyles({\n  root: {\n    color: '#52af77',\n    height: 8,\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontSize: \"14px\",\n    width: '100%',\n  },\n  heading: {\n    fontSize: \"14px\",\n    color: \"#534C80\",\n    fontFamily: \"'Roboto', sans-serif\",\n    margin: 0\n  },\n  summary: {\n    padding: 0,\n  },\n  expansion: {\n    backgroundColor: \"rgba( 255, 255, 255, 0 )\",\n    boxShadow: \"none\",\n    borderRadius: \"100px\",\n    marginLeft: 0,\n  },\n  expansion2: {\n    fontSize: \"10px\"\n  }\n}));\n\nfunction App(props) {\n\n\n  const classes = useStyles();\n\n  const {\n    ual: { showModal, hideModal, activeUser, login, logout },\n  } = props;\n  if (activeUser) {\n    const accountName = activeUser.getAccountName();\n    accountName.then(function (result) {\n      setAccountName(result);\n    });\n  }\n  const displayaccountname = () => {\n    if (accountname) {\n      return accountname;\n    }\n  };\n  const [drawerstate, setDrawerstate] = useState(false)\n  const [tokens, setTokens] = useState(0)\n  const [redeemtokens, setRedeemtokens] = useState(0)\n  const [view, setView] = useState(\"create\")\n  const [accountname, setAccountName] = useState(\"\")\n\n  const logmeout = () => {\n    logout()\n    setAccountName(\"\")\n  }\n\n  /*\n    const efxmult = 2.6911\n    const dadmult = 0.880282\n    const iqmult = 26.233\n    const vigmult = 125.0000\n    const dappmult = 12.6263\n    const boxmult = 0.036075\n    const ogxmult = 2.13675214\n\n    const chexmult = 56.94760820\n    const pizzamult = 9.4696\n    const dfsmult = 0.0361\n    const emtmult = 16.3399\n    const ndxmult = 338.5071\n    const tptmult = 17.9856\n  */\n\n\n  const redemptionfee = 0.95\n  const efxmult = 2.6911\n  const dadmult = 0.880282\n  const iqmult = 26.233\n  const vigmult = 125.0000\n  const dappmult = 12.6263\n  const boxmult = 0.036075\n  const ogxmult = 2.13675214\n\n  const chexmult = 56.94760820\n  const pizzamult = 4.4696\n  const dfsmult = 0.0140\n  const emtmult = 16.3399\n  const ndxmult = 338.5071\n  const tptmult = 17.9856\n\n\n  const sucessstake = () => {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: \"bottom-end\",\n      showConfirmButton: false,\n      timer: 6000,\n      timerProgressBar: true,\n      onOpen: (toast) => {\n        toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n        toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n      },\n    });\n    Toast.fire({\n      icon: \"success\",\n      title: \"CETF and EOSETF successfully issued!\",\n    });\n  };\n\n  const sucessredemption = () => {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: \"bottom-end\",\n      showConfirmButton: false,\n      timer: 6000,\n      timerProgressBar: true,\n      onOpen: (toast) => {\n        toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n        toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n      },\n    });\n    Toast.fire({\n      icon: \"success\",\n      title: \"Tokens successfully redeemed!\",\n    });\n  };\n\n\n\n  const actionpuccis = (err) => {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: \"bottom-end\",\n      showConfirmButton: false,\n      timer: 5000,\n      timerProgressBar: true,\n      didOpen: (toast) => {\n        toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n        toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n      },\n    });\n    Toast.fire({\n      icon: \"error\",\n      title: err,\n    });\n  };\n\n\n  const [ogxbalance, setOgx] = useState({ rows: [] });\n  const [dadbalance, setDad] = useState({ rows: [] });\n  const [boxbalance, setBox] = useState({ rows: [] });\n  const [vigbalance, setVig] = useState({ rows: [] });\n  const [iqbalance, setIq] = useState({ rows: [] });\n  const [efxbalance, setEfx] = useState({ rows: [] });\n  const [dappbalance, setDapp] = useState({ rows: [] });\n\n  const [chexbalance, setChex] = useState({ rows: [] });\n  const [pizzabalance, setPizza] = useState({ rows: [] });\n  const [dfsbalance, setDfs] = useState({ rows: [] });\n  const [emtbalance, setEmt] = useState({ rows: [] });\n  const [ndxbalance, setNdx] = useState({ rows: [] });\n  const [tptbalance, setTpt] = useState({ rows: [] });\n\n  const [govrnprice, setGovrnprice] = useState({ rows: [] });\n  const [dadpriceeos, setDadprice] = useState({ rows: [] });\n  const [eosetfprice, setEosetfprice] = useState({ rows: [] });\n\n  const [prices, setPrices] = useState([]);\n\n  const [eosetfbalance, setEosetf] = useState({ rows: [] });\n  const [etfbalance, setEtf] = useState({ rows: [] });\n  const [eosetfbalanceind, setEosetfind] = useState({ rows: [] });\n  const [etfbalanceind, setEtfind] = useState({ rows: [] });\n\n  const menuClick = (which) => {\n    setView(which)\n    setDrawerstate(false)\n  }\n\n  /*\n\n    const getdata = () => {\n      fetch('https://api.newdex.io/v1/price?symbol=consortiumlv-govrn-eos')\n        .then(response => response.json())\n        .then(data => console.log(data.data.price));\n\n      );\n\n    }\n    '\n\n  useEffect(() => {\n    fetch('https://api.newdex.io/v1/price?symbol=consortiumlv-govrn-eos', {\n    }).then((response) =>\n      response.json().then((govrnprice) => setGovrnprice(govrnprice.data.price))\n    );\n    console.log(govrnprice);\n\n  }, [accountname]);\n\n\n  const getdata = () => {\n    fetch('https://api.newdex.io/v1/price?symbol=consortiumlv-govrn-eos', {\n    }).then((response) =>\n      response.json().then((govrnprice) => setGovrnprice(govrnprice.data.price))\n    );\n    console.log(govrnprice);\n  }\n\n\n\n\n    useEffect(() => {\n      fetch('https://api.newdex.io/v1/price?symbol=consortiumlv-govrn-eos', {\n    }).then((response) =>\n      response.json().then((govrnprice) => setGovrnprice(govrnprice))\n    );\n    console.log(govrnprice);\n\n    }, [accountname]);\n\n\n\n    */\n\n\n\n  useEffect(() => {\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        json: true,\n        code: \"swap.defi\",\n        table: \"pairs\",\n        scope: \"swap.defi\",\n        lower_bound: 588,\n        upper_bound: 588,\n        limit: 1,\n      }),\n    }).then((response) =>\n      response.json().then((dadpriceeos) => setDadprice(dadpriceeos))\n    );\n  }, [accountname]);\n\n\n\n\n  useEffect(() => {\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        json: true,\n        code: \"swap.defi\",\n        table: \"pairs\",\n        scope: \"swap.defi\",\n        lower_bound: 1232,\n        upper_bound: 1232,\n        limit: 1,\n      }),\n    }).then((response) =>\n      response.json().then((eosetfprice) => setEosetfprice(eosetfprice))\n    );\n  }, [accountname]);\n\n\n\n  useEffect(() => {\n    fetch('https://api.newdex.io/v1/price?symbol=consortiumlv-govrn-eos', {\n    }).then((response) =>\n      response.json().then((govrnprice) => setGovrnprice(govrnprice.data.price))\n    );\n    console.log(govrnprice);\n\n  }, [accountname]);\n\n\n  useEffect(() => {\n    const newdexcomms = [{ community: \"box\", symbol: \"token.defi-box-eos\" }, { community: \"ogx\", symbol: \"core.ogx-ogx-eos\" }, { community: \"iq\", symbol: \"everipediaiq-iq-eos\" }\n      , { community: \"dapp\", symbol: \"dappservices-dapp-eos\" }, { community: \"vig\", symbol: \"vig111111111-vig-eos\" }, { community: \"efx\", symbol: \"effecttokens-efx-eos\" }, { community: \"chex\", symbol: \"chexchexchex-chex-eos\" }, { community: \"pizza\", symbol: \"pizzatotoken-pizza-eos\" }\n      , { community: \"dfs\", symbol: \"minedfstoken-dfs-eos\" }, { community: \"emt\", symbol: \"emanateoneos-emt-eos\" }, { community: \"ndx\", symbol: \"newdexissuer-ndx-eos\" }, { community: \"tpt\", symbol: \"eosiotptoken-tpt-eos\" }]\n    newdexcomms.forEach((item) => {\n      fetch('https://api.newdex.io/v1/price?symbol=' + item.symbol)\n        .then(response => response.json())\n        .then(data => {\n          Object.assign(item, { price: data?.data?.price })\n          setPrices([...newdexcomms]);\n        }\n        )\n    })\n    console.log(prices)\n  }, [accountname]);\n\n  const getprice = (community) => {\n    if (prices) {\n      const datar = prices.filter(\n        function (data) { return data.community == community }\n      );\n      if (datar[0])\n        return datar[0].price\n    }\n  }\n\n\n  const getdadprice = () => {\n    if (dadpriceeos.rows[0]) {\n      return Number(dadpriceeos.rows[0].price1_last);\n    }\n    else {\n      return 0;\n    }\n  };\n\n\n\n  const geteosetfprice = () => {\n    if (eosetfprice.rows[0]) {\n      return Number(eosetfprice.rows[0].price1_last);\n    }\n    else {\n      return 0;\n    }\n  };\n\n\n\n  const getpricesum = () => {\n    if (prices) {\n\n\n\n      return getprice(\"box\") * boxmult + getprice(\"ogx\") * ogxmult + getprice(\"iq\") * iqmult + getprice(\"dapp\") * dappmult + getprice(\"vig\") * vigmult + getprice(\"efx\") * efxmult + getprice(\"chex\") * chexmult\n        + getprice(\"pizza\") * pizzamult + getprice(\"dfs\") * dfsmult + getprice(\"emt\") * emtmult + getprice(\"ndx\") * ndxmult + getprice(\"tpt\") * tptmult + getdadprice() * dadmult;\n\n\n    }\n  }\n\n\n\n\n\n\n\n  const data = {\n    labels: ['BOX', 'OGX', 'IQ', 'DAPP', 'VIG', 'EFX', 'CHEX', 'PIZZA', 'DFS', 'EMT', 'NDX', 'TPT', 'DAD'],\n    datasets: [\n      {\n        label: 'ETF weight',\n        fill: true,\n        lineTension: 0.1,\n        backgroundColor: [\"#f17ae9\", \"#f9a9f1\", \"#fdd5f8\", \"#ffffff\", \"#7aa6e3\", \"#8fe1ff\", \"#21d2ff\", \"#f9a9f1\", \"#fdd5f8\", \"#fffff5\", \"#cbf0ff\", \"#fbaaeb\", \"#21d2f8\"],\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        data: [parseFloat((getprice(\"box\") * boxmult / getpricesum() * 100)).toFixed(2), parseFloat((getprice(\"ogx\") * ogxmult / getpricesum() * 100)).toFixed(2), parseFloat((getprice(\"iq\") * iqmult / getpricesum() * 100)).toFixed(2), parseFloat((getprice(\"dapp\") * dappmult / getpricesum() * 100)).toFixed(2),\n        parseFloat((getprice(\"vig\") * vigmult / getpricesum() * 100)).toFixed(2), parseFloat((getprice(\"efx\") * efxmult / getpricesum() * 100)).toFixed(2), parseFloat((getprice(\"chex\") * chexmult / getpricesum() * 100)).toFixed(2), parseFloat((getprice(\"pizza\") * pizzamult / getpricesum() * 100)).toFixed(2),\n        parseFloat((getprice(\"dfs\") * dfsmult / getpricesum() * 100)).toFixed(2), parseFloat((getprice(\"emt\") * emtmult / getpricesum() * 100)).toFixed(2), parseFloat((getprice(\"ndx\") * ndxmult / getpricesum() * 100)).toFixed(2), parseFloat((getprice(\"tpt\") * tptmult / getpricesum() * 100)).toFixed(2), parseFloat((getdadprice() * dadmult / getpricesum() * 100)).toFixed(2)]\n      }\n    ]\n  };\n\n\n\n  //price1_last\n\n\n  useEffect(() => {\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        json: true,\n        code: \"cet.f\",\n        table: \"accounts\",\n        scope: displayaccountname(),\n        limit: 3,\n      }),\n    }).then((response) =>\n      response.json().then((etfbalanceind) => setEtfind(etfbalanceind))\n    );\n  }, [accountname]);\n\n  useEffect(() => {\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        json: true,\n        code: \"cet.f\",\n        table: \"accounts\",\n        scope: displayaccountname(),\n        lower_bound: \"CETF\",\n        upper_bound: \"CETF\",\n        limit: 1,\n      }),\n    }).then((response) =>\n      response.json().then((etfbalanceind) => setEtfind(etfbalanceind))\n    );\n  }, [accountname]);\n\n\n  useEffect(() => {\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        json: true,\n        code: \"cet.f\",\n        table: \"accounts\",\n        scope: displayaccountname(),\n        lower_bound: \"EOSETF\",\n        upper_bound: \"EOSETF\",\n        limit: 1,\n      }),\n    }).then((response) =>\n      response.json().then((eosetfbalanceind) => setEosetfind(eosetfbalanceind))\n    );\n  }, [accountname]);\n\n\n\n\n  useEffect(() => {\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        json: true,\n        code: \"cet.f\",\n        table: \"stat\",\n        scope: \"CETF\",\n        limit: 1,\n      }),\n    }).then((response) =>\n      response.json().then((etfbalance) => setEtf(etfbalance))\n    );\n  }, [accountname]);\n\n\n\n\n  useEffect(() => {\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        json: true,\n        code: \"cet.f\",\n        table: \"stat\",\n        scope: \"EOSETF\",\n        limit: 1,\n      }),\n    }).then((response) =>\n      response.json().then((eosetfbalance) => setEosetf(eosetfbalance))\n    );\n  }, [accountname]);\n\n\n\n\n\n\n\n  useEffect(() => {\n    if (accountname) {\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          json: true,\n          code: \"core.ogx\",\n          table: \"accounts\",\n          scope: displayaccountname(),\n          limit: 1,\n        }),\n      }).then((response) =>\n        response.json().then((ogxbalance) => setOgx(ogxbalance))\n      );\n    }\n  }, [accountname]);\n\n\n\n  useEffect(() => {\n    if (accountname) {\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          json: true,\n          code: \"dadtoken1111\",\n          table: \"accounts\",\n          scope: displayaccountname(),\n          limit: 1,\n        }),\n      }).then((response) =>\n        response.json().then((dadbalance) => setDad(dadbalance))\n      );\n    }\n  }, [accountname]);\n\n\n\n  useEffect(() => {\n    if (accountname) {\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          json: true,\n          code: \"token.defi\",\n          table: \"accounts\",\n          scope: displayaccountname(),\n          limit: 1,\n        }),\n      }).then((response) =>\n        response.json().then((boxbalance) => setBox(boxbalance))\n      );\n    }\n  }, [accountname]);\n\n\n\n  useEffect(() => {\n    if (accountname) {\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          json: true,\n          code: \"vig111111111\",\n          table: \"accounts\",\n          scope: displayaccountname(),\n          limit: 1,\n        }),\n      }).then((response) =>\n        response.json().then((vigbalance) => setVig(vigbalance))\n      );\n    }\n  }, [accountname]);\n\n\n\n  useEffect(() => {\n    if (accountname) {\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          json: true,\n          code: \"everipediaiq\",\n          table: \"accounts\",\n          scope: displayaccountname(),\n          limit: 1,\n        }),\n      }).then((response) =>\n        response.json().then((iqbalance) => setIq(iqbalance))\n\n      );\n    }\n  }, [accountname]);\n\n\n  useEffect(() => {\n    if (accountname) {\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          json: true,\n          code: \"effecttokens\",\n          table: \"accounts\",\n          scope: displayaccountname(),\n          limit: 1,\n        }),\n      }).then((response) =>\n        response.json().then((efxbalance) => setEfx(efxbalance))\n      );\n    }\n  }, [accountname]);\n\n\n\n\n  useEffect(() => {\n    if (accountname) {\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          json: true,\n          code: \"dappservices\",\n          table: \"accounts\",\n          scope: displayaccountname(),\n          limit: 1,\n        }),\n      }).then((response) =>\n        response.json().then((dappbalance) => setDapp(dappbalance))\n      );\n    }\n  }, [accountname]);\n\n\n\n\n\n\n\n\n\n\n\n\n  useEffect(() => {\n    if (accountname) {\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          json: true,\n          code: \"chexchexchex\",\n          table: \"accounts\",\n          scope: displayaccountname(),\n          limit: 1,\n        }),\n      }).then((response) =>\n        response.json().then((chexbalance) => setChex(chexbalance))\n      );\n    }\n  }, [accountname]);\n\n\n\n  useEffect(() => {\n    if (accountname) {\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          json: true,\n          code: \"pizzatotoken\",\n          table: \"accounts\",\n          scope: displayaccountname(),\n          limit: 1,\n        }),\n      }).then((response) =>\n        response.json().then((pizzabalance) => setPizza(pizzabalance))\n      );\n    }\n  }, [accountname]);\n\n\n\n  useEffect(() => {\n    if (accountname) {\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          json: true,\n          code: \"minedfstoken\",\n          table: \"accounts\",\n          scope: displayaccountname(),\n          limit: 1,\n        }),\n      }).then((response) =>\n        response.json().then((dfsbalance) => setDfs(dfsbalance))\n      );\n    }\n  }, [accountname]);\n\n\n\n  useEffect(() => {\n    if (accountname) {\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          json: true,\n          code: \"emanateoneos\",\n          table: \"accounts\",\n          scope: displayaccountname(),\n          limit: 1,\n        }),\n      }).then((response) =>\n        response.json().then((emtbalance) => setEmt(emtbalance))\n\n      );\n    }\n  }, [accountname]);\n\n\n  useEffect(() => {\n    if (accountname) {\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          json: true,\n          code: \"newdexissuer\",\n          table: \"accounts\",\n          scope: displayaccountname(),\n          limit: 1,\n        }),\n      }).then((response) =>\n        response.json().then((ndxbalance) => setNdx(ndxbalance))\n      );\n    }\n  }, [accountname]);\n\n\n\n\n  useEffect(() => {\n    if (accountname) {\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          json: true,\n          code: \"eosiotptoken\",\n          table: \"accounts\",\n          scope: displayaccountname(),\n          limit: 1,\n        }),\n      }).then((response) =>\n        response.json().then((tptbalance) => setTpt(tptbalance))\n      );\n    }\n  }, [accountname]);\n\n\n\n\n\n\n\n\n\n\n\n  const gettokenbalance = (token) => {\n    if (token.rows[0]) {\n      return Number(token.rows[0].balance.split(\" \")[0]);\n    }\n    else {\n      return 0;\n    }\n  };\n\n  const gettokenbalanceone = (token) => {\n    if (token.rows[0]) {\n      return Math.floor(Number(token.rows[0].balance.split(\" \")[0]));\n      //return (token.rows[0].balance);\n\n    }\n    else {\n      return 0;\n    }\n  };\n\n  const gettokenbalancetwo = (token) => {\n    if (token.rows[1]) {\n      return Math.floor(Number(token.rows[1].balance.split(\" \")[0]));\n    }\n    else {\n      return 0;\n    }\n  };\n\n\n  const gettokensupply = (token) => {\n    if (token.rows[0]) {\n      return Math.floor(Number(token.rows[0].supply.split(\" \")[0]));\n    }\n    else {\n      return 0;\n    }\n  };\n\n\n\n  const halvingdivider = () => {\n    if (etfbalance.rows[0]) {\n      return parseInt(\n        Math.pow(\n          2,\n          parseInt(\n            Math.floor(Number(etfbalance.rows[0].supply.split(\" \")[0])) /\n            20000000\n          )\n        )\n      );\n    }\n  };\n\n\n\n\n  const creationreward = () => {\n    return parseInt(\n      65000 /\n      halvingdivider()\n    );\n  };\n\n\n  const halvings = (totalcirc) => {\n    if (totalcirc < 20000000) {\n      return 0;\n    } else if (totalcirc >> 20000000 && totalcirc < 40000000) {\n      return 1;\n    } else if (totalcirc >> 40000000 && totalcirc < 60000000) {\n      return 2;\n    } else if (totalcirc >> 60000000 && totalcirc < 80000000) {\n      return 3;\n    }\n  };\n\n\n\n\n\n\n\n  const send = async () => {\n    const {\n      ual: { login, displayError, showModal },\n    } = props;\n    // Via static contextType = UALContext, access to the activeUser object on this.context is now available\n    const {\n      ual: { activeUser },\n    } = props;\n\n    //console.log(getdapp())\n\n    if (activeUser) {\n      try {\n        const transaction = {\n          actions: [\n            {\n              account: \"dappservices\",\n              name: \"transfer\",\n              authorization: [\n                {\n                  actor: displayaccountname(), // use account that was logged in\n                  permission: \"active\",\n                },\n              ],\n              data: {\n                from: displayaccountname(),\n                to: \"cet.f\",\n                //quantity: 19.2562 * tokens + \" DAPP\",\n                memo: \"EOSETF creation through eosetf.io\",\n                quantity: parseFloat(dappmult * tokens).toFixed(4) + \" DAPP\",\n\n              },\n            },\n\n\n            {\n              account: \"effecttokens\",\n              name: \"transfer\",\n              authorization: [\n                {\n                  actor: displayaccountname(), // use account that was logged in\n                  permission: \"active\",\n                },\n              ],\n              data: {\n                from: displayaccountname(),\n                to: \"cet.f\",\n                //quantity: 10.6593 * tokens + \" EFX\",\n                memo: \"EOSETF creation through eosetf.io\",\n                quantity: parseFloat(efxmult * tokens).toFixed(4) + \" EFX\",\n\n              },\n            },\n\n\n\n            {\n              account: \"core.ogx\",\n              name: \"transfer\",\n              authorization: [\n                {\n                  actor: displayaccountname(), // use account that was logged in\n                  permission: \"active\",\n                },\n              ],\n              data: {\n                from: displayaccountname(),\n                to: \"cet.f\",\n                //quantity: 1.26108207 * tokens + \" OGX\",\n                memo: \"EOSETF creation through eosetf.io\",\n                quantity: parseFloat(ogxmult * tokens).toFixed(8) + \" OGX\",\n              },\n            },\n\n\n\n\n            {\n              account: \"everipediaiq\",\n              name: \"transfer\",\n              authorization: [\n                {\n                  actor: displayaccountname(), // use account that was logged in\n                  permission: \"active\",\n                },\n              ],\n              data: {\n                from: displayaccountname(),\n                to: \"cet.f\",\n                //quantity: 50.082 * tokens + \" IQ\",\n                memo: \"EOSETF creation through eosetf.io\",\n                quantity: parseFloat(iqmult * tokens).toFixed(3) + \" IQ\",\n\n              },\n            },\n\n\n\n            {\n              account: \"vig111111111\",\n              name: \"transfer\",\n              authorization: [\n                {\n                  actor: displayaccountname(), // use account that was logged in\n                  permission: \"active\",\n                },\n              ],\n              data: {\n                from: displayaccountname(),\n                to: \"cet.f\",\n                //quantity: 196.7187 * tokens + \" VIG\",\n                memo: \"EOSETF creation through eosetf.io\",\n                quantity: parseFloat(vigmult * tokens).toFixed(4) + \" VIG\",\n\n              },\n            },\n\n\n            {\n              account: \"token.defi\",\n              name: \"transfer\",\n              authorization: [\n                {\n                  actor: displayaccountname(), // use account that was logged in\n                  permission: \"active\",\n                },\n              ],\n              data: {\n                from: displayaccountname(),\n                to: \"cet.f\",\n                //quantity: 0.035523 * tokens + \" BOX\",\n                memo: \"EOSETF creation through eosetf.io\",\n                quantity: parseFloat(boxmult * tokens).toFixed(6) + \" BOX\",\n\n              },\n            },\n\n\n            {\n              account: \"dadtoken1111\",\n              name: \"transfer\",\n              authorization: [\n                {\n                  actor: displayaccountname(), // use account that was logged in\n                  permission: \"active\",\n                },\n              ],\n              data: {\n                from: displayaccountname(),\n                to: \"cet.f\",\n                //quantity: efxmult * tokens + \" DAD\",\n                memo: \"EOSETF creation through eosetf.io\",\n                quantity: parseFloat(dadmult * tokens).toFixed(6) + \" DAD\",\n\n              },\n            },\n\n\n\n\n\n            {\n              account: \"pizzatotoken\",\n              name: \"transfer\",\n              authorization: [\n                {\n                  actor: displayaccountname(), // use account that was logged in\n                  permission: \"active\",\n                },\n              ],\n              data: {\n                from: displayaccountname(),\n                to: \"cet.f\",\n                //quantity: 10.6593 * tokens + \" EFX\",\n                memo: \"EOSETF creation through eosetf.io\",\n                quantity: parseFloat(pizzamult * tokens).toFixed(4) + \" PIZZA\",\n\n              },\n            },\n\n\n\n            {\n              account: \"chexchexchex\",\n              name: \"transfer\",\n              authorization: [\n                {\n                  actor: displayaccountname(), // use account that was logged in\n                  permission: \"active\",\n                },\n              ],\n              data: {\n                from: displayaccountname(),\n                to: \"cet.f\",\n                //quantity: 10.6593 * tokens + \" EFX\",\n                memo: \"EOSETF creation through eosetf.io\",\n                quantity: parseFloat(chexmult * tokens).toFixed(8) + \" CHEX\",\n\n              },\n            },\n\n            {\n              account: \"newdexissuer\",\n              name: \"transfer\",\n              authorization: [\n                {\n                  actor: displayaccountname(), // use account that was logged in\n                  permission: \"active\",\n                },\n              ],\n              data: {\n                from: displayaccountname(),\n                to: \"cet.f\",\n                //quantity: 10.6593 * tokens + \" EFX\",\n                memo: \"EOSETF creation through eosetf.io\",\n                quantity: parseFloat(ndxmult * tokens).toFixed(4) + \" NDX\",\n\n              },\n            },\n\n            {\n              account: \"eosiotptoken\",\n              name: \"transfer\",\n              authorization: [\n                {\n                  actor: displayaccountname(), // use account that was logged in\n                  permission: \"active\",\n                },\n              ],\n              data: {\n                from: displayaccountname(),\n                to: \"cet.f\",\n                //quantity: 10.6593 * tokens + \" EFX\",\n                memo: \"EOSETF creation through eosetf.io\",\n                quantity: parseFloat(tptmult * tokens).toFixed(4) + \" TPT\",\n\n              },\n            },\n\n            {\n              account: \"emanateoneos\",\n              name: \"transfer\",\n              authorization: [\n                {\n                  actor: displayaccountname(), // use account that was logged in\n                  permission: \"active\",\n                },\n              ],\n              data: {\n                from: displayaccountname(),\n                to: \"cet.f\",\n                //quantity: 10.6593 * tokens + \" EFX\",\n                memo: \"EOSETF creation through eosetf.io\",\n                quantity: parseFloat(emtmult * tokens).toFixed(4) + \" EMT\",\n\n              },\n            },\n\n\n            {\n              account: \"minedfstoken\",\n              name: \"transfer\",\n              authorization: [\n                {\n                  actor: displayaccountname(), // use account that was logged in\n                  permission: \"active\",\n                },\n              ],\n              data: {\n                from: displayaccountname(),\n                to: \"cet.f\",\n                //quantity: 10.6593 * tokens + \" EFX\",\n                memo: \"EOSETF creation through eosetf.io\",\n                quantity: parseFloat(dfsmult * tokens).toFixed(4) + \" DFS\",\n\n              },\n            },\n\n\n\n\n          ],\n        };\n        // The activeUser.signTransaction will propose the passed in transaction to the logged in Authenticator\n        await activeUser.signTransaction(transaction, {\n          broadcast: true,\n          expireSeconds: 300,\n        });\n\n\n\n        sucessstake();\n\n      } catch (error) {\n        console.log(error.message);\n        actionpuccis(\n          error.message\n        );\n      }\n    } else {\n      showModal();\n    }\n  };\n\n\n\n\n  const sendetf = async () => {\n    const {\n      ual: { login, displayError, showModal },\n    } = props;\n    // Via static contextType = UALContext, access to the activeUser object on this.context is now available\n    const {\n      ual: { activeUser },\n    } = props;\n\n\n    var eosetf = Number(redeemtokens).toFixed(4);\n\n\n    if (activeUser) {\n      try {\n        const transaction = {\n          actions: [\n            {\n              account: \"cet.f\",\n              name: \"transfer\",\n              authorization: [\n                {\n                  actor: displayaccountname(), // use account that was logged in\n                  permission: \"active\",\n                },\n              ],\n              data: {\n                from: displayaccountname(),\n                to: \"cet.f\",\n                quantity: eosetf + \" EOSETF\",\n                memo: \"EOSETF redemption through eosetf.io\",\n              },\n            },\n\n\n          ],\n        };\n        // The activeUser.signTransaction will propose the passed in transaction to the logged in Authenticator\n        await activeUser.signTransaction(transaction, {\n          broadcast: true,\n          expireSeconds: 300,\n        });\n\n        sucessredemption();\n        /*\n\n                ReactGA.event({\n                  category: \"Chain acion\",\n                  action: \"User redeemed tokens.\",\n                });\n        */\n        //alert(\"GREAT SUCCESS!\")\n        //window.location.reload(false);\n\n      } catch (error) {\n        console.log(error.message);\n        actionpuccis(\n          error.message\n        );\n      }\n    } else {\n      showModal();\n    }\n  };\n\n  const toggleDrawer = (open) => (event) => {\n    setDrawerstate(open);\n  };\n\n  const compare = () => {\n    const a = parseFloat(vigmult * tokens).toFixed(4)\n    const b = gettokenbalance(vigbalance)\n    const c = Math.floor(a * 100) > Math.floor(b * 100)\n    return c\n\n  }\n\n\n  return (\n\n    <div className=\"App\">\n\n      <header className=\"App-header\">\n        <div class=\"outsidebutton githubbutton\" onClick={() => window.open('https://github.com/n0umen0n/sceosetf', \"_blank\")}><img class=\"outsideimgright\" src=\"assets/github.png\" /><div class=\"outsidebuttontext\">GIT</div></div>\n        <div class=\"outsidebutton telegrambutton\" onClick={() => window.open('https://t.me/eosetf', \"_blank\")}><img class=\"outsideimgright\" src=\"assets/telegram.webp\" /><div class=\"outsidebuttontext\">TG</div></div>\n        <div class=\"outsidebutton twitterbutton\" onClick={() => window.open('https://twitter.com/CETF13', \"_blank\")}><img class=\"outsideimgright\" src=\"assets/twitter.png\" /><div class=\"outsidebuttontext\">TWIT</div></div>\n        <div class=\"outsidebutton mediumbutton\" onClick={() => window.open('https://medium.com/@eosetf', \"_blank\")}><img class=\"outsideimgright\" src=\"assets/med.png\" /><div class=\"outsidebuttontext\">MED</div></div>\n\n        <img src=\"assets/burger.svg\" class=\"menubutton\" onClick={toggleDrawer(true)} />\n        <div class=\"maincard\">\n          <div class=\"outsidebutton govrnbutton\" onClick={() => window.open('https://app.consortium.vote/community/zlmdhu2blclw', \"_blank\")}><img class=\"outsideimg\" src=\"assets/consologo.png\" /><div class=\"outsidebuttontext\">VOTE</div></div>\n          <div class=\"outsidebutton buybutton\" onClick={() => window.open('https://defibox.io/pool-market-details/1232', \"_blank\")}><img class=\"outsideimg\" src=\"assets/buylogo.png\" /><div class=\"outsidebuttontext\">BUY/SELL</div></div>\n          <Drawer\n            anchor=\"right\"\n            open={drawerstate}\n            onClose={toggleDrawer(false)}\n            onOpen={toggleDrawer(true)}\n            opacity=\"0.5\"\n          >\n            <div class=\"sidemenu\">\n              <div class=\"mobilemenu\">\n                <div class=\"logo\">\n                  <img width=\"64px\" src=\"assets/logo.svg\" />\n                </div>\n                <div class=\"appname\">\n                  <a>CETF</a>\n                </div>\n                <div class=\"accountname\">\n                  {accountname == \"\" ? <a>not logged in</a> : accountname}\n                </div>\n                <div class=\"menuitemswrapper\">\n                  <table class=\"menuitems\">\n                    <tr onClick={() => menuClick(\"create\")}>\n                      <td><img class=\"menuimg\" src=\"assets/productbox1.svg\" /></td>\n                      <td><a class=\"menuitemtext\">Create</a></td>\n                    </tr>\n                    <tr onClick={() => menuClick(\"redeem\")}>\n                      <td><img class=\"menuimg\" src=\"assets/productbox2.svg\" /></td>\n                      <td><a class=\"menuitemtext\">Redeem</a></td>\n                    </tr>\n                    <tr onClick={() => window.open('https://defibox.io/pool-market-details/1232', \"_blank\")}>\n                      <td><img class=\"menuimg\" src=\"assets/checkout.svg\" /></td>\n                      <td><a class=\"menuitemtext\">Buy</a></td>\n                    </tr>\n                    <tr onClick={() => window.open('https://app.consortium.vote/community/zlmdhu2blclw', \"_blank\")}>\n                      <td><img class=\"menuimg\" src=\"assets/govern.svg\" /></td>\n                      <td><a class=\"menuitemtext\">Govern</a></td>\n                    </tr>\n                    <tr onClick={() => menuClick(\"stats\")}>\n                      <td><img class=\"menuimg\" src=\"assets/stats.svg\" /></td>\n                      <td><a class=\"menuitemtext\">Statistics</a></td>\n                    </tr>\n                    <tr onClick={() => menuClick(\"about\")}>\n                      <td><img class=\"menuimg\" src=\"assets/briefcase.svg\" /></td>\n                      <td><a class=\"menuitemtext\">Tokens</a></td>\n                    </tr>\n                    <tr onClick={() => window.open('https://t.me/eosetf', \"_blank\")}>\n                      <td><img class=\"menuimg\" src=\"assets/telegram.svg\" /></td>\n                      <td><a class=\"menuitemtext\">Telegram</a></td>\n                    </tr>\n                    <tr onClick={() => window.open('https://github.com/n0umen0n/sceosetf', \"_blank\")}>\n                      <td><img class=\"menuimg\" src=\"assets/github.svg\" /></td>\n                      <td><a class=\"menuitemtext\">Github</a></td>\n                    </tr>\n                    {accountname == \"\" ?\n                      <tr onClick={() => showModal()}>\n                        <td><img class=\"menuimg\" src=\"assets/login.svg\" /></td>\n                        <td><a class=\"menuitemtext\">Login</a></td>\n                      </tr>\n                      :\n                      <tr onClick={() => logmeout()}>\n                        <td><img class=\"menuimg\" src=\"assets/logout.svg\" /></td>\n                        <td><a class=\"menuitemtext\">Logout</a></td>\n                      </tr>\n                    }\n                  </table>\n                </div>\n              </div>\n            </div>\n          </Drawer>\n          <div class=\"leftbar\">\n            <div class=\"logo\">\n              <img width=\"64px\" src=\"assets/logo.svg\" />\n            </div>\n            <div class=\"appname\">\n              <a>CETF</a>\n            </div>\n            <div class=\"accountname\">\n              {accountname == \"\" ? <a>Not logged in</a> : accountname}\n            </div>\n            <div class=\"menuitemswrapper\">\n              <table class=\"menuitems\">\n                <tr onClick={() => setView(\"create\")}>\n                  <td><img class=\"menuimg\" src=\"assets/productbox1.svg\" /></td>\n                  <td><a class=\"menuitemtext\">Create</a></td>\n                </tr>\n                <tr onClick={() => setView(\"redeem\")}>\n                  <td><img class=\"menuimg\" src=\"assets/productbox2.svg\" /></td>\n                  <td><a class=\"menuitemtext\">Redeem</a></td>\n                </tr>\n                <tr onClick={() => setView(\"stats\")}>\n                  <td><img class=\"menuimg\" src=\"assets/stats.svg\" /></td>\n                  <td><a class=\"menuitemtext\">Statistics</a></td>\n                </tr>\n                <tr onClick={() => setView(\"about\")}>\n                  <td><img class=\"menuimg\" src=\"assets/briefcase.svg\" /></td>\n                  <td><a class=\"menuitemtext\">Tokens</a></td>\n                </tr>\n                {accountname == \"\" ?\n                  <tr onClick={() => showModal()}>\n                    <td><img class=\"menuimg\" src=\"assets/login.svg\" /></td>\n                    <td><a class=\"menuitemtext\">Login</a></td>\n                  </tr>\n                  :\n                  <tr onClick={() => logmeout()}>\n                    <td><img class=\"menuimg\" src=\"assets/logout.svg\" /></td>\n                    <td><a class=\"menuitemtext\">Logout</a></td>\n                  </tr>\n                }\n              </table>\n            </div>\n          </div>\n          {view == \"create\" ?\n            <div class=\"rightbar\">\n              <div class=\"rightbartopbox\">\n                <div class=\"createetftitle\">\n                  <div>\n                    <a\n                    >\n\n                      Create EOSETF\n\n\n                    </a>\n                  </div>\n                </div>\n                <div className={classes.root}>\n                  <Accordion className={classes.expansion}>\n                    <AccordionSummary\n                      expandIcon={<ExpandMoreIcon />}\n                      aria-controls=\"panel1a-content\"\n                      id=\"panel1a-header\"\n                      className={classes.summary}\n                    >\n                      <Typography className={classes.heading}>Click here for more information</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails className={classes.expansion2}>\n                      <Scrollbars class=\"mask2\" style={{ width: \"100%\", height: \"25vh\" }} >\n                        <Typography className={classes.heading} style={{ \"padding-right\": \"10px\", \"padding-bottom\": \"46px\" }}>\n                          Creation involves transfer of tokens to cet.f account, the code is unaudited and at this point there is no multisig.\n                                        <br /> <br />To create EOSETF your account must hold 13 different EOS mainnet tokens.\n                                        <br /> <br />After creation your account is issued EOSETF and CETF tokens (starting with 65k CETF per 1 EOSETF).\n                                        <br /> <br />CETF will be used as a governance and fee distribution token.\n                                        <br /><br />Each time 20m CETF are issued the issuance of CETF is halved.\n                                      <br /> circulation 0m to 20m (CETF) | 1 EOSETF = 65k CETF\n                                      <br /> circulation 20m to 40m (CETF) | 1 EOSETF = 32.5k CETF\n                                      <br /> circulation 40m to 60m (CETF) | 1 EOSETF = 16.250k CETF\n                                      <br /> circulation 60m to 80m (CETF) | 1 EOSETF = 8.125k CETF\n\n                                      <br />  <br />At 80m CETF (4615 EOSETF / 3 halvings) no more CETF will be issued.\n                                      <br /> <br />Due to the initial CETF distribution, redemption of tokens <br /> will be activated after the CETF distribution or latest 31.04.2021 18:00 UTC.\n                                      <br /> <br />Redemption fee is set to 5%\n                                          </Typography>\n                      </Scrollbars>\n                      <div class=\"fade\" />\n                    </AccordionDetails>\n                  </Accordion>\n                </div>\n                <div class=\"slidertext\">\n                  <a>You are creating <input style={{ \"color\": tokens > 200 ? \"red\" : \"inherit\" }} class=\"tokeninput\" type=\"number\" value={tokens} onChange={e => setTokens(e.target.value)}></input> EOSETF</a>\n                </div>\n                <div class=\"slider\">\n                  <CustomSlider\n                    defaultValue={0.0000}\n                    value={tokens}\n                    aria-label=\"custom thumb label\"\n                    step={1.0000}\n                    min={0}\n                    max={200.0000}\n                    onChangeCommitted={(e, val) => setTokens(val)}\n                    style={{\n                      marginBottom: \"10px\",\n                      \"margin-top\": \"10px\",\n                      color: \"white\",\n                    }}\n                  />\n                </div>\n              </div>\n              <Scrollbars class=\"mask\" style={{ width: \"100%\", height: \"90%\" }} autoHide >\n                <div class=\"rightbar\">\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(dappmult * tokens).toFixed(4) > gettokenbalance(dappbalance) ? \"solid 2px red\" : \"none\" }}>\n                    <div class=\"tokenlogo\">\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/dapp.png\" />\n                    </div>\n                    <div class=\"smallcardtext\">\n                      <a> {parseFloat(dappmult * tokens).toFixed(4)} DAPP tokens</a>\n                    </div>\n                    <div class=\"trxbutton\">\n                      {parseFloat(dappmult * tokens).toFixed(4) < gettokenbalance(dappbalance) ?\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\n                        :\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/193', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\n                      }\n                    </div>\n                  </div>\n\n                  <div class=\"smallcard\" style={{ \"border\": compare(vigmult, tokens, vigbalance) ? \"solid 2px red\" : \"none\" }}>\n                    <div class=\"tokenlogo\">\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/vigor.png\" />\n                    </div>\n                    <div class=\"smallcardtext\">\n                      <a> {parseFloat(vigmult * tokens).toFixed(4)} VIG tokens</a>\n                    </div>\n                    <div class=\"trxbutton\">\n                      {parseFloat(vigmult * tokens).toFixed(4) < gettokenbalance(vigbalance) ?\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\n                        :\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/11', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\n                      }\n                    </div>\n                  </div>\n\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(iqmult * tokens).toFixed(3) > gettokenbalance(iqbalance) ? \"solid 2px red\" : \"none\" }}>\n                    <div class=\"tokenlogo\">\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/everipedia.png\" />\n                    </div>\n                    <div class=\"smallcardtext\">\n                      <a> {parseFloat(iqmult * tokens).toFixed(3)} IQ tokens</a>\n                    </div>\n                    <div class=\"trxbutton\">\n                      {parseFloat(iqmult * tokens).toFixed(3) < gettokenbalance(iqbalance) ?\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\n                        :\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/93', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\n                      }\n                    </div>\n                  </div>\n\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(ogxmult * tokens).toFixed(8) > gettokenbalance(ogxbalance) ? \"solid 2px red\" : \"none\" }}>\n                    <div class=\"tokenlogo\">\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/ogx.png\" />\n                    </div>\n                    <div class=\"smallcardtext\">\n                      <a> {parseFloat(ogxmult * tokens).toFixed(8)} OGX tokens</a>\n                    </div>\n                    <div class=\"trxbutton\">\n                      {parseFloat(ogxmult * tokens).toFixed(8) < gettokenbalance(ogxbalance) ?\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\n                        :\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/878', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\n                      }\n                    </div>\n                  </div>\n\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(boxmult * tokens).toFixed(6) > gettokenbalance(boxbalance) ? \"solid 2px red\" : \"none\" }}>\n                    <div class=\"tokenlogo\">\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/tokendefi.png\" />\n                    </div>\n                    <div class=\"smallcardtext\">\n                      <a> {parseFloat(boxmult * tokens).toFixed(6)} BOX tokens</a>\n                    </div>\n                    <div class=\"trxbutton\">\n                      {parseFloat(boxmult * tokens).toFixed(6) < gettokenbalance(boxbalance) ?\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\n                        :\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/878', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\n                      }\n                    </div>\n                  </div>\n\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(efxmult * tokens).toFixed(4) > gettokenbalance(efxbalance) ? \"solid 2px red\" : \"none\" }}>\n                    <div class=\"tokenlogo\">\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/efx.png\" />\n                    </div>\n                    <div class=\"smallcardtext\">\n                      <a> {parseFloat(efxmult * tokens).toFixed(4)} EFX tokens</a>\n                    </div>\n                    <div class=\"trxbutton\">\n                      {parseFloat(efxmult * tokens).toFixed(4) < gettokenbalance(efxbalance) ?\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\n                        :\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/191', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\n                      }\n                    </div>\n                  </div>\n\n\n\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(pizzamult * tokens).toFixed(4) > gettokenbalance(pizzabalance) ? \"solid 2px red\" : \"none\" }}>\n                    <div class=\"tokenlogo\">\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/pizza.png\" />\n                    </div>\n                    <div class=\"smallcardtext\">\n                      <a> {parseFloat(pizzamult * tokens).toFixed(4)} PIZZA tokens</a>\n                    </div>\n                    <div class=\"trxbutton\">\n                      {parseFloat(pizzamult * tokens).toFixed(4) < gettokenbalance(pizzabalance) ?\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\n                        :\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/14', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\n                      }\n                    </div>\n                  </div>\n\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(chexmult * tokens).toFixed(8) > gettokenbalance(chexbalance) ? \"solid 2px red\" : \"none\" }}>\n                    <div class=\"tokenlogo\">\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/chex.png\" />\n                    </div>\n                    <div class=\"smallcardtext\">\n                      <a> {parseFloat(chexmult * tokens).toFixed(8)} CHEX tokens</a>\n                    </div>\n                    <div class=\"trxbutton\">\n                      {parseFloat(chexmult * tokens).toFixed(8) < gettokenbalance(chexbalance) ?\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\n                        :\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/28', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\n                      }\n                    </div>\n                  </div>\n\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(ndxmult * tokens).toFixed(4) > gettokenbalance(ndxbalance) ? \"solid 2px red\" : \"none\" }}>\n                    <div class=\"tokenlogo\">\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/ndx.png\" />\n                    </div>\n                    <div class=\"smallcardtext\">\n                      <a> {parseFloat(ndxmult * tokens).toFixed(4)} NDX tokens</a>\n                    </div>\n                    <div class=\"trxbutton\">\n                      {parseFloat(ndxmult * tokens).toFixed(4) < gettokenbalance(ndxbalance) ?\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\n                        :\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/1', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\n                      }\n                    </div>\n                  </div>\n\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(tptmult * tokens).toFixed(4) > gettokenbalance(tptbalance) ? \"solid 2px red\" : \"none\" }}>\n                    <div class=\"tokenlogo\">\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/tpt.png\" />\n                    </div>\n                    <div class=\"smallcardtext\">\n                      <a> {parseFloat(tptmult * tokens).toFixed(4)} TPT tokens</a>\n                    </div>\n                    <div class=\"trxbutton\">\n                      {parseFloat(tptmult * tokens).toFixed(4) < gettokenbalance(tptbalance) ?\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\n                        :\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/4', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\n                      }\n                    </div>\n                  </div>\n\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(emtmult * tokens).toFixed(4) > gettokenbalance(emtbalance) ? \"solid 2px red\" : \"none\" }}>\n                    <div class=\"tokenlogo\">\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/emt.png\" />\n                    </div>\n                    <div class=\"smallcardtext\">\n                      <a> {parseFloat(emtmult * tokens).toFixed(4)} EMT tokens</a>\n                    </div>\n                    <div class=\"trxbutton\">\n                      {parseFloat(emtmult * tokens).toFixed(4) < gettokenbalance(emtbalance) ?\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\n                        :\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/255', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\n                      }\n                    </div>\n                  </div>\n\n\n\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(dfsmult * tokens).toFixed(4) > gettokenbalance(dfsbalance) ? \"solid 2px red\" : \"none\" }}>\n                    <div class=\"tokenlogo\">\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/dfs.png\" />\n                    </div>\n                    <div class=\"smallcardtext\">\n                      <a> {parseFloat(dfsmult * tokens).toFixed(4)} DFS tokens</a>\n                    </div>\n                    <div class=\"trxbutton\">\n                      {parseFloat(dfsmult * tokens).toFixed(4) < gettokenbalance(dfsbalance) ?\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\n                        :\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/22', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\n                      }\n                    </div>\n                  </div>\n\n\n\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(dadmult * tokens).toFixed(6) > gettokenbalance(dadbalance) ? \"solid 2px red\" : \"none\" }}>\n                    <div class=\"tokenlogo\">\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/dad.png\" />\n                    </div>\n                    <div class=\"smallcardtext\">\n                      <a> {parseFloat(dadmult * tokens).toFixed(6)} DAD tokens</a>\n                    </div>\n                    <div class=\"trxbutton\">\n                      {parseFloat(dadmult * tokens).toFixed(6) < gettokenbalance(dadbalance) ?\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\n                        :\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/588', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\n                      }\n                    </div>\n                  </div>\n                  <div style={{ \"display\": \"block\", \"opacity\": \"0\" }}>.<br />.<br />.</div>\n\n                </div>\n              </Scrollbars>\n              <div class=\"fade\" />\n              <button onClick={() => send()} class=\"createbutton\">Create EOSETF</button>\n            </div>\n\n\n            : view == \"redeem\" ?\n              <div class=\"rightbar\">\n                <div class=\"rightbartopbox\">\n                  <div class=\"createetftitle\">\n                    <div>\n                      <a\n                      >\n\n                        Redeem tokens\n\n\n                      </a>\n                    </div>\n                  </div>\n                  <div className={classes.root}>\n                    <Accordion className={classes.expansion}>\n                      <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1a-content\"\n                        id=\"panel1a-header\"\n                        className={classes.summary}\n                      >\n                        <Typography className={classes.heading}>Click here for more information</Typography>\n                      </AccordionSummary>\n                      <AccordionDetails className={classes.expansion2}>\n                        <Typography className={classes.heading}>\n                          To redeem 13 tokens, EOSETF must be sent to cet.f account. <br /><br />\n                          Sent EOSETF tokens get burned.<br /><br />\n                        Due to the initial CETF distribution, redemption of tokens will be activated when the CETF distribution ends or latest 31.04.2021 18:00 UTC.<br /><br />\n                        Redemption fee is set to 5%.\n                      </Typography>\n                      </AccordionDetails>\n                    </Accordion>\n                  </div>\n                  <div class=\"slidertext\">\n                    <a>You are redeeming <input class=\"tokeninput\" type=\"number\" value={redeemtokens} onChange={e => setRedeemtokens(e.target.value)}></input> EOSETF</a>\n                  </div>\n                  <div class=\"slider\">\n                    <CustomSlider\n                      defaultValue={0.0000}\n                      aria-label=\"custom thumb label\"\n                      step={1.0000}\n                      value={redeemtokens}\n                      min={0}\n                      max={200.0000}\n                      onChangeCommitted={(e, val) => setRedeemtokens(val)}\n                      style={{\n                        marginBottom: \"10px\",\n                        \"margin-top\": \"10px\",\n                        color: \"white\",\n                      }}\n                    />\n                  </div>\n                </div>\n                <Scrollbars class=\"mask\" style={{ width: \"100%\", height: \"90%\" }} autoHide >\n                  <div class=\"rightbar\">\n                    <div class=\"smallcard\">\n                      <div class=\"tokenlogo\">\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/dapp.png\" />\n                      </div>\n                      <div class=\"smallcardtext\">\n                        <a>{(redeemtokens * dappmult * redemptionfee).toFixed(4)} DAPP tokens returned</a>\n                      </div>\n                      <div class=\"trxbutton\">\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\n                      </div>\n                    </div>\n\n                    <div class=\"smallcard\">\n                      <div class=\"tokenlogo\">\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/vigor.png\" />\n                      </div>\n                      <div class=\"smallcardtext\">\n                        <a>{(redeemtokens * vigmult * redemptionfee).toFixed(4)} VIG tokens returned</a>\n                      </div>\n                      <div class=\"trxbutton\">\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\n                      </div>\n                    </div>\n\n                    <div class=\"smallcard\">\n                      <div class=\"tokenlogo\">\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/everipedia.png\" />\n                      </div>\n                      <div class=\"smallcardtext\">\n                        <a>{(redeemtokens * iqmult * redemptionfee).toFixed(3)} IQ tokens returned</a>\n                      </div>\n                      <div class=\"trxbutton\">\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\n                      </div>\n                    </div>\n\n                    <div class=\"smallcard\">\n                      <div class=\"tokenlogo\">\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/ogx.png\" />\n                      </div>\n                      <div class=\"smallcardtext\">\n                        <a>{(redeemtokens * ogxmult * redemptionfee).toFixed(8)} OGX tokens returned</a>\n                      </div>\n                      <div class=\"trxbutton\">\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\n                      </div>\n                    </div>\n\n                    <div class=\"smallcard\">\n                      <div class=\"tokenlogo\">\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/tokendefi.png\" />\n                      </div>\n                      <div class=\"smallcardtext\">\n                        <a>{(redeemtokens * boxmult * redemptionfee).toFixed(6)} BOX tokens returned</a>\n                      </div>\n                      <div class=\"trxbutton\">\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\n                      </div>\n                    </div>\n\n                    <div class=\"smallcard\">\n                      <div class=\"tokenlogo\">\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/efx.png\" />\n                      </div>\n                      <div class=\"smallcardtext\">\n                        <a>{(redeemtokens * efxmult * redemptionfee).toFixed(4)} EFX tokens returned</a>\n                      </div>\n                      <div class=\"trxbutton\">\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\n                      </div>\n                    </div>\n\n                    <div class=\"smallcard\">\n                      <div class=\"tokenlogo\">\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/dad.png\" />\n                      </div>\n                      <div class=\"smallcardtext\">\n                        <a>{(redeemtokens * dadmult * redemptionfee).toFixed(6)} DAD tokens returned</a>\n                      </div>\n                      <div class=\"trxbutton\">\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\n                      </div>\n                    </div>\n\n\n                    <div class=\"smallcard\">\n                      <div class=\"tokenlogo\">\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/dfs.png\" />\n                      </div>\n                      <div class=\"smallcardtext\">\n                        <a>{(redeemtokens * dfsmult * redemptionfee).toFixed(4)} DFS tokens returned</a>\n                      </div>\n                      <div class=\"trxbutton\">\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\n                      </div>\n                    </div>\n\n                    <div class=\"smallcard\">\n                      <div class=\"tokenlogo\">\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/emt.png\" />\n                      </div>\n                      <div class=\"smallcardtext\">\n                        <a>{(redeemtokens * emtmult * redemptionfee).toFixed(4)} EMT tokens returned</a>\n                      </div>\n                      <div class=\"trxbutton\">\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\n                      </div>\n                    </div>\n\n                    <div class=\"smallcard\">\n                      <div class=\"tokenlogo\">\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/tpt.png\" />\n                      </div>\n                      <div class=\"smallcardtext\">\n                        <a>{(redeemtokens * tptmult * redemptionfee).toFixed(4)} TPT tokens returned</a>\n                      </div>\n                      <div class=\"trxbutton\">\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\n                      </div>\n                    </div>\n\n                    <div class=\"smallcard\">\n                      <div class=\"tokenlogo\">\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/ndx.png\" />\n                      </div>\n                      <div class=\"smallcardtext\">\n                        <a>{(redeemtokens * ndxmult * redemptionfee).toFixed(4)} NDX tokens returned</a>\n                      </div>\n                      <div class=\"trxbutton\">\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\n                      </div>\n                    </div>\n\n                    <div class=\"smallcard\">\n                      <div class=\"tokenlogo\">\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/chex.png\" />\n                      </div>\n                      <div class=\"smallcardtext\">\n                        <a>{(redeemtokens * chexmult * redemptionfee).toFixed(8)} CHEX tokens returned</a>\n                      </div>\n                      <div class=\"trxbutton\">\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\n                      </div>\n                    </div>\n\n                    <div class=\"smallcard\">\n                      <div class=\"tokenlogo\">\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/pizza.png\" />\n                      </div>\n                      <div class=\"smallcardtext\">\n                        <a>{(redeemtokens * pizzamult * redemptionfee).toFixed(4)} PIZZA tokens returned</a>\n                      </div>\n                      <div class=\"trxbutton\">\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\n                      </div>\n                    </div>\n\n\n\n                    <div style={{ \"display\": \"block\", \"opacity\": \"0\" }}>.<br />.<br />.</div>\n\n                  </div>\n                </Scrollbars>\n                <button class=\"createbutton\" onClick={() => sendetf()}>Redeem tokens</button>\n              </div>\n\n              : view == \"stats\" ?\n                <div class=\"rightbar\">\n                  <div class=\"rightbartopbox\">\n                    <div class=\"createetftitle\">\n                      <div>\n                        <a\n                        >\n\n                          Statistics\n                        </a>\n                      </div>\n                    </div>\n                    <div className={classes.root}>\n                      <Accordion className={classes.expansion}>\n                        <AccordionSummary\n                          expandIcon={<ExpandMoreIcon />}\n                          aria-controls=\"panel1a-content\"\n                          id=\"panel1a-header\"\n                          className={classes.summary}\n                        >\n                          <Typography className={classes.heading}>Click here for more information</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails className={classes.expansion2}>\n                          <Typography className={classes.heading}>\n                            Distribution of CETF will end when Circulating supply of EOSETF will be 4615. <br />  <br /> Approximate value of 4615 EOSETF = 25k USD.\n                        </Typography>\n                        </AccordionDetails>\n                      </Accordion>\n                    </div>\n                  </div>\n\n                  <Scrollbars class=\"mask\" style={{ width: \"80%\" }} autoHide >\n                    <div class=\"statcards\">\n                      <div class=\"statcard\">\n                        <a class=\"stat\">{gettokenbalanceone(eosetfbalanceind).toLocaleString()} EOSETF</a><a class=\"statexplainer\">My balance</a>\n                      </div>\n\n                      <div class=\"statcard\">\n                        <a class=\"stat\">{gettokenbalanceone(etfbalanceind).toLocaleString()} CETF</a><a class=\"statexplainer\">My balance</a>\n                      </div>\n\n                      <div class=\"statcard\">\n                        <a class=\"stat\">{gettokensupply(eosetfbalance).toLocaleString()} EOSETF</a><a class=\"statexplainer\">Circulating supply</a>\n                      </div>\n\n                      <div class=\"statcard\">\n                        <a class=\"stat\">{gettokensupply(etfbalance).toLocaleString()} CETF</a><a class=\"statexplainer\">Circulating supply (Max 80m)</a>\n                      </div>\n\n\n                      <div class=\"statcard\">\n                        <a class=\"stat\">{creationreward().toLocaleString()} CETF</a><a class=\"statexplainer\"> Issuance per 1 EOSTF</a>\n                      </div>\n                      <div class=\"statcard\">\n                        <a class=\"stat\">{halvings(gettokensupply(etfbalance)).toLocaleString()}</a><a class=\"statexplainer\">Halvings (Max 3)</a>\n                      </div>\n                      <div class=\"statcard\">\n                        <a class=\"stat\">{parseFloat(geteosetfprice().toFixed(2))} EOS</a><a class=\"statexplainer\">EOSETF price</a>\n                      </div>\n                      <div class=\"statcard\">\n                        <a class=\"stat\">{parseFloat(getpricesum().toFixed(2))} EOS </a><a class=\"statexplainer\">Price of tokens bought separately</a>\n                      </div>\n                    </div>\n                    <div style={{ \"display\": \"block\", \"opacity\": \"0\" }}>.<br />.<br />.</div>\n\n                  </Scrollbars>\n                  <div class=\"fade\" />\n                </div>\n                : view == \"about\" ?\n                  <div class=\"rightbar\">\n                    <div class=\"rightbartopbox\">\n\n                      <div class=\"createetftitle\">\n                        EOSETF token allocation\n                    </div>\n                      <div class=\"slidertext\">\n                        <a>Chart shows % (in USD) of each token in the fund</a>\n                      </div>\n                    </div>\n                    <div class=\"chartwrapper\">\n                      <Doughnut options={{ maintainAspectRatio: false, maxWidth: 300, height: \"auto\" }} responsive=\"true\" data={data} legend={{ \"position\": \"bottom\" }} />\n                    </div>\n                  </div>\n\n                  : <a>Error</a>\n          }\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default withUAL(App);\n//                      <a> My balance: {gettokenbalance(etfbalanceind)} CETF  </a>                       <a>Total supply: {gettokensupply(etfbalance)} CETF  </a>                       <a>Total supply: {gettokensupply(eosetfbalance)} EOSETF  </a>\n/*\n\n\n\n                      <a> Current supply: {gettokensupply(etfbalance)} CETF (Distribution ends at 30m CETF, no more CETF will be issued) </a>\n                      <br></br><br></br>\n\n                      <a>Current supply: {gettokensupply(eosetfbalance)} EOSETF </a>\n                      <br></br><br></br>\n\n                      <a>Issuance per 1 EOSETF: {creationreward()} CETF   </a>\n\n                      <br></br><br></br>\n\n                      <a>Halvings: {halvings(gettokensupply(etfbalance))}   </a>\n\n*/\n",{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":1,"column":8,"nodeType":"223","messageId":"224","endLine":1,"endColumn":12},{"ruleId":"221","severity":1,"message":"225","line":8,"column":8,"nodeType":"223","messageId":"224","endLine":8,"endColumn":20},{"ruleId":"221","severity":1,"message":"226","line":9,"column":8,"nodeType":"223","messageId":"224","endLine":9,"endColumn":16},{"ruleId":"221","severity":1,"message":"227","line":12,"column":8,"nodeType":"223","messageId":"224","endLine":12,"endColumn":15},{"ruleId":"221","severity":1,"message":"228","line":13,"column":10,"nodeType":"223","messageId":"224","endLine":13,"endColumn":13},{"ruleId":"221","severity":1,"message":"229","line":13,"column":15,"nodeType":"223","messageId":"224","endLine":13,"endColumn":18},{"ruleId":"221","severity":1,"message":"230","line":83,"column":23,"nodeType":"223","messageId":"224","endLine":83,"endColumn":32},{"ruleId":"221","severity":1,"message":"231","line":83,"column":46,"nodeType":"223","messageId":"224","endLine":83,"endColumn":51},{"ruleId":"232","severity":1,"message":"233","line":332,"column":6,"nodeType":"234","endLine":332,"endColumn":19,"suggestions":"235"},{"ruleId":"232","severity":1,"message":"236","line":349,"column":6,"nodeType":"234","endLine":349,"endColumn":19,"suggestions":"237"},{"ruleId":"238","severity":1,"message":"239","line":354,"column":49,"nodeType":"240","messageId":"241","endLine":354,"endColumn":51},{"ruleId":"232","severity":1,"message":"242","line":443,"column":6,"nodeType":"234","endLine":443,"endColumn":19,"suggestions":"243"},{"ruleId":"232","severity":1,"message":"242","line":464,"column":6,"nodeType":"234","endLine":464,"endColumn":19,"suggestions":"244"},{"ruleId":"232","severity":1,"message":"242","line":486,"column":6,"nodeType":"234","endLine":486,"endColumn":19,"suggestions":"245"},{"ruleId":"232","severity":1,"message":"242","line":557,"column":6,"nodeType":"234","endLine":557,"endColumn":19,"suggestions":"246"},{"ruleId":"232","severity":1,"message":"242","line":580,"column":6,"nodeType":"234","endLine":580,"endColumn":19,"suggestions":"247"},{"ruleId":"232","severity":1,"message":"242","line":603,"column":6,"nodeType":"234","endLine":603,"endColumn":19,"suggestions":"248"},{"ruleId":"232","severity":1,"message":"242","line":626,"column":6,"nodeType":"234","endLine":626,"endColumn":19,"suggestions":"249"},{"ruleId":"232","severity":1,"message":"242","line":650,"column":6,"nodeType":"234","endLine":650,"endColumn":19,"suggestions":"250"},{"ruleId":"232","severity":1,"message":"242","line":672,"column":6,"nodeType":"234","endLine":672,"endColumn":19,"suggestions":"251"},{"ruleId":"232","severity":1,"message":"242","line":696,"column":6,"nodeType":"234","endLine":696,"endColumn":19,"suggestions":"252"},{"ruleId":"232","severity":1,"message":"242","line":728,"column":6,"nodeType":"234","endLine":728,"endColumn":19,"suggestions":"253"},{"ruleId":"232","severity":1,"message":"242","line":751,"column":6,"nodeType":"234","endLine":751,"endColumn":19,"suggestions":"254"},{"ruleId":"232","severity":1,"message":"242","line":774,"column":6,"nodeType":"234","endLine":774,"endColumn":19,"suggestions":"255"},{"ruleId":"232","severity":1,"message":"242","line":798,"column":6,"nodeType":"234","endLine":798,"endColumn":19,"suggestions":"256"},{"ruleId":"232","severity":1,"message":"242","line":820,"column":6,"nodeType":"234","endLine":820,"endColumn":19,"suggestions":"257"},{"ruleId":"232","severity":1,"message":"242","line":844,"column":6,"nodeType":"234","endLine":844,"endColumn":19,"suggestions":"258"},{"ruleId":"221","severity":1,"message":"259","line":876,"column":9,"nodeType":"223","messageId":"224","endLine":876,"endColumn":27},{"ruleId":"221","severity":1,"message":"231","line":942,"column":14,"nodeType":"223","messageId":"224","endLine":942,"endColumn":19},{"ruleId":"221","severity":1,"message":"260","line":942,"column":21,"nodeType":"223","messageId":"224","endLine":942,"endColumn":33},{"ruleId":"221","severity":1,"message":"231","line":1249,"column":14,"nodeType":"223","messageId":"224","endLine":1249,"endColumn":19},{"ruleId":"221","severity":1,"message":"260","line":1249,"column":21,"nodeType":"223","messageId":"224","endLine":1249,"endColumn":33},{"ruleId":"261","severity":1,"message":"262","line":1330,"column":127,"nodeType":"263","endLine":1330,"endColumn":182},{"ruleId":"261","severity":1,"message":"262","line":1331,"column":112,"nodeType":"263","endLine":1331,"endColumn":170},{"ruleId":"261","severity":1,"message":"262","line":1332,"column":118,"nodeType":"263","endLine":1332,"endColumn":174},{"ruleId":"261","severity":1,"message":"262","line":1333,"column":117,"nodeType":"263","endLine":1333,"endColumn":169},{"ruleId":"261","severity":1,"message":"262","line":1335,"column":9,"nodeType":"263","endLine":1335,"endColumn":88},{"ruleId":"261","severity":1,"message":"262","line":1337,"column":142,"nodeType":"263","endLine":1337,"endColumn":195},{"ruleId":"261","severity":1,"message":"262","line":1338,"column":133,"nodeType":"263","endLine":1338,"endColumn":184},{"ruleId":"261","severity":1,"message":"262","line":1349,"column":19,"nodeType":"263","endLine":1349,"endColumn":61},{"ruleId":"264","severity":1,"message":"265","line":1352,"column":19,"nodeType":"263","endLine":1352,"endColumn":22},{"ruleId":"238","severity":1,"message":"239","line":1355,"column":32,"nodeType":"240","messageId":"241","endLine":1355,"endColumn":34},{"ruleId":"264","severity":1,"message":"265","line":1355,"column":40,"nodeType":"263","endLine":1355,"endColumn":43},{"ruleId":"261","severity":1,"message":"262","line":1360,"column":27,"nodeType":"263","endLine":1360,"endColumn":79},{"ruleId":"264","severity":1,"message":"265","line":1361,"column":27,"nodeType":"263","endLine":1361,"endColumn":51},{"ruleId":"261","severity":1,"message":"262","line":1364,"column":27,"nodeType":"263","endLine":1364,"endColumn":79},{"ruleId":"264","severity":1,"message":"265","line":1365,"column":27,"nodeType":"263","endLine":1365,"endColumn":51},{"ruleId":"261","severity":1,"message":"262","line":1368,"column":27,"nodeType":"263","endLine":1368,"endColumn":76},{"ruleId":"264","severity":1,"message":"265","line":1369,"column":27,"nodeType":"263","endLine":1369,"endColumn":51},{"ruleId":"261","severity":1,"message":"262","line":1372,"column":27,"nodeType":"263","endLine":1372,"endColumn":74},{"ruleId":"264","severity":1,"message":"265","line":1373,"column":27,"nodeType":"263","endLine":1373,"endColumn":51},{"ruleId":"261","severity":1,"message":"262","line":1376,"column":27,"nodeType":"263","endLine":1376,"endColumn":73},{"ruleId":"264","severity":1,"message":"265","line":1377,"column":27,"nodeType":"263","endLine":1377,"endColumn":51},{"ruleId":"261","severity":1,"message":"262","line":1380,"column":27,"nodeType":"263","endLine":1380,"endColumn":77},{"ruleId":"264","severity":1,"message":"265","line":1381,"column":27,"nodeType":"263","endLine":1381,"endColumn":51},{"ruleId":"261","severity":1,"message":"262","line":1384,"column":27,"nodeType":"263","endLine":1384,"endColumn":76},{"ruleId":"264","severity":1,"message":"265","line":1385,"column":27,"nodeType":"263","endLine":1385,"endColumn":51},{"ruleId":"261","severity":1,"message":"262","line":1388,"column":27,"nodeType":"263","endLine":1388,"endColumn":74},{"ruleId":"264","severity":1,"message":"265","line":1389,"column":27,"nodeType":"263","endLine":1389,"endColumn":51},{"ruleId":"238","severity":1,"message":"239","line":1391,"column":34,"nodeType":"240","messageId":"241","endLine":1391,"endColumn":36},{"ruleId":"261","severity":1,"message":"262","line":1393,"column":29,"nodeType":"263","endLine":1393,"endColumn":75},{"ruleId":"264","severity":1,"message":"265","line":1394,"column":29,"nodeType":"263","endLine":1394,"endColumn":53},{"ruleId":"261","severity":1,"message":"262","line":1398,"column":29,"nodeType":"263","endLine":1398,"endColumn":76},{"ruleId":"264","severity":1,"message":"265","line":1399,"column":29,"nodeType":"263","endLine":1399,"endColumn":53},{"ruleId":"261","severity":1,"message":"262","line":1409,"column":15,"nodeType":"263","endLine":1409,"endColumn":57},{"ruleId":"264","severity":1,"message":"265","line":1412,"column":15,"nodeType":"263","endLine":1412,"endColumn":18},{"ruleId":"238","severity":1,"message":"239","line":1415,"column":28,"nodeType":"240","messageId":"241","endLine":1415,"endColumn":30},{"ruleId":"264","severity":1,"message":"265","line":1415,"column":36,"nodeType":"263","endLine":1415,"endColumn":39},{"ruleId":"261","severity":1,"message":"262","line":1420,"column":23,"nodeType":"263","endLine":1420,"endColumn":75},{"ruleId":"264","severity":1,"message":"265","line":1421,"column":23,"nodeType":"263","endLine":1421,"endColumn":47},{"ruleId":"261","severity":1,"message":"262","line":1424,"column":23,"nodeType":"263","endLine":1424,"endColumn":75},{"ruleId":"264","severity":1,"message":"265","line":1425,"column":23,"nodeType":"263","endLine":1425,"endColumn":47},{"ruleId":"261","severity":1,"message":"262","line":1428,"column":23,"nodeType":"263","endLine":1428,"endColumn":69},{"ruleId":"264","severity":1,"message":"265","line":1429,"column":23,"nodeType":"263","endLine":1429,"endColumn":47},{"ruleId":"261","severity":1,"message":"262","line":1432,"column":23,"nodeType":"263","endLine":1432,"endColumn":73},{"ruleId":"264","severity":1,"message":"265","line":1433,"column":23,"nodeType":"263","endLine":1433,"endColumn":47},{"ruleId":"238","severity":1,"message":"239","line":1435,"column":30,"nodeType":"240","messageId":"241","endLine":1435,"endColumn":32},{"ruleId":"261","severity":1,"message":"262","line":1437,"column":25,"nodeType":"263","endLine":1437,"endColumn":71},{"ruleId":"264","severity":1,"message":"265","line":1438,"column":25,"nodeType":"263","endLine":1438,"endColumn":49},{"ruleId":"261","severity":1,"message":"262","line":1442,"column":25,"nodeType":"263","endLine":1442,"endColumn":72},{"ruleId":"264","severity":1,"message":"265","line":1443,"column":25,"nodeType":"263","endLine":1443,"endColumn":49},{"ruleId":"238","severity":1,"message":"239","line":1449,"column":17,"nodeType":"240","messageId":"241","endLine":1449,"endColumn":19},{"ruleId":"264","severity":1,"message":"265","line":1454,"column":21,"nodeType":"263","endLine":1455,"endColumn":22},{"ruleId":"264","severity":1,"message":"265","line":1496,"column":19,"nodeType":"263","endLine":1496,"endColumn":22},{"ruleId":"261","severity":1,"message":"262","line":1519,"column":23,"nodeType":"263","endLine":1519,"endColumn":100},{"ruleId":"264","severity":1,"message":"265","line":1522,"column":23,"nodeType":"263","endLine":1522,"endColumn":26},{"ruleId":"261","severity":1,"message":"262","line":1526,"column":25,"nodeType":"263","endLine":1526,"endColumn":85},{"ruleId":"261","severity":1,"message":"262","line":1528,"column":25,"nodeType":"263","endLine":1528,"endColumn":175},{"ruleId":"261","severity":1,"message":"262","line":1535,"column":23,"nodeType":"263","endLine":1535,"endColumn":101},{"ruleId":"264","severity":1,"message":"265","line":1538,"column":23,"nodeType":"263","endLine":1538,"endColumn":26},{"ruleId":"261","severity":1,"message":"262","line":1542,"column":25,"nodeType":"263","endLine":1542,"endColumn":85},{"ruleId":"261","severity":1,"message":"262","line":1544,"column":25,"nodeType":"263","endLine":1544,"endColumn":174},{"ruleId":"261","severity":1,"message":"262","line":1551,"column":23,"nodeType":"263","endLine":1551,"endColumn":106},{"ruleId":"264","severity":1,"message":"265","line":1554,"column":23,"nodeType":"263","endLine":1554,"endColumn":26},{"ruleId":"261","severity":1,"message":"262","line":1558,"column":25,"nodeType":"263","endLine":1558,"endColumn":85},{"ruleId":"261","severity":1,"message":"262","line":1560,"column":25,"nodeType":"263","endLine":1560,"endColumn":174},{"ruleId":"261","severity":1,"message":"262","line":1567,"column":23,"nodeType":"263","endLine":1567,"endColumn":99},{"ruleId":"264","severity":1,"message":"265","line":1570,"column":23,"nodeType":"263","endLine":1570,"endColumn":26},{"ruleId":"261","severity":1,"message":"262","line":1574,"column":25,"nodeType":"263","endLine":1574,"endColumn":85},{"ruleId":"261","severity":1,"message":"262","line":1576,"column":25,"nodeType":"263","endLine":1576,"endColumn":175},{"ruleId":"261","severity":1,"message":"262","line":1583,"column":23,"nodeType":"263","endLine":1583,"endColumn":105},{"ruleId":"264","severity":1,"message":"265","line":1586,"column":23,"nodeType":"263","endLine":1586,"endColumn":26},{"ruleId":"261","severity":1,"message":"262","line":1590,"column":25,"nodeType":"263","endLine":1590,"endColumn":85},{"ruleId":"261","severity":1,"message":"262","line":1592,"column":25,"nodeType":"263","endLine":1592,"endColumn":175},{"ruleId":"261","severity":1,"message":"262","line":1599,"column":23,"nodeType":"263","endLine":1599,"endColumn":99},{"ruleId":"264","severity":1,"message":"265","line":1602,"column":23,"nodeType":"263","endLine":1602,"endColumn":26},{"ruleId":"261","severity":1,"message":"262","line":1606,"column":25,"nodeType":"263","endLine":1606,"endColumn":85},{"ruleId":"261","severity":1,"message":"262","line":1608,"column":25,"nodeType":"263","endLine":1608,"endColumn":175},{"ruleId":"261","severity":1,"message":"262","line":1617,"column":23,"nodeType":"263","endLine":1617,"endColumn":101},{"ruleId":"264","severity":1,"message":"265","line":1620,"column":23,"nodeType":"263","endLine":1620,"endColumn":26},{"ruleId":"261","severity":1,"message":"262","line":1624,"column":25,"nodeType":"263","endLine":1624,"endColumn":85},{"ruleId":"261","severity":1,"message":"262","line":1626,"column":25,"nodeType":"263","endLine":1626,"endColumn":174},{"ruleId":"261","severity":1,"message":"262","line":1633,"column":23,"nodeType":"263","endLine":1633,"endColumn":100},{"ruleId":"264","severity":1,"message":"265","line":1636,"column":23,"nodeType":"263","endLine":1636,"endColumn":26},{"ruleId":"261","severity":1,"message":"262","line":1640,"column":25,"nodeType":"263","endLine":1640,"endColumn":85},{"ruleId":"261","severity":1,"message":"262","line":1642,"column":25,"nodeType":"263","endLine":1642,"endColumn":174},{"ruleId":"261","severity":1,"message":"262","line":1649,"column":23,"nodeType":"263","endLine":1649,"endColumn":99},{"ruleId":"264","severity":1,"message":"265","line":1652,"column":23,"nodeType":"263","endLine":1652,"endColumn":26},{"ruleId":"261","severity":1,"message":"262","line":1656,"column":25,"nodeType":"263","endLine":1656,"endColumn":85},{"ruleId":"261","severity":1,"message":"262","line":1658,"column":25,"nodeType":"263","endLine":1658,"endColumn":173},{"ruleId":"261","severity":1,"message":"262","line":1665,"column":23,"nodeType":"263","endLine":1665,"endColumn":99},{"ruleId":"264","severity":1,"message":"265","line":1668,"column":23,"nodeType":"263","endLine":1668,"endColumn":26},{"ruleId":"261","severity":1,"message":"262","line":1672,"column":25,"nodeType":"263","endLine":1672,"endColumn":85},{"ruleId":"261","severity":1,"message":"262","line":1674,"column":25,"nodeType":"263","endLine":1674,"endColumn":173},{"ruleId":"261","severity":1,"message":"262","line":1681,"column":23,"nodeType":"263","endLine":1681,"endColumn":99},{"ruleId":"264","severity":1,"message":"265","line":1684,"column":23,"nodeType":"263","endLine":1684,"endColumn":26},{"ruleId":"261","severity":1,"message":"262","line":1688,"column":25,"nodeType":"263","endLine":1688,"endColumn":85},{"ruleId":"261","severity":1,"message":"262","line":1690,"column":25,"nodeType":"263","endLine":1690,"endColumn":175},{"ruleId":"261","severity":1,"message":"262","line":1699,"column":23,"nodeType":"263","endLine":1699,"endColumn":99},{"ruleId":"264","severity":1,"message":"265","line":1702,"column":23,"nodeType":"263","endLine":1702,"endColumn":26},{"ruleId":"261","severity":1,"message":"262","line":1706,"column":25,"nodeType":"263","endLine":1706,"endColumn":85},{"ruleId":"261","severity":1,"message":"262","line":1708,"column":25,"nodeType":"263","endLine":1708,"endColumn":174},{"ruleId":"261","severity":1,"message":"262","line":1717,"column":23,"nodeType":"263","endLine":1717,"endColumn":99},{"ruleId":"264","severity":1,"message":"265","line":1720,"column":23,"nodeType":"263","endLine":1720,"endColumn":26},{"ruleId":"261","severity":1,"message":"262","line":1724,"column":25,"nodeType":"263","endLine":1724,"endColumn":85},{"ruleId":"261","severity":1,"message":"262","line":1726,"column":25,"nodeType":"263","endLine":1726,"endColumn":175},{"ruleId":"238","severity":1,"message":"239","line":1739,"column":20,"nodeType":"240","messageId":"241","endLine":1739,"endColumn":22},{"ruleId":"264","severity":1,"message":"265","line":1744,"column":23,"nodeType":"263","endLine":1745,"endColumn":24},{"ruleId":"264","severity":1,"message":"265","line":1774,"column":21,"nodeType":"263","endLine":1774,"endColumn":24},{"ruleId":"261","severity":1,"message":"262","line":1797,"column":25,"nodeType":"263","endLine":1797,"endColumn":102},{"ruleId":"264","severity":1,"message":"265","line":1800,"column":25,"nodeType":"263","endLine":1800,"endColumn":28},{"ruleId":"261","severity":1,"message":"262","line":1803,"column":25,"nodeType":"263","endLine":1803,"endColumn":85},{"ruleId":"261","severity":1,"message":"262","line":1809,"column":25,"nodeType":"263","endLine":1809,"endColumn":103},{"ruleId":"264","severity":1,"message":"265","line":1812,"column":25,"nodeType":"263","endLine":1812,"endColumn":28},{"ruleId":"261","severity":1,"message":"262","line":1815,"column":25,"nodeType":"263","endLine":1815,"endColumn":85},{"ruleId":"261","severity":1,"message":"262","line":1821,"column":25,"nodeType":"263","endLine":1821,"endColumn":108},{"ruleId":"264","severity":1,"message":"265","line":1824,"column":25,"nodeType":"263","endLine":1824,"endColumn":28},{"ruleId":"261","severity":1,"message":"262","line":1827,"column":25,"nodeType":"263","endLine":1827,"endColumn":85},{"ruleId":"261","severity":1,"message":"262","line":1833,"column":25,"nodeType":"263","endLine":1833,"endColumn":101},{"ruleId":"264","severity":1,"message":"265","line":1836,"column":25,"nodeType":"263","endLine":1836,"endColumn":28},{"ruleId":"261","severity":1,"message":"262","line":1839,"column":25,"nodeType":"263","endLine":1839,"endColumn":85},{"ruleId":"261","severity":1,"message":"262","line":1845,"column":25,"nodeType":"263","endLine":1845,"endColumn":107},{"ruleId":"264","severity":1,"message":"265","line":1848,"column":25,"nodeType":"263","endLine":1848,"endColumn":28},{"ruleId":"261","severity":1,"message":"262","line":1851,"column":25,"nodeType":"263","endLine":1851,"endColumn":85},{"ruleId":"261","severity":1,"message":"262","line":1857,"column":25,"nodeType":"263","endLine":1857,"endColumn":101},{"ruleId":"264","severity":1,"message":"265","line":1860,"column":25,"nodeType":"263","endLine":1860,"endColumn":28},{"ruleId":"261","severity":1,"message":"262","line":1863,"column":25,"nodeType":"263","endLine":1863,"endColumn":85},{"ruleId":"261","severity":1,"message":"262","line":1869,"column":25,"nodeType":"263","endLine":1869,"endColumn":101},{"ruleId":"264","severity":1,"message":"265","line":1872,"column":25,"nodeType":"263","endLine":1872,"endColumn":28},{"ruleId":"261","severity":1,"message":"262","line":1875,"column":25,"nodeType":"263","endLine":1875,"endColumn":85},{"ruleId":"261","severity":1,"message":"262","line":1882,"column":25,"nodeType":"263","endLine":1882,"endColumn":101},{"ruleId":"264","severity":1,"message":"265","line":1885,"column":25,"nodeType":"263","endLine":1885,"endColumn":28},{"ruleId":"261","severity":1,"message":"262","line":1888,"column":25,"nodeType":"263","endLine":1888,"endColumn":85},{"ruleId":"261","severity":1,"message":"262","line":1894,"column":25,"nodeType":"263","endLine":1894,"endColumn":101},{"ruleId":"264","severity":1,"message":"265","line":1897,"column":25,"nodeType":"263","endLine":1897,"endColumn":28},{"ruleId":"261","severity":1,"message":"262","line":1900,"column":25,"nodeType":"263","endLine":1900,"endColumn":85},{"ruleId":"261","severity":1,"message":"262","line":1906,"column":25,"nodeType":"263","endLine":1906,"endColumn":101},{"ruleId":"264","severity":1,"message":"265","line":1909,"column":25,"nodeType":"263","endLine":1909,"endColumn":28},{"ruleId":"261","severity":1,"message":"262","line":1912,"column":25,"nodeType":"263","endLine":1912,"endColumn":85},{"ruleId":"261","severity":1,"message":"262","line":1918,"column":25,"nodeType":"263","endLine":1918,"endColumn":101},{"ruleId":"264","severity":1,"message":"265","line":1921,"column":25,"nodeType":"263","endLine":1921,"endColumn":28},{"ruleId":"261","severity":1,"message":"262","line":1924,"column":25,"nodeType":"263","endLine":1924,"endColumn":85},{"ruleId":"261","severity":1,"message":"262","line":1930,"column":25,"nodeType":"263","endLine":1930,"endColumn":102},{"ruleId":"264","severity":1,"message":"265","line":1933,"column":25,"nodeType":"263","endLine":1933,"endColumn":28},{"ruleId":"261","severity":1,"message":"262","line":1936,"column":25,"nodeType":"263","endLine":1936,"endColumn":85},{"ruleId":"261","severity":1,"message":"262","line":1942,"column":25,"nodeType":"263","endLine":1942,"endColumn":103},{"ruleId":"264","severity":1,"message":"265","line":1945,"column":25,"nodeType":"263","endLine":1945,"endColumn":28},{"ruleId":"261","severity":1,"message":"262","line":1948,"column":25,"nodeType":"263","endLine":1948,"endColumn":85},{"ruleId":"238","severity":1,"message":"239","line":1961,"column":22,"nodeType":"240","messageId":"241","endLine":1961,"endColumn":24},{"ruleId":"264","severity":1,"message":"265","line":1966,"column":25,"nodeType":"263","endLine":1967,"endColumn":26},{"ruleId":"264","severity":1,"message":"265","line":1995,"column":25,"nodeType":"263","endLine":1995,"endColumn":41},{"ruleId":"264","severity":1,"message":"265","line":1995,"column":107,"nodeType":"263","endLine":1995,"endColumn":132},{"ruleId":"264","severity":1,"message":"265","line":1999,"column":25,"nodeType":"263","endLine":1999,"endColumn":41},{"ruleId":"264","severity":1,"message":"265","line":1999,"column":102,"nodeType":"263","endLine":1999,"endColumn":127},{"ruleId":"264","severity":1,"message":"265","line":2003,"column":25,"nodeType":"263","endLine":2003,"endColumn":41},{"ruleId":"264","severity":1,"message":"265","line":2003,"column":100,"nodeType":"263","endLine":2003,"endColumn":125},{"ruleId":"264","severity":1,"message":"265","line":2007,"column":25,"nodeType":"263","endLine":2007,"endColumn":41},{"ruleId":"264","severity":1,"message":"265","line":2007,"column":95,"nodeType":"263","endLine":2007,"endColumn":120},{"ruleId":"264","severity":1,"message":"265","line":2012,"column":25,"nodeType":"263","endLine":2012,"endColumn":41},{"ruleId":"264","severity":1,"message":"265","line":2012,"column":85,"nodeType":"263","endLine":2012,"endColumn":110},{"ruleId":"264","severity":1,"message":"265","line":2015,"column":25,"nodeType":"263","endLine":2015,"endColumn":41},{"ruleId":"264","severity":1,"message":"265","line":2015,"column":100,"nodeType":"263","endLine":2015,"endColumn":125},{"ruleId":"264","severity":1,"message":"265","line":2018,"column":25,"nodeType":"263","endLine":2018,"endColumn":41},{"ruleId":"264","severity":1,"message":"265","line":2018,"column":90,"nodeType":"263","endLine":2018,"endColumn":115},{"ruleId":"264","severity":1,"message":"265","line":2021,"column":25,"nodeType":"263","endLine":2021,"endColumn":41},{"ruleId":"264","severity":1,"message":"265","line":2021,"column":88,"nodeType":"263","endLine":2021,"endColumn":113},{"ruleId":"238","severity":1,"message":"239","line":2029,"column":24,"nodeType":"240","messageId":"241","endLine":2029,"endColumn":26},{"ruleId":"264","severity":1,"message":"265","line":2037,"column":25,"nodeType":"263","endLine":2037,"endColumn":28},{"ruleId":"264","severity":1,"message":"265","line":2045,"column":21,"nodeType":"263","endLine":2045,"endColumn":24},"no-native-reassign",["266"],"no-negated-in-lhs",["267"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ReactTooltip' is defined but never used.","'InfoIcon' is defined but never used.","'ReactGA' is defined but never used.","'Bar' is defined but never used.","'Pie' is defined but never used.","'hideModal' is assigned a value but never used.","'login' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'govrnprice'. Either include it or remove the dependency array.","ArrayExpression",["268"],"React Hook useEffect has a missing dependency: 'prices'. Either include it or remove the dependency array.",["269"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'displayaccountname'. Either include it or remove the dependency array.",["270"],["271"],["272"],["273"],["274"],["275"],["276"],["277"],["278"],["279"],["280"],["281"],["282"],["283"],["284"],["285"],"'gettokenbalancetwo' is assigned a value but never used.","'displayError' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"290","fix":"292"},{"desc":"290","fix":"293"},{"desc":"290","fix":"294"},{"desc":"290","fix":"295"},{"desc":"290","fix":"296"},{"desc":"290","fix":"297"},{"desc":"290","fix":"298"},{"desc":"290","fix":"299"},{"desc":"290","fix":"300"},{"desc":"290","fix":"301"},{"desc":"290","fix":"302"},{"desc":"290","fix":"303"},{"desc":"290","fix":"304"},{"desc":"290","fix":"305"},{"desc":"290","fix":"306"},"Update the dependencies array to be: [accountname, govrnprice]",{"range":"307","text":"308"},"Update the dependencies array to be: [accountname, prices]",{"range":"309","text":"310"},"Update the dependencies array to be: [accountname, displayaccountname]",{"range":"311","text":"312"},{"range":"313","text":"312"},{"range":"314","text":"312"},{"range":"315","text":"312"},{"range":"316","text":"312"},{"range":"317","text":"312"},{"range":"318","text":"312"},{"range":"319","text":"312"},{"range":"320","text":"312"},{"range":"321","text":"312"},{"range":"322","text":"312"},{"range":"323","text":"312"},{"range":"324","text":"312"},{"range":"325","text":"312"},{"range":"326","text":"312"},{"range":"327","text":"312"},[8384,8397],"[accountname, govrnprice]",[9435,9448],"[accountname, prices]",[12507,12520],"[accountname, displayaccountname]",[13077,13090],[13661,13674],[15221,15234],[15794,15807],[16365,16378],[16938,16951],[17509,17522],[18081,18094],[18658,18671],[19243,19256],[19822,19835],[20395,20408],[20969,20982],[21541,21554],[22115,22128]]