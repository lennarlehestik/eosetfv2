[{"C:\\Users\\Kasutaja\\Desktop\\eosetf\\src\\App.js":"1","C:\\Users\\Kasutaja\\Desktop\\eosetf\\src\\reportWebVitals.js":"2"},{"size":100723,"mtime":1616445137851,"results":"3","hashOfConfig":"4"},{"size":362,"mtime":1606379858196,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":238,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"9mcfsq",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Kasutaja\\Desktop\\eosetf\\src\\App.js",["11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Slider } from '@material-ui/core';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { withUAL } from \"ual-reactjs-renderer\";\r\nimport Swal from \"sweetalert2\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ReactGA from \"react-ga\";\r\nimport { Bar, Pie, Doughnut } from 'react-chartjs-2';\r\nimport {Promise} from \"bluebird\";\r\n//import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst CustomSlider = withStyles({\r\n  root: {\r\n    color: '#52af77',\r\n    height: 8,\r\n  },\r\n  thumb: {\r\n    height: 24,\r\n    width: 24,\r\n    backgroundColor: '#fff',\r\n    border: '2px solid currentColor',\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n    '&:focus, &:hover, &$active': {\r\n      boxShadow: 'inherit',\r\n    },\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: 'calc(-50% + 4px)',\r\n  },\r\n  track: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n  rail: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n})(Slider);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    fontSize: \"14px\",\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: \"14px\",\r\n    color: \"#534C80\",\r\n    fontFamily: \"'Roboto', sans-serif\",\r\n    margin: 0\r\n  },\r\n  summary: {\r\n    padding: 0,\r\n  },\r\n  expansion: {\r\n    backgroundColor: \"rgba( 255, 255, 255, 0 )\",\r\n    boxShadow: \"none\",\r\n    borderRadius: \"100px\",\r\n    marginLeft: 0,\r\n  },\r\n  expansion2: {\r\n    fontSize: \"10px\"\r\n  }\r\n}));\r\n\r\nfunction App(props) {\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    ual: { showModal, hideModal, activeUser, login, logout },\r\n  } = props;\r\n  if (activeUser) {\r\n    const accountName = activeUser.getAccountName();\r\n    accountName.then(function (result) {\r\n      setAccountName(result);\r\n    });\r\n  }\r\n  const displayaccountname = () => {\r\n    if (accountname) {\r\n      return accountname;\r\n    }\r\n  };\r\n  const [drawerstate, setDrawerstate] = useState(false)\r\n  const [tokens, setTokens] = useState(0)\r\n  const [redeemtokens, setRedeemtokens] = useState(0)\r\n  const [view, setView] = useState(\"create\")\r\n  const [accountname, setAccountName] = useState(\"\")\r\n\r\n  const logmeout = () => {\r\n    logout()\r\n    setAccountName(\"\")\r\n  }\r\n\r\n  /*\r\n    const efxmult = 2.6911\r\n    const dadmult = 0.880282\r\n    const iqmult = 26.233\r\n    const vigmult = 125.0000\r\n    const dappmult = 12.6263\r\n    const boxmult = 0.036075\r\n    const ogxmult = 2.13675214\r\n\r\n    const chexmult = 56.94760820\r\n    const pizzamult = 9.4696\r\n    const dfsmult = 0.0361\r\n    const emtmult = 16.3399\r\n    const ndxmult = 338.5071\r\n    const tptmult = 17.9856\r\n  */\r\n\r\n\r\n  const redemptionfee = 0.95\r\n  const efxmult = 2.6911\r\n  const dadmult = 0.880282\r\n  const iqmult = 26.233\r\n  const vigmult = 125.0000\r\n  const dappmult = 12.6263\r\n  const boxmult = 0.036075\r\n  const ogxmult = 2.13675214\r\n\r\n  const chexmult = 56.94760820\r\n  const pizzamult = 4.4696\r\n  const dfsmult = 0.0140\r\n  const emtmult = 16.3399\r\n  const ndxmult = 338.5071\r\n  const tptmult = 17.9856\r\n\r\n\r\n  const sucessstake = () => {\r\n    const Toast = Swal.mixin({\r\n      toast: true,\r\n      position: \"bottom-end\",\r\n      showConfirmButton: false,\r\n      timer: 6000,\r\n      timerProgressBar: true,\r\n      onOpen: (toast) => {\r\n        toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n        toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n      },\r\n    });\r\n    Toast.fire({\r\n      icon: \"success\",\r\n      title: \"CETF and EOSETF successfully issued!\",\r\n    });\r\n  };\r\n\r\n  const sucessredemption = () => {\r\n    const Toast = Swal.mixin({\r\n      toast: true,\r\n      position: \"bottom-end\",\r\n      showConfirmButton: false,\r\n      timer: 6000,\r\n      timerProgressBar: true,\r\n      onOpen: (toast) => {\r\n        toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n        toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n      },\r\n    });\r\n    Toast.fire({\r\n      icon: \"success\",\r\n      title: \"Tokens successfully redeemed!\",\r\n    });\r\n  };\r\n\r\n\r\n\r\n  const actionpuccis = (err) => {\r\n    const Toast = Swal.mixin({\r\n      toast: true,\r\n      position: \"bottom-end\",\r\n      showConfirmButton: false,\r\n      timer: 5000,\r\n      timerProgressBar: true,\r\n      didOpen: (toast) => {\r\n        toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n        toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n      },\r\n    });\r\n    Toast.fire({\r\n      icon: \"error\",\r\n      title: err,\r\n    });\r\n  };\r\n  const[ogxdefibox,setOgxdefibox]=useState()\r\n  const[daddefibox,setDaddefibox]=useState()\r\n  const[boxdefibox,setBoxdefibox]=useState()\r\n  const[vigdefibox,setVigdefibox]=useState()\r\n  const[iqdefibox,setIqdefibox]=useState()\r\n  const[efxdefibox,setEfxdefibox]=useState()\r\n  const[dappdefibox,setDappdefibox]=useState()\r\n  const[chexdefibox,setChexdefibox]=useState()\r\n  const[pizzadefibox,setPizzadefibox]=useState()\r\n  const[dfsdefibox,setDfsdefibox]=useState()\r\n  const[emtdefibox,setEmtdefibox]=useState()\r\n  const[ndxdefibox,setNdxdefibox]=useState()\r\n  const[tptdefibox,setTptdefibox]=useState()\r\n\r\n  const [ogxbalance, setOgx] = useState({ rows: [] });\r\n  const [dadbalance, setDad] = useState({ rows: [] });\r\n  const [boxbalance, setBox] = useState({ rows: [] });\r\n  const [vigbalance, setVig] = useState({ rows: [] });\r\n  const [iqbalance, setIq] = useState({ rows: [] });\r\n  const [efxbalance, setEfx] = useState({ rows: [] });\r\n  const [dappbalance, setDapp] = useState({ rows: [] });\r\n\r\n  const [chexbalance, setChex] = useState({ rows: [] });\r\n  const [pizzabalance, setPizza] = useState({ rows: [] });\r\n  const [dfsbalance, setDfs] = useState({ rows: [] });\r\n  const [emtbalance, setEmt] = useState({ rows: [] });\r\n  const [ndxbalance, setNdx] = useState({ rows: [] });\r\n  const [tptbalance, setTpt] = useState({ rows: [] });\r\n\r\n  const [govrnprice, setGovrnprice] = useState({ rows: [] });\r\n  const [dadpriceeos, setDadprice] = useState({ rows: [] });\r\n  const [eosetfprice, setEosetfprice] = useState({ rows: [] });\r\n\r\n  const [prices, setPrices] = useState([]);\r\n\r\n  const [eosetfbalance, setEosetf] = useState({ rows: [] });\r\n  const [etfbalance, setEtf] = useState({ rows: [] });\r\n  const [eosetfbalanceind, setEosetfind] = useState({ rows: [] });\r\n  const [etfbalanceind, setEtfind] = useState({ rows: [] });\r\n\r\n  const menuClick = (which) => {\r\n    setView(which)\r\n    setDrawerstate(false)\r\n  }\r\n\r\n  /*\r\n\r\n    const getdata = () => {\r\n      fetch('https://api.newdex.io/v1/price?symbol=consortiumlv-govrn-eos')\r\n        .then(response => response.json())\r\n        .then(data => console.log(data.data.price));\r\n\r\n      );\r\n\r\n    }\r\n    '\r\n\r\n  useEffect(() => {\r\n    fetch('https://api.newdex.io/v1/price?symbol=consortiumlv-govrn-eos', {\r\n    }).then((response) =>\r\n      response.json().then((govrnprice) => setGovrnprice(govrnprice.data.price))\r\n    );\r\n    console.log(govrnprice);\r\n\r\n  }, [accountname]);\r\n\r\n\r\n  const getdata = () => {\r\n    fetch('https://api.newdex.io/v1/price?symbol=consortiumlv-govrn-eos', {\r\n    }).then((response) =>\r\n      response.json().then((govrnprice) => setGovrnprice(govrnprice.data.price))\r\n    );\r\n    console.log(govrnprice);\r\n  }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n      fetch('https://api.newdex.io/v1/price?symbol=consortiumlv-govrn-eos', {\r\n    }).then((response) =>\r\n      response.json().then((govrnprice) => setGovrnprice(govrnprice))\r\n    );\r\n    console.log(govrnprice);\r\n\r\n    }, [accountname]);\r\n\r\n\r\n\r\n    */\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"swap.defi\",\r\n        table: \"pairs\",\r\n        scope: \"swap.defi\",\r\n        lower_bound: 588,\r\n        upper_bound: 588,\r\n        limit: 1,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((dadpriceeos) => setDadprice(dadpriceeos))\r\n    );\r\n  }, [accountname]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"swap.defi\",\r\n        table: \"pairs\",\r\n        scope: \"swap.defi\",\r\n        lower_bound: 1232,\r\n        upper_bound: 1232,\r\n        limit: 1,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((eosetfprice) => setEosetfprice(eosetfprice))\r\n    );\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetch('https://api.newdex.io/v1/price?symbol=consortiumlv-govrn-eos', {\r\n    }).then((response) =>\r\n      response.json().then((govrnprice) => setGovrnprice(govrnprice.data.price))\r\n    );\r\n    console.log(govrnprice);\r\n\r\n  }, [accountname]);\r\n\r\n\r\n  useEffect(() => {\r\n    const newdexcomms = [{ community: \"box\", symbol: \"token.defi-box-eos\" }, { community: \"ogx\", symbol: \"core.ogx-ogx-eos\" }, { community: \"iq\", symbol: \"everipediaiq-iq-eos\" }\r\n      , { community: \"dapp\", symbol: \"dappservices-dapp-eos\" }, { community: \"vig\", symbol: \"vig111111111-vig-eos\" }, { community: \"efx\", symbol: \"effecttokens-efx-eos\" }, { community: \"chex\", symbol: \"chexchexchex-chex-eos\" }, { community: \"pizza\", symbol: \"pizzatotoken-pizza-eos\" }\r\n      , { community: \"dfs\", symbol: \"minedfstoken-dfs-eos\" }, { community: \"emt\", symbol: \"emanateoneos-emt-eos\" }, { community: \"ndx\", symbol: \"newdexissuer-ndx-eos\" }, { community: \"tpt\", symbol: \"eosiotptoken-tpt-eos\" }]\r\n    newdexcomms.forEach((item) => {\r\n      fetch('https://api.newdex.io/v1/price?symbol=' + item.symbol)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          Object.assign(item, { price: data?.data?.price })\r\n          setPrices([...newdexcomms]);\r\n        }\r\n        )\r\n    })\r\n    console.log(prices)\r\n  }, [accountname]);\r\n\r\n  const getprice = (community) => {\r\n    if (prices) {\r\n      const datar = prices.filter(\r\n        function (data) { return data.community == community }\r\n      );\r\n      if (datar[0])\r\n        return datar[0].price\r\n    }\r\n  }\r\n\r\n\r\n  const getdadprice = () => {\r\n    if (dadpriceeos.rows[0]) {\r\n      return Number(dadpriceeos.rows[0].price1_last);\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const geteosetfprice = () => {\r\n    if (eosetfprice.rows[0]) {\r\n      return Number(eosetfprice.rows[0].price1_last);\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const getpricesum = () => {\r\n    if (prices) {\r\n\r\n\r\n\r\n      return getprice(\"box\") * boxmult + getprice(\"ogx\") * ogxmult + getprice(\"iq\") * iqmult + getprice(\"dapp\") * dappmult + getprice(\"vig\") * vigmult + getprice(\"efx\") * efxmult + getprice(\"chex\") * chexmult\r\n        + getprice(\"pizza\") * pizzamult + getprice(\"dfs\") * dfsmult + getprice(\"emt\") * emtmult + getprice(\"ndx\") * ndxmult + getprice(\"tpt\") * tptmult + getdadprice() * dadmult;\r\n\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const data = {\r\n    labels: ['BOX', 'OGX', 'IQ', 'DAPP', 'VIG', 'EFX', 'CHEX', 'PIZZA', 'DFS', 'EMT', 'NDX', 'TPT', 'DAD'],\r\n    datasets: [\r\n      {\r\n        label: 'ETF weight',\r\n        fill: true,\r\n        lineTension: 0.1,\r\n        backgroundColor: [\"#f17ae9\", \"#f9a9f1\", \"#fdd5f8\", \"#ffffff\", \"#7aa6e3\", \"#8fe1ff\", \"#21d2ff\", \"#f9a9f1\", \"#fdd5f8\", \"#fffff5\", \"#cbf0ff\", \"#fbaaeb\", \"#21d2f8\"],\r\n        borderCapStyle: 'butt',\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: 'miter',\r\n        data: [parseFloat((getprice(\"box\") * boxmult / getpricesum() * 100)).toFixed(2), parseFloat((getprice(\"ogx\") * ogxmult / getpricesum() * 100)).toFixed(2), parseFloat((getprice(\"iq\") * iqmult / getpricesum() * 100)).toFixed(2), parseFloat((getprice(\"dapp\") * dappmult / getpricesum() * 100)).toFixed(2),\r\n        parseFloat((getprice(\"vig\") * vigmult / getpricesum() * 100)).toFixed(2), parseFloat((getprice(\"efx\") * efxmult / getpricesum() * 100)).toFixed(2), parseFloat((getprice(\"chex\") * chexmult / getpricesum() * 100)).toFixed(2), parseFloat((getprice(\"pizza\") * pizzamult / getpricesum() * 100)).toFixed(2),\r\n        parseFloat((getprice(\"dfs\") * dfsmult / getpricesum() * 100)).toFixed(2), parseFloat((getprice(\"emt\") * emtmult / getpricesum() * 100)).toFixed(2), parseFloat((getprice(\"ndx\") * ndxmult / getpricesum() * 100)).toFixed(2), parseFloat((getprice(\"tpt\") * tptmult / getpricesum() * 100)).toFixed(2), parseFloat((getdadprice() * dadmult / getpricesum() * 100)).toFixed(2)]\r\n      }\r\n    ]\r\n  };\r\n\r\n\r\n\r\n\r\n  //price1_last\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"cet.f\",\r\n        table: \"accounts\",\r\n        scope: displayaccountname(),\r\n        limit: 3,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((etfbalanceind) => setEtfind(etfbalanceind))\r\n    );\r\n  }, [accountname]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"cet.f\",\r\n        table: \"accounts\",\r\n        scope: displayaccountname(),\r\n        lower_bound: \"CETF\",\r\n        upper_bound: \"CETF\",\r\n        limit: 1,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((etfbalanceind) => setEtfind(etfbalanceind))\r\n    );\r\n  }, [accountname]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"cet.f\",\r\n        table: \"accounts\",\r\n        scope: displayaccountname(),\r\n        lower_bound: \"EOSETF\",\r\n        upper_bound: \"EOSETF\",\r\n        limit: 1,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((eosetfbalanceind) => setEosetfind(eosetfbalanceind))\r\n    );\r\n  }, [accountname]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"cet.f\",\r\n        table: \"stat\",\r\n        scope: \"CETF\",\r\n        limit: 1,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((etfbalance) => setEtf(etfbalance))\r\n    );\r\n  }, [accountname]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"cet.f\",\r\n        table: \"stat\",\r\n        scope: \"EOSETF\",\r\n        limit: 1,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((eosetfbalance) => setEosetf(eosetfbalance))\r\n    );\r\n  }, [accountname]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"core.ogx\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((ogxbalance) => setOgx(ogxbalance))\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"dadtoken1111\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((dadbalance) => setDad(dadbalance))\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"token.defi\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((boxbalance) => setBox(boxbalance))\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"vig111111111\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((vigbalance) => setVig(vigbalance))\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"everipediaiq\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((iqbalance) => setIq(iqbalance))\r\n\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"effecttokens\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((efxbalance) => setEfx(efxbalance))\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"dappservices\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((dappbalance) => setDapp(dappbalance))\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"chexchexchex\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((chexbalance) => setChex(chexbalance))\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"pizzatotoken\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((pizzabalance) => setPizza(pizzabalance))\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"minedfstoken\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((dfsbalance) => setDfs(dfsbalance))\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"emanateoneos\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((emtbalance) => setEmt(emtbalance))\r\n\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"newdexissuer\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((ndxbalance) => setNdx(ndxbalance))\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"eosiotptoken\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((tptbalance) => setTpt(tptbalance))\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const gettokenbalance = (token) => {\r\n    if (token.rows[0]) {\r\n      return Number(token.rows[0].balance.split(\" \")[0]);\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const gettokenbalanceone = (token) => {\r\n    if (token.rows[0]) {\r\n      return Math.floor(Number(token.rows[0].balance.split(\" \")[0]));\r\n      //return (token.rows[0].balance);\r\n\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const gettokenbalancetwo = (token) => {\r\n    if (token.rows[1]) {\r\n      return Math.floor(Number(token.rows[1].balance.split(\" \")[0]));\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n\r\n  const gettokensupply = (token) => {\r\n    if (token.rows[0]) {\r\n      return Math.floor(Number(token.rows[0].supply.split(\" \")[0]));\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const halvingdivider = () => {\r\n    if (etfbalance.rows[0]) {\r\n      return parseInt(\r\n        Math.pow(\r\n          2,\r\n          parseInt(\r\n            Math.floor(Number(etfbalance.rows[0].supply.split(\" \")[0])) /\r\n            20000000\r\n          )\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  const creationreward = () => {\r\n    return parseInt(\r\n      65000 /\r\n      halvingdivider()\r\n    );\r\n  };\r\n\r\n\r\n  const halvings = (totalcirc) => {\r\n    if (totalcirc < 20000000) {\r\n      return 0;\r\n    } else if (totalcirc >> 20000000 && totalcirc < 40000000) {\r\n      return 1;\r\n    } else if (totalcirc >> 40000000 && totalcirc < 60000000) {\r\n      return 2;\r\n    } else if (totalcirc >> 60000000 && totalcirc < 80000000) {\r\n      return 3;\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const send = async () => {\r\n        const getogx = () => {\r\n        return fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                json: true,\r\n                code: \"swap.defi\",\r\n                table: \"pairs\",\r\n                scope: \"swap.defi\",\r\n                lower_bound: 878,\r\n                upper_bound: 878,\r\n                limit: 1,\r\n            }),\r\n        }).then((response) => response.json());\r\n      }\r\n        const getdad = () => {\r\n            return fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    json: true,\r\n                    code: \"swap.defi\",\r\n                    table: \"pairs\",\r\n                    scope: \"swap.defi\",\r\n                    lower_bound: 588,\r\n                    upper_bound: 588,\r\n                    limit: 1,\r\n                }),\r\n            }).then((response) => response.json());\r\n        }\r\n        const getbox = () => {\r\n            return fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    json: true,\r\n                    code: \"swap.defi\",\r\n                    table: \"pairs\",\r\n                    scope: \"swap.defi\",\r\n                    lower_bound: 194,\r\n                    upper_bound: 194,\r\n                    limit: 1,\r\n                }),\r\n            }).then((response) => response.json());\r\n        }\r\n        const getvig = () => {\r\n            return fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    json: true,\r\n                    code: \"swap.defi\",\r\n                    table: \"pairs\",\r\n                    scope: \"swap.defi\",\r\n                    lower_bound: 11,\r\n                    upper_bound: 11,\r\n                    limit: 1,\r\n                }),\r\n            }).then((response) => response.json());\r\n        }\r\n        const getiq = () => {\r\n            return fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    json: true,\r\n                    code: \"swap.defi\",\r\n                    table: \"pairs\",\r\n                    scope: \"swap.defi\",\r\n                    lower_bound: 93,\r\n                    upper_bound: 93,\r\n                    limit: 1,\r\n                }),\r\n            }).then((response) => response.json());\r\n        }\r\n        const getefx = () => {\r\n            return fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    json: true,\r\n                    code: \"swap.defi\",\r\n                    table: \"pairs\",\r\n                    scope: \"swap.defi\",\r\n                    lower_bound: 191,\r\n                    upper_bound: 191,\r\n                    limit: 1,\r\n                }),\r\n            }).then((response) => response.json());\r\n        }\r\n        const getdapp = () => {\r\n            return fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    json: true,\r\n                    code: \"swap.defi\",\r\n                    table: \"pairs\",\r\n                    scope: \"swap.defi\",\r\n                    lower_bound: 193,\r\n                    upper_bound: 193,\r\n                    limit: 1,\r\n                }),\r\n            }).then((response) => response.json());\r\n        }\r\n        const getchex = () => {\r\n            return fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    json: true,\r\n                    code: \"swap.defi\",\r\n                    table: \"pairs\",\r\n                    scope: \"swap.defi\",\r\n                    lower_bound: 28,\r\n                    upper_bound: 28,\r\n                    limit: 1,\r\n                }),\r\n            }).then((response) => response.json());\r\n        }\r\n        const getpizza = () => {\r\n            return fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    json: true,\r\n                    code: \"swap.defi\",\r\n                    table: \"pairs\",\r\n                    scope: \"swap.defi\",\r\n                    lower_bound: 14,\r\n                    upper_bound: 14,\r\n                    limit: 1,\r\n                }),\r\n            }).then((response) => response.json());\r\n        }\r\n        const getdfs = () => {\r\n            return fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    json: true,\r\n                    code: \"swap.defi\",\r\n                    table: \"pairs\",\r\n                    scope: \"swap.defi\",\r\n                    lower_bound: 22,\r\n                    upper_bound: 22,\r\n                    limit: 1,\r\n                }),\r\n            }).then((response) => response.json());\r\n        }\r\n        const getemt = () => {\r\n            return fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    json: true,\r\n                    code: \"swap.defi\",\r\n                    table: \"pairs\",\r\n                    scope: \"swap.defi\",\r\n                    lower_bound: 255,\r\n                    upper_bound: 255,\r\n                    limit: 1,\r\n                }),\r\n            }).then((response) => response.json());\r\n        }\r\n        const getndx = () => {\r\n            return fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    json: true,\r\n                    code: \"swap.defi\",\r\n                    table: \"pairs\",\r\n                    scope: \"swap.defi\",\r\n                    lower_bound: 1,\r\n                    upper_bound: 1,\r\n                    limit: 1,\r\n                }),\r\n            }).then((response) => response.json());\r\n        }\r\n        const gettpt = () => {\r\n            return fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    json: true,\r\n                    code: \"swap.defi\",\r\n                    table: \"pairs\",\r\n                    scope: \"swap.defi\",\r\n                    lower_bound: 4,\r\n                    upper_bound: 4,\r\n                    limit: 1,\r\n                }),\r\n            }).then((response) => response.json());\r\n        }\r\n\r\n\r\n    Promise.join(getogx(),getdad(),getbox(),getvig(),getiq(),getefx(),getdapp(),getchex(),getpizza(),getdfs(),getemt(),getndx(),gettpt(), async(ogx,dad,box,vig,iq,efx,dapp,chex,pizza,dfs,emt,ndx,tpt) => {\r\n      /**const boxprice = (parseFloat(box?.rows[0].reserve0) / parseFloat(box?.rows[0].reserve1))\r\n      const needed = parseFloat(boxmult * tokens).toFixed(6)\r\n      const balance = gettokenbalance(boxbalance) **/\r\n      //const buybox = ((gettokenbalance(boxbalance) - parseFloat(boxmult * tokens).toFixed(6)) * ((parseFloat(box?.rows[0].reserve0) / parseFloat(box?.rows[0].reserve1)))).toFixed(4)\r\n      const buyogx = ((gettokenbalance(ogxbalance) - parseFloat(ogxmult * tokens).toFixed(8)) * ((parseFloat(ogx?.rows[0].reserve0) / parseFloat(ogx?.rows[0].reserve1)))).toFixed(4)\r\n      const buydad = ((gettokenbalance(dadbalance) - parseFloat(dadmult * tokens).toFixed(6)) * ((parseFloat(dad?.rows[0].reserve0) / parseFloat(dad?.rows[0].reserve1)))).toFixed(4)\r\n      const buybox = ((gettokenbalance(boxbalance) - parseFloat(boxmult * tokens).toFixed(6)) * ((parseFloat(box?.rows[0].reserve0) / parseFloat(box?.rows[0].reserve1)))).toFixed(4)\r\n      const buyvig = ((gettokenbalance(vigbalance) - parseFloat(vigmult * tokens).toFixed(4)) * ((parseFloat(vig?.rows[0].reserve0) / parseFloat(vig?.rows[0].reserve1)))).toFixed(4)\r\n      const buyiq = ((gettokenbalance(iqbalance) - parseFloat(iqmult * tokens).toFixed(3)) * ((parseFloat(iq?.rows[0].reserve0) / parseFloat(iq?.rows[0].reserve1)))).toFixed(4)\r\n      const buyefx = ((gettokenbalance(efxbalance) - parseFloat(efxmult * tokens).toFixed(4)) * ((parseFloat(efx?.rows[0].reserve0) / parseFloat(efx?.rows[0].reserve1)))).toFixed(4)\r\n      const buydapp = ((gettokenbalance(dappbalance) - parseFloat(dappmult * tokens).toFixed(4)) * ((parseFloat(dapp?.rows[0].reserve0) / parseFloat(dapp?.rows[0].reserve1)))).toFixed(4)\r\n      const buychex = ((gettokenbalance(chexbalance) - parseFloat(chexmult * tokens).toFixed(8)) * ((parseFloat(chex?.rows[0].reserve0) / parseFloat(chex?.rows[0].reserve1)))).toFixed(4)\r\n      const buypizza = ((gettokenbalance(pizzabalance) - parseFloat(pizzamult * tokens).toFixed(4)) * ((parseFloat(pizza?.rows[0].reserve0) / parseFloat(pizza?.rows[0].reserve1)))).toFixed(4)\r\n      const buydfs = ((gettokenbalance(dfsbalance) - parseFloat(dfsmult * tokens).toFixed(4)) * ((parseFloat(dfs?.rows[0].reserve0) / parseFloat(dfs?.rows[0].reserve1)))).toFixed(4)\r\n      const buyemt = ((gettokenbalance(emtbalance) - parseFloat(emtmult * tokens).toFixed(4)) * ((parseFloat(emt?.rows[0].reserve0) / parseFloat(emt?.rows[0].reserve1)))).toFixed(4)\r\n      const buyndx = ((gettokenbalance(ndxbalance) - parseFloat(ndxmult * tokens).toFixed(4)) * ((parseFloat(ndx?.rows[0].reserve0) / parseFloat(ndx?.rows[0].reserve1)))).toFixed(4)\r\n      const buytpt = ((gettokenbalance(tptbalance) - parseFloat(tptmult * tokens).toFixed(4)) * ((parseFloat(tpt?.rows[0].reserve0) / parseFloat(tpt?.rows[0].reserve1)))).toFixed(4)\r\n      console.log(buybox)\r\n\r\n      const {\r\n        ual: { login, displayError, showModal },\r\n      } = props;\r\n\r\n      const {\r\n        ual: { activeUser },\r\n      } = props;\r\n\r\n\r\n      if (activeUser) {\r\n        try {\r\n          const transaction = {\r\n            actions: [\r\n              {\r\n                account: \"dappservices\",\r\n                name: \"transfer\",\r\n                authorization: [\r\n                  {\r\n                    actor: displayaccountname(), // use account that was logged in\r\n                    permission: \"active\",\r\n                  },\r\n                ],\r\n                data: {\r\n                  from: displayaccountname(),\r\n                  to: \"cet.f\",\r\n                  //quantity: 19.2562 * tokens + \" DAPP\",\r\n                  memo: \"EOSETF creation through eosetf.io\",\r\n                  quantity: parseFloat(dappmult * tokens).toFixed(4) + \" DAPP\",\r\n\r\n                },\r\n              },\r\n\r\n              {\r\n                account: \"effecttokens\",\r\n                name: \"transfer\",\r\n                authorization: [\r\n                  {\r\n                    actor: displayaccountname(), // use account that was logged in\r\n                    permission: \"active\",\r\n                  },\r\n                ],\r\n                data: {\r\n                  from: displayaccountname(),\r\n                  to: \"cet.f\",\r\n                  //quantity: 10.6593 * tokens + \" EFX\",\r\n                  memo: \"EOSETF creation through eosetf.io\",\r\n                  quantity: parseFloat(efxmult * tokens).toFixed(4) + \" EFX\",\r\n\r\n                },\r\n              },\r\n\r\n\r\n\r\n              {\r\n                account: \"core.ogx\",\r\n                name: \"transfer\",\r\n                authorization: [\r\n                  {\r\n                    actor: displayaccountname(), // use account that was logged in\r\n                    permission: \"active\",\r\n                  },\r\n                ],\r\n                data: {\r\n                  from: displayaccountname(),\r\n                  to: \"cet.f\",\r\n                  //quantity: 1.26108207 * tokens + \" OGX\",\r\n                  memo: \"EOSETF creation through eosetf.io\",\r\n                  quantity: parseFloat(ogxmult * tokens).toFixed(8) + \" OGX\",\r\n                },\r\n              },\r\n\r\n\r\n\r\n\r\n              {\r\n                account: \"everipediaiq\",\r\n                name: \"transfer\",\r\n                authorization: [\r\n                  {\r\n                    actor: displayaccountname(), // use account that was logged in\r\n                    permission: \"active\",\r\n                  },\r\n                ],\r\n                data: {\r\n                  from: displayaccountname(),\r\n                  to: \"cet.f\",\r\n                  //quantity: 50.082 * tokens + \" IQ\",\r\n                  memo: \"EOSETF creation through eosetf.io\",\r\n                  quantity: parseFloat(iqmult * tokens).toFixed(3) + \" IQ\",\r\n\r\n                },\r\n              },\r\n\r\n\r\n\r\n              {\r\n                account: \"vig111111111\",\r\n                name: \"transfer\",\r\n                authorization: [\r\n                  {\r\n                    actor: displayaccountname(), // use account that was logged in\r\n                    permission: \"active\",\r\n                  },\r\n                ],\r\n                data: {\r\n                  from: displayaccountname(),\r\n                  to: \"cet.f\",\r\n                  //quantity: 196.7187 * tokens + \" VIG\",\r\n                  memo: \"EOSETF creation through eosetf.io\",\r\n                  quantity: parseFloat(vigmult * tokens).toFixed(4) + \" VIG\",\r\n\r\n                },\r\n              },\r\n\r\n\r\n              {\r\n                account: \"token.defi\",\r\n                name: \"transfer\",\r\n                authorization: [\r\n                  {\r\n                    actor: displayaccountname(), // use account that was logged in\r\n                    permission: \"active\",\r\n                  },\r\n                ],\r\n                data: {\r\n                  from: displayaccountname(),\r\n                  to: \"cet.f\",\r\n                  //quantity: 0.035523 * tokens + \" BOX\",\r\n                  memo: \"EOSETF creation through eosetf.io\",\r\n                  quantity: parseFloat(boxmult * tokens).toFixed(6) + \" BOX\",\r\n\r\n                },\r\n              },\r\n\r\n\r\n              {\r\n                account: \"dadtoken1111\",\r\n                name: \"transfer\",\r\n                authorization: [\r\n                  {\r\n                    actor: displayaccountname(), // use account that was logged in\r\n                    permission: \"active\",\r\n                  },\r\n                ],\r\n                data: {\r\n                  from: displayaccountname(),\r\n                  to: \"cet.f\",\r\n                  //quantity: efxmult * tokens + \" DAD\",\r\n                  memo: \"EOSETF creation through eosetf.io\",\r\n                  quantity: parseFloat(dadmult * tokens).toFixed(6) + \" DAD\",\r\n\r\n                },\r\n              },\r\n\r\n\r\n\r\n\r\n\r\n              {\r\n                account: \"pizzatotoken\",\r\n                name: \"transfer\",\r\n                authorization: [\r\n                  {\r\n                    actor: displayaccountname(), // use account that was logged in\r\n                    permission: \"active\",\r\n                  },\r\n                ],\r\n                data: {\r\n                  from: displayaccountname(),\r\n                  to: \"cet.f\",\r\n                  //quantity: 10.6593 * tokens + \" EFX\",\r\n                  memo: \"EOSETF creation through eosetf.io\",\r\n                  quantity: parseFloat(pizzamult * tokens).toFixed(4) + \" PIZZA\",\r\n\r\n                },\r\n              },\r\n\r\n\r\n\r\n              {\r\n                account: \"chexchexchex\",\r\n                name: \"transfer\",\r\n                authorization: [\r\n                  {\r\n                    actor: displayaccountname(), // use account that was logged in\r\n                    permission: \"active\",\r\n                  },\r\n                ],\r\n                data: {\r\n                  from: displayaccountname(),\r\n                  to: \"cet.f\",\r\n                  //quantity: 10.6593 * tokens + \" EFX\",\r\n                  memo: \"EOSETF creation through eosetf.io\",\r\n                  quantity: parseFloat(chexmult * tokens).toFixed(8) + \" CHEX\",\r\n\r\n                },\r\n              },\r\n\r\n              {\r\n                account: \"newdexissuer\",\r\n                name: \"transfer\",\r\n                authorization: [\r\n                  {\r\n                    actor: displayaccountname(), // use account that was logged in\r\n                    permission: \"active\",\r\n                  },\r\n                ],\r\n                data: {\r\n                  from: displayaccountname(),\r\n                  to: \"cet.f\",\r\n                  //quantity: 10.6593 * tokens + \" EFX\",\r\n                  memo: \"EOSETF creation through eosetf.io\",\r\n                  quantity: parseFloat(ndxmult * tokens).toFixed(4) + \" NDX\",\r\n\r\n                },\r\n              },\r\n\r\n              {\r\n                account: \"eosiotptoken\",\r\n                name: \"transfer\",\r\n                authorization: [\r\n                  {\r\n                    actor: displayaccountname(), // use account that was logged in\r\n                    permission: \"active\",\r\n                  },\r\n                ],\r\n                data: {\r\n                  from: displayaccountname(),\r\n                  to: \"cet.f\",\r\n                  //quantity: 10.6593 * tokens + \" EFX\",\r\n                  memo: \"EOSETF creation through eosetf.io\",\r\n                  quantity: parseFloat(tptmult * tokens).toFixed(4) + \" TPT\",\r\n\r\n                },\r\n              },\r\n\r\n              {\r\n                account: \"emanateoneos\",\r\n                name: \"transfer\",\r\n                authorization: [\r\n                  {\r\n                    actor: displayaccountname(), // use account that was logged in\r\n                    permission: \"active\",\r\n                  },\r\n                ],\r\n                data: {\r\n                  from: displayaccountname(),\r\n                  to: \"cet.f\",\r\n                  //quantity: 10.6593 * tokens + \" EFX\",\r\n                  memo: \"EOSETF creation through eosetf.io\",\r\n                  quantity: parseFloat(emtmult * tokens).toFixed(4) + \" EMT\",\r\n\r\n                },\r\n              },\r\n\r\n\r\n              {\r\n                account: \"minedfstoken\",\r\n                name: \"transfer\",\r\n                authorization: [\r\n                  {\r\n                    actor: displayaccountname(), // use account that was logged in\r\n                    permission: \"active\",\r\n                  },\r\n                ],\r\n                data: {\r\n                  from: displayaccountname(),\r\n                  to: \"cet.f\",\r\n                  //quantity: 10.6593 * tokens + \" EFX\",\r\n                  memo: \"EOSETF creation through eosetf.io\",\r\n                  quantity: parseFloat(dfsmult * tokens).toFixed(4) + \" DFS\",\r\n\r\n                },\r\n              },\r\n\r\n\r\n\r\n\r\n            ],\r\n          };\r\n\r\n          if (buyogx< 0){\r\n                      transaction.actions.push(\r\n                        {\r\n                          account: 'eosio.token',\r\n                          name: 'transfer',\r\n                          authorization: [\r\n                            {\r\n                              actor: displayaccountname(), // use account that was logged in\r\n                              permission: 'active',\r\n                            },\r\n                          ],\r\n                          data: {\r\n                            from: displayaccountname(),\r\n                            to: 'swap.defi',\r\n                            //quantity: 19.2562 * tokens + ' DAPP',\r\n                            memo: 'swap,0,'+'878',\r\n                            quantity: Math.abs(buyogx) + 'EOS',\r\n\r\n                          },\r\n                        }\r\n                      )\r\n                    }\r\n          if (buydad< 0){\r\n                      transaction.actions.push(\r\n                        {\r\n                          account: 'eosio.token',\r\n                          name: 'transfer',\r\n                          authorization: [\r\n                            {\r\n                              actor: displayaccountname(), // use account that was logged in\r\n                              permission: 'active',\r\n                            },\r\n                          ],\r\n                          data: {\r\n                            from: displayaccountname(),\r\n                            to: 'swap.defi',\r\n                            //quantity: 19.2562 * tokens + ' DAPP',\r\n                            memo: 'swap,0,'+'588',\r\n                            quantity: Math.abs(buydad) + 'EOS',\r\n\r\n                          },\r\n                        }\r\n                      )\r\n                    }\r\n          if (buybox< 0){\r\n                      transaction.actions.push(\r\n                        {\r\n                          account: 'eosio.token',\r\n                          name: 'transfer',\r\n                          authorization: [\r\n                            {\r\n                              actor: displayaccountname(), // use account that was logged in\r\n                              permission: 'active',\r\n                            },\r\n                          ],\r\n                          data: {\r\n                            from: displayaccountname(),\r\n                            to: 'swap.defi',\r\n                            //quantity: 19.2562 * tokens + ' DAPP',\r\n                            memo: 'swap,0,'+'194',\r\n                            quantity: Math.abs(buybox) + 'EOS',\r\n\r\n                          },\r\n                        }\r\n                      )\r\n                  }\r\n          if (buyvig< 0){\r\n                      transaction.actions.push(\r\n                        {\r\n                          account: 'eosio.token',\r\n                          name: 'transfer',\r\n                          authorization: [\r\n                            {\r\n                              actor: displayaccountname(), // use account that was logged in\r\n                              permission: 'active',\r\n                            },\r\n                          ],\r\n                          data: {\r\n                            from: displayaccountname(),\r\n                            to: 'swap.defi',\r\n                            //quantity: 19.2562 * tokens + ' DAPP',\r\n                            memo: 'swap,0,'+'11',\r\n                            quantity: Math.abs(buyvig) + 'EOS',\r\n\r\n                          },\r\n                        }\r\n                      )\r\n                    }\r\n          if (buyiq< 0){\r\n                      transaction.actions.push(\r\n                        {\r\n                          account: 'eosio.token',\r\n                          name: 'transfer',\r\n                          authorization: [\r\n                            {\r\n                              actor: displayaccountname(), // use account that was logged in\r\n                              permission: 'active',\r\n                            },\r\n                          ],\r\n                          data: {\r\n                            from: displayaccountname(),\r\n                            to: 'swap.defi',\r\n                            //quantity: 19.2562 * tokens + ' DAPP',\r\n                            memo: 'swap,0,'+'93',\r\n                            quantity: Math.abs(buyiq) + 'EOS',\r\n\r\n                          },\r\n                        }\r\n                      )\r\n                    }\r\n          if (buyefx< 0){\r\n                      transaction.actions.push(\r\n                        {\r\n                          account: 'eosio.token',\r\n                          name: 'transfer',\r\n                          authorization: [\r\n                            {\r\n                              actor: displayaccountname(), // use account that was logged in\r\n                              permission: 'active',\r\n                            },\r\n                          ],\r\n                          data: {\r\n                            from: displayaccountname(),\r\n                            to: 'swap.defi',\r\n                            //quantity: 19.2562 * tokens + ' DAPP',\r\n                            memo: 'swap,0,'+'191',\r\n                            quantity: Math.abs(buyefx) + 'EOS',\r\n\r\n                          },\r\n                        }\r\n                      )\r\n                    }\r\n          if (buydapp< 0){\r\n                      transaction.actions.push(\r\n                        {\r\n                          account: 'eosio.token',\r\n                          name: 'transfer',\r\n                          authorization: [\r\n                            {\r\n                              actor: displayaccountname(), // use account that was logged in\r\n                              permission: 'active',\r\n                            },\r\n                          ],\r\n                          data: {\r\n                            from: displayaccountname(),\r\n                            to: 'swap.defi',\r\n                            //quantity: 19.2562 * tokens + ' DAPP',\r\n                            memo: 'swap,0,'+'193',\r\n                            quantity: Math.abs(buydapp) + 'EOS',\r\n\r\n                          },\r\n                        }\r\n                      )\r\n                    }\r\n          if (buychex< 0){\r\n                      transaction.actions.push(\r\n                        {\r\n                          account: 'eosio.token',\r\n                          name: 'transfer',\r\n                          authorization: [\r\n                            {\r\n                              actor: displayaccountname(), // use account that was logged in\r\n                              permission: 'active',\r\n                            },\r\n                          ],\r\n                          data: {\r\n                            from: displayaccountname(),\r\n                            to: 'swap.defi',\r\n                            //quantity: 19.2562 * tokens + ' DAPP',\r\n                            memo: 'swap,0,'+'28',\r\n                            quantity: Math.abs(buychex) + 'EOS',\r\n\r\n                          },\r\n                        }\r\n                      )\r\n                    }\r\n          if (buypizza< 0){\r\n                      transaction.actions.push(\r\n                        {\r\n                          account: 'eosio.token',\r\n                          name: 'transfer',\r\n                          authorization: [\r\n                            {\r\n                              actor: displayaccountname(), // use account that was logged in\r\n                              permission: 'active',\r\n                            },\r\n                          ],\r\n                          data: {\r\n                            from: displayaccountname(),\r\n                            to: 'swap.defi',\r\n                            //quantity: 19.2562 * tokens + ' DAPP',\r\n                            memo: 'swap,0,'+'14',\r\n                            quantity: Math.abs(buypizza) + 'EOS',\r\n\r\n                          },\r\n                        }\r\n                      )\r\n                    }\r\n          if (buydfs< 0){\r\n                      transaction.actions.push(\r\n                        {\r\n                          account: 'eosio.token',\r\n                          name: 'transfer',\r\n                          authorization: [\r\n                            {\r\n                              actor: displayaccountname(), // use account that was logged in\r\n                              permission: 'active',\r\n                            },\r\n                          ],\r\n                          data: {\r\n                            from: displayaccountname(),\r\n                            to: 'swap.defi',\r\n                            //quantity: 19.2562 * tokens + ' DAPP',\r\n                            memo: 'swap,0,'+'22',\r\n                            quantity: Math.abs(buydfs) + 'EOS',\r\n\r\n                          },\r\n                        }\r\n                      )\r\n                    }\r\n          if (buyemt< 0){\r\n                      transaction.actions.push(\r\n                        {\r\n                          account: 'eosio.token',\r\n                          name: 'transfer',\r\n                          authorization: [\r\n                            {\r\n                              actor: displayaccountname(), // use account that was logged in\r\n                              permission: 'active',\r\n                            },\r\n                          ],\r\n                          data: {\r\n                            from: displayaccountname(),\r\n                            to: 'swap.defi',\r\n                            //quantity: 19.2562 * tokens + ' DAPP',\r\n                            memo: 'swap,0,'+'255',\r\n                            quantity: Math.abs(buyemt) + 'EOS',\r\n\r\n                          },\r\n                        }\r\n                      )\r\n                    }\r\n          if (buyndx< 0){\r\n                      transaction.actions.push(\r\n                        {\r\n                          account: 'eosio.token',\r\n                          name: 'transfer',\r\n                          authorization: [\r\n                            {\r\n                              actor: displayaccountname(), // use account that was logged in\r\n                              permission: 'active',\r\n                            },\r\n                          ],\r\n                          data: {\r\n                            from: displayaccountname(),\r\n                            to: 'swap.defi',\r\n                            //quantity: 19.2562 * tokens + ' DAPP',\r\n                            memo: 'swap,0,'+'1',\r\n                            quantity: Math.abs(buyndx) + 'EOS',\r\n\r\n                          },\r\n                        }\r\n                      )\r\n                    }\r\n          if (buytpt< 0){\r\n                      transaction.actions.push(\r\n                        {\r\n                          account: 'eosio.token',\r\n                          name: 'transfer',\r\n                          authorization: [\r\n                            {\r\n                              actor: displayaccountname(), // use account that was logged in\r\n                              permission: 'active',\r\n                            },\r\n                          ],\r\n                          data: {\r\n                            from: displayaccountname(),\r\n                            to: 'swap.defi',\r\n                            //quantity: 19.2562 * tokens + ' DAPP',\r\n                            memo: 'swap,0,'+'4',\r\n                            quantity: Math.abs(buytpt) + 'EOS',\r\n\r\n                          },\r\n                        }\r\n                      )\r\n                    }\r\n          // The activeUser.signTransaction will propose the passed in transaction to the logged in Authenticator\r\n          await activeUser.signTransaction(transaction, {\r\n            broadcast: true,\r\n            expireSeconds: 300,\r\n          });\r\n\r\n\r\n\r\n          sucessstake();\r\n\r\n        } catch (error) {\r\n          console.log(error.message);\r\n          actionpuccis(\r\n            error.message\r\n          );\r\n        }\r\n      } else {\r\n        showModal();\r\n      }\r\n    });\r\n\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n\r\n  const sendetf = async () => {\r\n    const {\r\n      ual: { login, displayError, showModal },\r\n    } = props;\r\n    // Via static contextType = UALContext, access to the activeUser object on this.context is now available\r\n    const {\r\n      ual: { activeUser },\r\n    } = props;\r\n\r\n\r\n    var eosetf = Number(redeemtokens).toFixed(4);\r\n\r\n\r\n    if (activeUser) {\r\n      try {\r\n        const transaction = {\r\n          actions: [\r\n            {\r\n              account: \"cet.f\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"cet.f\",\r\n                quantity: eosetf + \" EOSETF\",\r\n                memo: \"EOSETF redemption through eosetf.io\",\r\n              },\r\n            },\r\n\r\n\r\n          ],\r\n        };\r\n        // The activeUser.signTransaction will propose the passed in transaction to the logged in Authenticator\r\n        await activeUser.signTransaction(transaction, {\r\n          broadcast: true,\r\n          expireSeconds: 300,\r\n        });\r\n\r\n        sucessredemption();\r\n        /*\r\n\r\n                ReactGA.event({\r\n                  category: \"Chain acion\",\r\n                  action: \"User redeemed tokens.\",\r\n                });\r\n        */\r\n        //alert(\"GREAT SUCCESS!\")\r\n        //window.location.reload(false);\r\n\r\n      } catch (error) {\r\n        console.log(error.message);\r\n        actionpuccis(\r\n          error.message\r\n        );\r\n      }\r\n    } else {\r\n      showModal();\r\n    }\r\n  };\r\n\r\n  const toggleDrawer = (open) => (event) => {\r\n    setDrawerstate(open);\r\n  };\r\n\r\n  const compare = () => {\r\n    const a = parseFloat(vigmult * tokens).toFixed(4)\r\n    const b = gettokenbalance(vigbalance)\r\n    const c = Math.floor(a * 100) > Math.floor(b * 100)\r\n    return c\r\n\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"App\">\r\n\r\n      <header className=\"App-header\">\r\n        <div class=\"outsidebutton githubbutton\" onClick={() => window.open('https://github.com/n0umen0n/sceosetf', \"_blank\")}><img class=\"outsideimgright\" src=\"assets/github.png\" /><div class=\"outsidebuttontext\">GIT</div></div>\r\n        <div class=\"outsidebutton telegrambutton\" onClick={() => window.open('https://t.me/eosetf', \"_blank\")}><img class=\"outsideimgright\" src=\"assets/telegram.webp\" /><div class=\"outsidebuttontext\">TG</div></div>\r\n        <div class=\"outsidebutton twitterbutton\" onClick={() => window.open('https://twitter.com/CETF13', \"_blank\")}><img class=\"outsideimgright\" src=\"assets/twitter.png\" /><div class=\"outsidebuttontext\">TWIT</div></div>\r\n        <div class=\"outsidebutton mediumbutton\" onClick={() => window.open('https://medium.com/@eosetf', \"_blank\")}><img class=\"outsideimgright\" src=\"assets/med.png\" /><div class=\"outsidebuttontext\">MED</div></div>\r\n\r\n        <img src=\"assets/burger.svg\" class=\"menubutton\" onClick={toggleDrawer(true)} />\r\n        <div class=\"maincard\">\r\n          <div class=\"outsidebutton govrnbutton\" onClick={() => window.open('https://app.consortium.vote/community/zlmdhu2blclw', \"_blank\")}><img class=\"outsideimg\" src=\"assets/consologo.png\" /><div class=\"outsidebuttontext\">VOTE</div></div>\r\n          <div class=\"outsidebutton buybutton\" onClick={() => window.open('https://defibox.io/pool-market-details/1232', \"_blank\")}><img class=\"outsideimg\" src=\"assets/buylogo.png\" /><div class=\"outsidebuttontext\">BUY/SELL</div></div>\r\n          <Drawer\r\n            anchor=\"right\"\r\n            open={drawerstate}\r\n            onClose={toggleDrawer(false)}\r\n            onOpen={toggleDrawer(true)}\r\n            opacity=\"0.5\"\r\n          >\r\n            <div class=\"sidemenu\">\r\n              <div class=\"mobilemenu\">\r\n                <div class=\"logo\">\r\n                  <img width=\"64px\" src=\"assets/logo.svg\" />\r\n                </div>\r\n                <div class=\"appname\">\r\n                  <a>CETF</a>\r\n                </div>\r\n                <div class=\"accountname\">\r\n                  {accountname == \"\" ? <a>not logged in</a> : accountname}\r\n                </div>\r\n                <div class=\"menuitemswrapper\">\r\n                  <table class=\"menuitems\">\r\n                    <tr onClick={() => menuClick(\"create\")}>\r\n                      <td><img class=\"menuimg\" src=\"assets/productbox1.svg\" /></td>\r\n                      <td><a class=\"menuitemtext\">Create</a></td>\r\n                    </tr>\r\n                    <tr onClick={() => menuClick(\"redeem\")}>\r\n                      <td><img class=\"menuimg\" src=\"assets/productbox2.svg\" /></td>\r\n                      <td><a class=\"menuitemtext\">Redeem</a></td>\r\n                    </tr>\r\n                    <tr onClick={() => window.open('https://defibox.io/pool-market-details/1232', \"_blank\")}>\r\n                      <td><img class=\"menuimg\" src=\"assets/checkout.svg\" /></td>\r\n                      <td><a class=\"menuitemtext\">Buy</a></td>\r\n                    </tr>\r\n                    <tr onClick={() => window.open('https://app.consortium.vote/community/zlmdhu2blclw', \"_blank\")}>\r\n                      <td><img class=\"menuimg\" src=\"assets/govern.svg\" /></td>\r\n                      <td><a class=\"menuitemtext\">Govern</a></td>\r\n                    </tr>\r\n                    <tr onClick={() => menuClick(\"stats\")}>\r\n                      <td><img class=\"menuimg\" src=\"assets/stats.svg\" /></td>\r\n                      <td><a class=\"menuitemtext\">Statistics</a></td>\r\n                    </tr>\r\n                    <tr onClick={() => menuClick(\"about\")}>\r\n                      <td><img class=\"menuimg\" src=\"assets/briefcase.svg\" /></td>\r\n                      <td><a class=\"menuitemtext\">Tokens</a></td>\r\n                    </tr>\r\n                    <tr onClick={() => window.open('https://t.me/eosetf', \"_blank\")}>\r\n                      <td><img class=\"menuimg\" src=\"assets/telegram.svg\" /></td>\r\n                      <td><a class=\"menuitemtext\">Telegram</a></td>\r\n                    </tr>\r\n                    <tr onClick={() => window.open('https://github.com/n0umen0n/sceosetf', \"_blank\")}>\r\n                      <td><img class=\"menuimg\" src=\"assets/github.svg\" /></td>\r\n                      <td><a class=\"menuitemtext\">Github</a></td>\r\n                    </tr>\r\n                    {accountname == \"\" ?\r\n                      <tr onClick={() => showModal()}>\r\n                        <td><img class=\"menuimg\" src=\"assets/login.svg\" /></td>\r\n                        <td><a class=\"menuitemtext\">Login</a></td>\r\n                      </tr>\r\n                      :\r\n                      <tr onClick={() => logmeout()}>\r\n                        <td><img class=\"menuimg\" src=\"assets/logout.svg\" /></td>\r\n                        <td><a class=\"menuitemtext\">Logout</a></td>\r\n                      </tr>\r\n                    }\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Drawer>\r\n          <div class=\"leftbar\">\r\n            <div class=\"logo\">\r\n              <img width=\"64px\" src=\"assets/logo.svg\" />\r\n            </div>\r\n            <div class=\"appname\">\r\n              <a>CETF</a>\r\n            </div>\r\n            <div class=\"accountname\">\r\n              {accountname == \"\" ? <a>Not logged in</a> : accountname}\r\n            </div>\r\n            <div class=\"menuitemswrapper\">\r\n              <table class=\"menuitems\">\r\n                <tr onClick={() => setView(\"create\")}>\r\n                  <td><img class=\"menuimg\" src=\"assets/productbox1.svg\" /></td>\r\n                  <td><a class=\"menuitemtext\">Create</a></td>\r\n                </tr>\r\n                <tr onClick={() => setView(\"redeem\")}>\r\n                  <td><img class=\"menuimg\" src=\"assets/productbox2.svg\" /></td>\r\n                  <td><a class=\"menuitemtext\">Redeem</a></td>\r\n                </tr>\r\n                <tr onClick={() => setView(\"stats\")}>\r\n                  <td><img class=\"menuimg\" src=\"assets/stats.svg\" /></td>\r\n                  <td><a class=\"menuitemtext\">Statistics</a></td>\r\n                </tr>\r\n                <tr onClick={() => setView(\"about\")}>\r\n                  <td><img class=\"menuimg\" src=\"assets/briefcase.svg\" /></td>\r\n                  <td><a class=\"menuitemtext\">Tokens</a></td>\r\n                </tr>\r\n                {accountname == \"\" ?\r\n                  <tr onClick={() => showModal()}>\r\n                    <td><img class=\"menuimg\" src=\"assets/login.svg\" /></td>\r\n                    <td><a class=\"menuitemtext\">Login</a></td>\r\n                  </tr>\r\n                  :\r\n                  <tr onClick={() => logmeout()}>\r\n                    <td><img class=\"menuimg\" src=\"assets/logout.svg\" /></td>\r\n                    <td><a class=\"menuitemtext\">Logout</a></td>\r\n                  </tr>\r\n                }\r\n              </table>\r\n            </div>\r\n          </div>\r\n          {view == \"create\" ?\r\n            <div class=\"rightbar\">\r\n              <div class=\"rightbartopbox\">\r\n                <div class=\"createetftitle\">\r\n                  <div>\r\n                    <a\r\n                    >\r\n\r\n                      Create EOSETF\r\n\r\n\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n                <div className={classes.root}>\r\n                  <Accordion className={classes.expansion}>\r\n                    <AccordionSummary\r\n                      expandIcon={<ExpandMoreIcon />}\r\n                      aria-controls=\"panel1a-content\"\r\n                      id=\"panel1a-header\"\r\n                      className={classes.summary}\r\n                    >\r\n                      <Typography className={classes.heading}>Click here for more information</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails className={classes.expansion2}>\r\n                      <Scrollbars class=\"mask2\" style={{ width: \"100%\", height: \"25vh\" }} >\r\n                        <Typography className={classes.heading} style={{ \"padding-right\": \"10px\", \"padding-bottom\": \"46px\" }}>\r\n                          Creation involves transfer of tokens to cet.f account, the code is unaudited and at this point there is no multisig.\r\n                                        <br /> <br />To create EOSETF your account must hold 13 different EOS mainnet tokens.\r\n                                        <br /> <br />After creation your account is issued EOSETF and CETF tokens (starting with 65k CETF per 1 EOSETF).\r\n                                        <br /> <br />CETF will be used as a governance and fee distribution token.\r\n                                        <br /><br />Each time 20m CETF are issued the issuance of CETF is halved.\r\n                                      <br /> circulation 0m to 20m (CETF) | 1 EOSETF = 65k CETF\r\n                                      <br /> circulation 20m to 40m (CETF) | 1 EOSETF = 32.5k CETF\r\n                                      <br /> circulation 40m to 60m (CETF) | 1 EOSETF = 16.250k CETF\r\n                                      <br /> circulation 60m to 80m (CETF) | 1 EOSETF = 8.125k CETF\r\n\r\n                                      <br />  <br />At 80m CETF (4615 EOSETF / 3 halvings) no more CETF will be issued.\r\n                                      <br /> <br />Due to the initial CETF distribution, redemption of tokens <br /> will be activated after the CETF distribution or latest 31.04.2021 18:00 UTC.\r\n                                      <br /> <br />Redemption fee is set to 5%\r\n                                          </Typography>\r\n                      </Scrollbars>\r\n                      <div class=\"fade\" />\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                </div>\r\n                <div class=\"slidertext\">\r\n                  <a>You are creating <input style={{ \"color\": tokens > 200 ? \"red\" : \"inherit\" }} class=\"tokeninput\" type=\"number\" value={tokens} onChange={e => setTokens(e.target.value)}></input> EOSETF</a>\r\n                </div>\r\n                <div class=\"slider\">\r\n                  <CustomSlider\r\n                    defaultValue={0.0000}\r\n                    value={tokens}\r\n                    aria-label=\"custom thumb label\"\r\n                    step={1.0000}\r\n                    min={0}\r\n                    max={200.0000}\r\n                    onChangeCommitted={(e, val) => setTokens(val)}\r\n                    style={{\r\n                      marginBottom: \"10px\",\r\n                      \"margin-top\": \"10px\",\r\n                      color: \"white\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Scrollbars class=\"mask\" style={{ width: \"100%\", height: \"90%\" }} autoHide >\r\n                <div class=\"rightbar\">\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(dappmult * tokens).toFixed(4) > gettokenbalance(dappbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/dapp.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(dappmult * tokens).toFixed(4)} DAPP tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(dappmult * tokens).toFixed(4) < gettokenbalance(dappbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/193', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": compare(vigmult, tokens, vigbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/vigor.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(vigmult * tokens).toFixed(4)} VIG tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(vigmult * tokens).toFixed(4) < gettokenbalance(vigbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/11', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(iqmult * tokens).toFixed(3) > gettokenbalance(iqbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/everipedia.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(iqmult * tokens).toFixed(3)} IQ tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(iqmult * tokens).toFixed(3) < gettokenbalance(iqbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/93', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(ogxmult * tokens).toFixed(8) > gettokenbalance(ogxbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/ogx.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(ogxmult * tokens).toFixed(8)} OGX tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(ogxmult * tokens).toFixed(8) < gettokenbalance(ogxbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/878', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(boxmult * tokens).toFixed(6) > gettokenbalance(boxbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/tokendefi.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(boxmult * tokens).toFixed(6)} BOX tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(boxmult * tokens).toFixed(6) < gettokenbalance(boxbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/878', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(efxmult * tokens).toFixed(4) > gettokenbalance(efxbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/efx.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(efxmult * tokens).toFixed(4)} EFX tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(efxmult * tokens).toFixed(4) < gettokenbalance(efxbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/191', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(pizzamult * tokens).toFixed(4) > gettokenbalance(pizzabalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/pizza.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(pizzamult * tokens).toFixed(4)} PIZZA tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(pizzamult * tokens).toFixed(4) < gettokenbalance(pizzabalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/14', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(chexmult * tokens).toFixed(8) > gettokenbalance(chexbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/chex.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(chexmult * tokens).toFixed(8)} CHEX tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(chexmult * tokens).toFixed(8) < gettokenbalance(chexbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/28', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(ndxmult * tokens).toFixed(4) > gettokenbalance(ndxbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/ndx.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(ndxmult * tokens).toFixed(4)} NDX tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(ndxmult * tokens).toFixed(4) < gettokenbalance(ndxbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/1', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(tptmult * tokens).toFixed(4) > gettokenbalance(tptbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/tpt.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(tptmult * tokens).toFixed(4)} TPT tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(tptmult * tokens).toFixed(4) < gettokenbalance(tptbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/4', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(emtmult * tokens).toFixed(4) > gettokenbalance(emtbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/emt.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(emtmult * tokens).toFixed(4)} EMT tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(emtmult * tokens).toFixed(4) < gettokenbalance(emtbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/255', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(dfsmult * tokens).toFixed(4) > gettokenbalance(dfsbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/dfs.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(dfsmult * tokens).toFixed(4)} DFS tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(dfsmult * tokens).toFixed(4) < gettokenbalance(dfsbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/22', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(dadmult * tokens).toFixed(6) > gettokenbalance(dadbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/dad.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(dadmult * tokens).toFixed(6)} DAD tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(dadmult * tokens).toFixed(6) < gettokenbalance(dadbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/588', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                  <div style={{ \"display\": \"block\", \"opacity\": \"0\" }}>.<br />.<br />.</div>\r\n\r\n                </div>\r\n              </Scrollbars>\r\n              <div class=\"fade\" />\r\n              <button onClick={() => send()} class=\"createbutton\">Create EOSETF</button>\r\n            </div>\r\n\r\n\r\n            : view == \"redeem\" ?\r\n              <div class=\"rightbar\">\r\n                <div class=\"rightbartopbox\">\r\n                  <div class=\"createetftitle\">\r\n                    <div>\r\n                      <a\r\n                      >\r\n\r\n                        Redeem tokens\r\n\r\n\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                  <div className={classes.root}>\r\n                    <Accordion className={classes.expansion}>\r\n                      <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                        className={classes.summary}\r\n                      >\r\n                        <Typography className={classes.heading}>Click here for more information</Typography>\r\n                      </AccordionSummary>\r\n                      <AccordionDetails className={classes.expansion2}>\r\n                        <Typography className={classes.heading}>\r\n                          To redeem 13 tokens, EOSETF must be sent to cet.f account. <br /><br />\r\n                          Sent EOSETF tokens get burned.<br /><br />\r\n                        Due to the initial CETF distribution, redemption of tokens will be activated when the CETF distribution ends or latest 31.04.2021 18:00 UTC.<br /><br />\r\n                        Redemption fee is set to 5%.\r\n                      </Typography>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  </div>\r\n                  <div class=\"slidertext\">\r\n                    <a>You are redeeming <input class=\"tokeninput\" type=\"number\" value={redeemtokens} onChange={e => setRedeemtokens(e.target.value)}></input> EOSETF</a>\r\n                  </div>\r\n                  <div class=\"slider\">\r\n                    <CustomSlider\r\n                      defaultValue={0.0000}\r\n                      aria-label=\"custom thumb label\"\r\n                      step={1.0000}\r\n                      value={redeemtokens}\r\n                      min={0}\r\n                      max={200.0000}\r\n                      onChangeCommitted={(e, val) => setRedeemtokens(val)}\r\n                      style={{\r\n                        marginBottom: \"10px\",\r\n                        \"margin-top\": \"10px\",\r\n                        color: \"white\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <Scrollbars class=\"mask\" style={{ width: \"100%\", height: \"90%\" }} autoHide >\r\n                  <div class=\"rightbar\">\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/dapp.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * dappmult * redemptionfee).toFixed(4)} DAPP tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/vigor.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * vigmult * redemptionfee).toFixed(4)} VIG tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/everipedia.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * iqmult * redemptionfee).toFixed(3)} IQ tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/ogx.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * ogxmult * redemptionfee).toFixed(8)} OGX tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/tokendefi.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * boxmult * redemptionfee).toFixed(6)} BOX tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/efx.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * efxmult * redemptionfee).toFixed(4)} EFX tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/dad.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * dadmult * redemptionfee).toFixed(6)} DAD tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/dfs.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * dfsmult * redemptionfee).toFixed(4)} DFS tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/emt.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * emtmult * redemptionfee).toFixed(4)} EMT tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/tpt.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * tptmult * redemptionfee).toFixed(4)} TPT tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/ndx.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * ndxmult * redemptionfee).toFixed(4)} NDX tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/chex.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * chexmult * redemptionfee).toFixed(8)} CHEX tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/pizza.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * pizzamult * redemptionfee).toFixed(4)} PIZZA tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div style={{ \"display\": \"block\", \"opacity\": \"0\" }}>.<br />.<br />.</div>\r\n\r\n                  </div>\r\n                </Scrollbars>\r\n                <button class=\"createbutton\" onClick={() => sendetf()}>Redeem tokens</button>\r\n              </div>\r\n\r\n              : view == \"stats\" ?\r\n                <div class=\"rightbar\">\r\n                  <div class=\"rightbartopbox\">\r\n                    <div class=\"createetftitle\">\r\n                      <div>\r\n                        <a\r\n                        >\r\n\r\n                          Statistics\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                    <div className={classes.root}>\r\n                      <Accordion className={classes.expansion}>\r\n                        <AccordionSummary\r\n                          expandIcon={<ExpandMoreIcon />}\r\n                          aria-controls=\"panel1a-content\"\r\n                          id=\"panel1a-header\"\r\n                          className={classes.summary}\r\n                        >\r\n                          <Typography className={classes.heading}>Click here for more information</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails className={classes.expansion2}>\r\n                          <Typography className={classes.heading}>\r\n                            Distribution of CETF will end when Circulating supply of EOSETF will be 4615. <br />  <br /> Approximate value of 4615 EOSETF = 25k USD.\r\n                        </Typography>\r\n                        </AccordionDetails>\r\n                      </Accordion>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <Scrollbars class=\"mask\" style={{ width: \"80%\" }} autoHide >\r\n                    <div class=\"statcards\">\r\n                      <div class=\"statcard\">\r\n                        <a class=\"stat\">{gettokenbalanceone(eosetfbalanceind).toLocaleString()} EOSETF</a><a class=\"statexplainer\">My balance</a>\r\n                      </div>\r\n\r\n                      <div class=\"statcard\">\r\n                        <a class=\"stat\">{gettokenbalanceone(etfbalanceind).toLocaleString()} CETF</a><a class=\"statexplainer\">My balance</a>\r\n                      </div>\r\n\r\n                      <div class=\"statcard\">\r\n                        <a class=\"stat\">{gettokensupply(eosetfbalance).toLocaleString()} EOSETF</a><a class=\"statexplainer\">Circulating supply</a>\r\n                      </div>\r\n\r\n                      <div class=\"statcard\">\r\n                        <a class=\"stat\">{gettokensupply(etfbalance).toLocaleString()} CETF</a><a class=\"statexplainer\">Circulating supply (Max 80m)</a>\r\n                      </div>\r\n\r\n\r\n                      <div class=\"statcard\">\r\n                        <a class=\"stat\">{creationreward().toLocaleString()} CETF</a><a class=\"statexplainer\"> Issuance per 1 EOSTF</a>\r\n                      </div>\r\n                      <div class=\"statcard\">\r\n                        <a class=\"stat\">{halvings(gettokensupply(etfbalance)).toLocaleString()}</a><a class=\"statexplainer\">Halvings (Max 3)</a>\r\n                      </div>\r\n                      <div class=\"statcard\">\r\n                        <a class=\"stat\">{parseFloat(geteosetfprice().toFixed(2))} EOS</a><a class=\"statexplainer\">EOSETF price</a>\r\n                      </div>\r\n                      <div class=\"statcard\">\r\n                        <a class=\"stat\">{parseFloat(getpricesum().toFixed(2))} EOS </a><a class=\"statexplainer\">Price of tokens bought separately</a>\r\n                      </div>\r\n                    </div>\r\n                    <div style={{ \"display\": \"block\", \"opacity\": \"0\" }}>.<br />.<br />.</div>\r\n\r\n                  </Scrollbars>\r\n                  <div class=\"fade\" />\r\n                </div>\r\n                : view == \"about\" ?\r\n                  <div class=\"rightbar\">\r\n                    <div class=\"rightbartopbox\">\r\n\r\n                      <div class=\"createetftitle\">\r\n                        EOSETF token allocation\r\n                    </div>\r\n                      <div class=\"slidertext\">\r\n                        <a>Chart shows % (in USD) of each token in the fund</a>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"chartwrapper\">\r\n                      <Doughnut options={{ maintainAspectRatio: false, maxWidth: 300, height: \"auto\" }} responsive=\"true\" data={data} legend={{ \"position\": \"bottom\" }} />\r\n                    </div>\r\n                  </div>\r\n\r\n                  : <a>Error</a>\r\n          }\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withUAL(App);\r\n//                      <a> My balance: {gettokenbalance(etfbalanceind)} CETF  </a>                       <a>Total supply: {gettokensupply(etfbalance)} CETF  </a>                       <a>Total supply: {gettokensupply(eosetfbalance)} EOSETF  </a>\r\n/*\r\n\r\n\r\n\r\n                      <a> Current supply: {gettokensupply(etfbalance)} CETF (Distribution ends at 30m CETF, no more CETF will be issued) </a>\r\n                      <br></br><br></br>\r\n\r\n                      <a>Current supply: {gettokensupply(eosetfbalance)} EOSETF </a>\r\n                      <br></br><br></br>\r\n\r\n                      <a>Issuance per 1 EOSETF: {creationreward()} CETF   </a>\r\n\r\n                      <br></br><br></br>\r\n\r\n                      <a>Halvings: {halvings(gettokensupply(etfbalance))}   </a>\r\n\r\n*/\r\n","C:\\Users\\Kasutaja\\Desktop\\eosetf\\src\\reportWebVitals.js",[],{"ruleId":"249","severity":1,"message":"250","line":1,"column":8,"nodeType":"251","messageId":"252","endLine":1,"endColumn":12},{"ruleId":"249","severity":1,"message":"253","line":8,"column":8,"nodeType":"251","messageId":"252","endLine":8,"endColumn":20},{"ruleId":"249","severity":1,"message":"254","line":9,"column":8,"nodeType":"251","messageId":"252","endLine":9,"endColumn":16},{"ruleId":"249","severity":1,"message":"255","line":12,"column":8,"nodeType":"251","messageId":"252","endLine":12,"endColumn":15},{"ruleId":"249","severity":1,"message":"256","line":13,"column":10,"nodeType":"251","messageId":"252","endLine":13,"endColumn":13},{"ruleId":"249","severity":1,"message":"257","line":13,"column":15,"nodeType":"251","messageId":"252","endLine":13,"endColumn":18},{"ruleId":"249","severity":1,"message":"258","line":84,"column":23,"nodeType":"251","messageId":"252","endLine":84,"endColumn":32},{"ruleId":"249","severity":1,"message":"259","line":84,"column":46,"nodeType":"251","messageId":"252","endLine":84,"endColumn":51},{"ruleId":"249","severity":1,"message":"260","line":198,"column":9,"nodeType":"251","messageId":"252","endLine":198,"endColumn":19},{"ruleId":"249","severity":1,"message":"261","line":198,"column":20,"nodeType":"251","messageId":"252","endLine":198,"endColumn":33},{"ruleId":"249","severity":1,"message":"262","line":199,"column":9,"nodeType":"251","messageId":"252","endLine":199,"endColumn":19},{"ruleId":"249","severity":1,"message":"263","line":199,"column":20,"nodeType":"251","messageId":"252","endLine":199,"endColumn":33},{"ruleId":"249","severity":1,"message":"264","line":200,"column":9,"nodeType":"251","messageId":"252","endLine":200,"endColumn":19},{"ruleId":"249","severity":1,"message":"265","line":200,"column":20,"nodeType":"251","messageId":"252","endLine":200,"endColumn":33},{"ruleId":"249","severity":1,"message":"266","line":201,"column":9,"nodeType":"251","messageId":"252","endLine":201,"endColumn":19},{"ruleId":"249","severity":1,"message":"267","line":201,"column":20,"nodeType":"251","messageId":"252","endLine":201,"endColumn":33},{"ruleId":"249","severity":1,"message":"268","line":202,"column":9,"nodeType":"251","messageId":"252","endLine":202,"endColumn":18},{"ruleId":"249","severity":1,"message":"269","line":202,"column":19,"nodeType":"251","messageId":"252","endLine":202,"endColumn":31},{"ruleId":"249","severity":1,"message":"270","line":203,"column":9,"nodeType":"251","messageId":"252","endLine":203,"endColumn":19},{"ruleId":"249","severity":1,"message":"271","line":203,"column":20,"nodeType":"251","messageId":"252","endLine":203,"endColumn":33},{"ruleId":"249","severity":1,"message":"272","line":204,"column":9,"nodeType":"251","messageId":"252","endLine":204,"endColumn":20},{"ruleId":"249","severity":1,"message":"273","line":204,"column":21,"nodeType":"251","messageId":"252","endLine":204,"endColumn":35},{"ruleId":"249","severity":1,"message":"274","line":205,"column":9,"nodeType":"251","messageId":"252","endLine":205,"endColumn":20},{"ruleId":"249","severity":1,"message":"275","line":205,"column":21,"nodeType":"251","messageId":"252","endLine":205,"endColumn":35},{"ruleId":"249","severity":1,"message":"276","line":206,"column":9,"nodeType":"251","messageId":"252","endLine":206,"endColumn":21},{"ruleId":"249","severity":1,"message":"277","line":206,"column":22,"nodeType":"251","messageId":"252","endLine":206,"endColumn":37},{"ruleId":"249","severity":1,"message":"278","line":207,"column":9,"nodeType":"251","messageId":"252","endLine":207,"endColumn":19},{"ruleId":"249","severity":1,"message":"279","line":207,"column":20,"nodeType":"251","messageId":"252","endLine":207,"endColumn":33},{"ruleId":"249","severity":1,"message":"280","line":208,"column":9,"nodeType":"251","messageId":"252","endLine":208,"endColumn":19},{"ruleId":"249","severity":1,"message":"281","line":208,"column":20,"nodeType":"251","messageId":"252","endLine":208,"endColumn":33},{"ruleId":"249","severity":1,"message":"282","line":209,"column":9,"nodeType":"251","messageId":"252","endLine":209,"endColumn":19},{"ruleId":"249","severity":1,"message":"283","line":209,"column":20,"nodeType":"251","messageId":"252","endLine":209,"endColumn":33},{"ruleId":"249","severity":1,"message":"284","line":210,"column":9,"nodeType":"251","messageId":"252","endLine":210,"endColumn":19},{"ruleId":"249","severity":1,"message":"285","line":210,"column":20,"nodeType":"251","messageId":"252","endLine":210,"endColumn":33},{"ruleId":"286","severity":1,"message":"287","line":345,"column":6,"nodeType":"288","endLine":345,"endColumn":19,"suggestions":"289"},{"ruleId":"286","severity":1,"message":"290","line":362,"column":6,"nodeType":"288","endLine":362,"endColumn":19,"suggestions":"291"},{"ruleId":"292","severity":1,"message":"293","line":367,"column":49,"nodeType":"294","messageId":"295","endLine":367,"endColumn":51},{"ruleId":"286","severity":1,"message":"296","line":457,"column":6,"nodeType":"288","endLine":457,"endColumn":19,"suggestions":"297"},{"ruleId":"286","severity":1,"message":"296","line":478,"column":6,"nodeType":"288","endLine":478,"endColumn":19,"suggestions":"298"},{"ruleId":"286","severity":1,"message":"296","line":500,"column":6,"nodeType":"288","endLine":500,"endColumn":19,"suggestions":"299"},{"ruleId":"286","severity":1,"message":"296","line":571,"column":6,"nodeType":"288","endLine":571,"endColumn":19,"suggestions":"300"},{"ruleId":"286","severity":1,"message":"296","line":594,"column":6,"nodeType":"288","endLine":594,"endColumn":19,"suggestions":"301"},{"ruleId":"286","severity":1,"message":"296","line":617,"column":6,"nodeType":"288","endLine":617,"endColumn":19,"suggestions":"302"},{"ruleId":"286","severity":1,"message":"296","line":640,"column":6,"nodeType":"288","endLine":640,"endColumn":19,"suggestions":"303"},{"ruleId":"286","severity":1,"message":"296","line":664,"column":6,"nodeType":"288","endLine":664,"endColumn":19,"suggestions":"304"},{"ruleId":"286","severity":1,"message":"296","line":686,"column":6,"nodeType":"288","endLine":686,"endColumn":19,"suggestions":"305"},{"ruleId":"286","severity":1,"message":"296","line":710,"column":6,"nodeType":"288","endLine":710,"endColumn":19,"suggestions":"306"},{"ruleId":"286","severity":1,"message":"296","line":742,"column":6,"nodeType":"288","endLine":742,"endColumn":19,"suggestions":"307"},{"ruleId":"286","severity":1,"message":"296","line":765,"column":6,"nodeType":"288","endLine":765,"endColumn":19,"suggestions":"308"},{"ruleId":"286","severity":1,"message":"296","line":788,"column":6,"nodeType":"288","endLine":788,"endColumn":19,"suggestions":"309"},{"ruleId":"286","severity":1,"message":"296","line":812,"column":6,"nodeType":"288","endLine":812,"endColumn":19,"suggestions":"310"},{"ruleId":"286","severity":1,"message":"296","line":834,"column":6,"nodeType":"288","endLine":834,"endColumn":19,"suggestions":"311"},{"ruleId":"286","severity":1,"message":"296","line":858,"column":6,"nodeType":"288","endLine":858,"endColumn":19,"suggestions":"312"},{"ruleId":"249","severity":1,"message":"313","line":890,"column":9,"nodeType":"251","messageId":"252","endLine":890,"endColumn":27},{"ruleId":"249","severity":1,"message":"259","line":1212,"column":16,"nodeType":"251","messageId":"252","endLine":1212,"endColumn":21},{"ruleId":"249","severity":1,"message":"314","line":1212,"column":23,"nodeType":"251","messageId":"252","endLine":1212,"endColumn":35},{"ruleId":"315","severity":1,"message":"316","line":1507,"column":44,"nodeType":"294","messageId":"317","endLine":1507,"endColumn":45},{"ruleId":"315","severity":1,"message":"316","line":1529,"column":44,"nodeType":"294","messageId":"317","endLine":1529,"endColumn":45},{"ruleId":"315","severity":1,"message":"316","line":1551,"column":44,"nodeType":"294","messageId":"317","endLine":1551,"endColumn":45},{"ruleId":"315","severity":1,"message":"316","line":1573,"column":44,"nodeType":"294","messageId":"317","endLine":1573,"endColumn":45},{"ruleId":"315","severity":1,"message":"316","line":1595,"column":44,"nodeType":"294","messageId":"317","endLine":1595,"endColumn":45},{"ruleId":"315","severity":1,"message":"316","line":1617,"column":44,"nodeType":"294","messageId":"317","endLine":1617,"endColumn":45},{"ruleId":"315","severity":1,"message":"316","line":1639,"column":44,"nodeType":"294","messageId":"317","endLine":1639,"endColumn":45},{"ruleId":"315","severity":1,"message":"316","line":1661,"column":44,"nodeType":"294","messageId":"317","endLine":1661,"endColumn":45},{"ruleId":"315","severity":1,"message":"316","line":1683,"column":44,"nodeType":"294","messageId":"317","endLine":1683,"endColumn":45},{"ruleId":"315","severity":1,"message":"316","line":1705,"column":44,"nodeType":"294","messageId":"317","endLine":1705,"endColumn":45},{"ruleId":"315","severity":1,"message":"316","line":1727,"column":44,"nodeType":"294","messageId":"317","endLine":1727,"endColumn":45},{"ruleId":"315","severity":1,"message":"316","line":1749,"column":44,"nodeType":"294","messageId":"317","endLine":1749,"endColumn":45},{"ruleId":"315","severity":1,"message":"316","line":1771,"column":44,"nodeType":"294","messageId":"317","endLine":1771,"endColumn":45},{"ruleId":"249","severity":1,"message":"259","line":1808,"column":14,"nodeType":"251","messageId":"252","endLine":1808,"endColumn":19},{"ruleId":"249","severity":1,"message":"314","line":1808,"column":21,"nodeType":"251","messageId":"252","endLine":1808,"endColumn":33},{"ruleId":"318","severity":1,"message":"319","line":1889,"column":127,"nodeType":"320","endLine":1889,"endColumn":182},{"ruleId":"318","severity":1,"message":"319","line":1890,"column":112,"nodeType":"320","endLine":1890,"endColumn":170},{"ruleId":"318","severity":1,"message":"319","line":1891,"column":118,"nodeType":"320","endLine":1891,"endColumn":174},{"ruleId":"318","severity":1,"message":"319","line":1892,"column":117,"nodeType":"320","endLine":1892,"endColumn":169},{"ruleId":"318","severity":1,"message":"319","line":1894,"column":9,"nodeType":"320","endLine":1894,"endColumn":88},{"ruleId":"318","severity":1,"message":"319","line":1896,"column":142,"nodeType":"320","endLine":1896,"endColumn":195},{"ruleId":"318","severity":1,"message":"319","line":1897,"column":133,"nodeType":"320","endLine":1897,"endColumn":184},{"ruleId":"318","severity":1,"message":"319","line":1908,"column":19,"nodeType":"320","endLine":1908,"endColumn":61},{"ruleId":"321","severity":1,"message":"322","line":1911,"column":19,"nodeType":"320","endLine":1911,"endColumn":22},{"ruleId":"292","severity":1,"message":"293","line":1914,"column":32,"nodeType":"294","messageId":"295","endLine":1914,"endColumn":34},{"ruleId":"321","severity":1,"message":"322","line":1914,"column":40,"nodeType":"320","endLine":1914,"endColumn":43},{"ruleId":"318","severity":1,"message":"319","line":1919,"column":27,"nodeType":"320","endLine":1919,"endColumn":79},{"ruleId":"321","severity":1,"message":"322","line":1920,"column":27,"nodeType":"320","endLine":1920,"endColumn":51},{"ruleId":"318","severity":1,"message":"319","line":1923,"column":27,"nodeType":"320","endLine":1923,"endColumn":79},{"ruleId":"321","severity":1,"message":"322","line":1924,"column":27,"nodeType":"320","endLine":1924,"endColumn":51},{"ruleId":"318","severity":1,"message":"319","line":1927,"column":27,"nodeType":"320","endLine":1927,"endColumn":76},{"ruleId":"321","severity":1,"message":"322","line":1928,"column":27,"nodeType":"320","endLine":1928,"endColumn":51},{"ruleId":"318","severity":1,"message":"319","line":1931,"column":27,"nodeType":"320","endLine":1931,"endColumn":74},{"ruleId":"321","severity":1,"message":"322","line":1932,"column":27,"nodeType":"320","endLine":1932,"endColumn":51},{"ruleId":"318","severity":1,"message":"319","line":1935,"column":27,"nodeType":"320","endLine":1935,"endColumn":73},{"ruleId":"321","severity":1,"message":"322","line":1936,"column":27,"nodeType":"320","endLine":1936,"endColumn":51},{"ruleId":"318","severity":1,"message":"319","line":1939,"column":27,"nodeType":"320","endLine":1939,"endColumn":77},{"ruleId":"321","severity":1,"message":"322","line":1940,"column":27,"nodeType":"320","endLine":1940,"endColumn":51},{"ruleId":"318","severity":1,"message":"319","line":1943,"column":27,"nodeType":"320","endLine":1943,"endColumn":76},{"ruleId":"321","severity":1,"message":"322","line":1944,"column":27,"nodeType":"320","endLine":1944,"endColumn":51},{"ruleId":"318","severity":1,"message":"319","line":1947,"column":27,"nodeType":"320","endLine":1947,"endColumn":74},{"ruleId":"321","severity":1,"message":"322","line":1948,"column":27,"nodeType":"320","endLine":1948,"endColumn":51},{"ruleId":"292","severity":1,"message":"293","line":1950,"column":34,"nodeType":"294","messageId":"295","endLine":1950,"endColumn":36},{"ruleId":"318","severity":1,"message":"319","line":1952,"column":29,"nodeType":"320","endLine":1952,"endColumn":75},{"ruleId":"321","severity":1,"message":"322","line":1953,"column":29,"nodeType":"320","endLine":1953,"endColumn":53},{"ruleId":"318","severity":1,"message":"319","line":1957,"column":29,"nodeType":"320","endLine":1957,"endColumn":76},{"ruleId":"321","severity":1,"message":"322","line":1958,"column":29,"nodeType":"320","endLine":1958,"endColumn":53},{"ruleId":"318","severity":1,"message":"319","line":1968,"column":15,"nodeType":"320","endLine":1968,"endColumn":57},{"ruleId":"321","severity":1,"message":"322","line":1971,"column":15,"nodeType":"320","endLine":1971,"endColumn":18},{"ruleId":"292","severity":1,"message":"293","line":1974,"column":28,"nodeType":"294","messageId":"295","endLine":1974,"endColumn":30},{"ruleId":"321","severity":1,"message":"322","line":1974,"column":36,"nodeType":"320","endLine":1974,"endColumn":39},{"ruleId":"318","severity":1,"message":"319","line":1979,"column":23,"nodeType":"320","endLine":1979,"endColumn":75},{"ruleId":"321","severity":1,"message":"322","line":1980,"column":23,"nodeType":"320","endLine":1980,"endColumn":47},{"ruleId":"318","severity":1,"message":"319","line":1983,"column":23,"nodeType":"320","endLine":1983,"endColumn":75},{"ruleId":"321","severity":1,"message":"322","line":1984,"column":23,"nodeType":"320","endLine":1984,"endColumn":47},{"ruleId":"318","severity":1,"message":"319","line":1987,"column":23,"nodeType":"320","endLine":1987,"endColumn":69},{"ruleId":"321","severity":1,"message":"322","line":1988,"column":23,"nodeType":"320","endLine":1988,"endColumn":47},{"ruleId":"318","severity":1,"message":"319","line":1991,"column":23,"nodeType":"320","endLine":1991,"endColumn":73},{"ruleId":"321","severity":1,"message":"322","line":1992,"column":23,"nodeType":"320","endLine":1992,"endColumn":47},{"ruleId":"292","severity":1,"message":"293","line":1994,"column":30,"nodeType":"294","messageId":"295","endLine":1994,"endColumn":32},{"ruleId":"318","severity":1,"message":"319","line":1996,"column":25,"nodeType":"320","endLine":1996,"endColumn":71},{"ruleId":"321","severity":1,"message":"322","line":1997,"column":25,"nodeType":"320","endLine":1997,"endColumn":49},{"ruleId":"318","severity":1,"message":"319","line":2001,"column":25,"nodeType":"320","endLine":2001,"endColumn":72},{"ruleId":"321","severity":1,"message":"322","line":2002,"column":25,"nodeType":"320","endLine":2002,"endColumn":49},{"ruleId":"292","severity":1,"message":"293","line":2008,"column":17,"nodeType":"294","messageId":"295","endLine":2008,"endColumn":19},{"ruleId":"321","severity":1,"message":"322","line":2013,"column":21,"nodeType":"320","endLine":2014,"endColumn":22},{"ruleId":"321","severity":1,"message":"322","line":2055,"column":19,"nodeType":"320","endLine":2055,"endColumn":22},{"ruleId":"318","severity":1,"message":"319","line":2078,"column":23,"nodeType":"320","endLine":2078,"endColumn":100},{"ruleId":"321","severity":1,"message":"322","line":2081,"column":23,"nodeType":"320","endLine":2081,"endColumn":26},{"ruleId":"318","severity":1,"message":"319","line":2085,"column":25,"nodeType":"320","endLine":2085,"endColumn":85},{"ruleId":"318","severity":1,"message":"319","line":2087,"column":25,"nodeType":"320","endLine":2087,"endColumn":175},{"ruleId":"318","severity":1,"message":"319","line":2094,"column":23,"nodeType":"320","endLine":2094,"endColumn":101},{"ruleId":"321","severity":1,"message":"322","line":2097,"column":23,"nodeType":"320","endLine":2097,"endColumn":26},{"ruleId":"318","severity":1,"message":"319","line":2101,"column":25,"nodeType":"320","endLine":2101,"endColumn":85},{"ruleId":"318","severity":1,"message":"319","line":2103,"column":25,"nodeType":"320","endLine":2103,"endColumn":174},{"ruleId":"318","severity":1,"message":"319","line":2110,"column":23,"nodeType":"320","endLine":2110,"endColumn":106},{"ruleId":"321","severity":1,"message":"322","line":2113,"column":23,"nodeType":"320","endLine":2113,"endColumn":26},{"ruleId":"318","severity":1,"message":"319","line":2117,"column":25,"nodeType":"320","endLine":2117,"endColumn":85},{"ruleId":"318","severity":1,"message":"319","line":2119,"column":25,"nodeType":"320","endLine":2119,"endColumn":174},{"ruleId":"318","severity":1,"message":"319","line":2126,"column":23,"nodeType":"320","endLine":2126,"endColumn":99},{"ruleId":"321","severity":1,"message":"322","line":2129,"column":23,"nodeType":"320","endLine":2129,"endColumn":26},{"ruleId":"318","severity":1,"message":"319","line":2133,"column":25,"nodeType":"320","endLine":2133,"endColumn":85},{"ruleId":"318","severity":1,"message":"319","line":2135,"column":25,"nodeType":"320","endLine":2135,"endColumn":175},{"ruleId":"318","severity":1,"message":"319","line":2142,"column":23,"nodeType":"320","endLine":2142,"endColumn":105},{"ruleId":"321","severity":1,"message":"322","line":2145,"column":23,"nodeType":"320","endLine":2145,"endColumn":26},{"ruleId":"318","severity":1,"message":"319","line":2149,"column":25,"nodeType":"320","endLine":2149,"endColumn":85},{"ruleId":"318","severity":1,"message":"319","line":2151,"column":25,"nodeType":"320","endLine":2151,"endColumn":175},{"ruleId":"318","severity":1,"message":"319","line":2158,"column":23,"nodeType":"320","endLine":2158,"endColumn":99},{"ruleId":"321","severity":1,"message":"322","line":2161,"column":23,"nodeType":"320","endLine":2161,"endColumn":26},{"ruleId":"318","severity":1,"message":"319","line":2165,"column":25,"nodeType":"320","endLine":2165,"endColumn":85},{"ruleId":"318","severity":1,"message":"319","line":2167,"column":25,"nodeType":"320","endLine":2167,"endColumn":175},{"ruleId":"318","severity":1,"message":"319","line":2176,"column":23,"nodeType":"320","endLine":2176,"endColumn":101},{"ruleId":"321","severity":1,"message":"322","line":2179,"column":23,"nodeType":"320","endLine":2179,"endColumn":26},{"ruleId":"318","severity":1,"message":"319","line":2183,"column":25,"nodeType":"320","endLine":2183,"endColumn":85},{"ruleId":"318","severity":1,"message":"319","line":2185,"column":25,"nodeType":"320","endLine":2185,"endColumn":174},{"ruleId":"318","severity":1,"message":"319","line":2192,"column":23,"nodeType":"320","endLine":2192,"endColumn":100},{"ruleId":"321","severity":1,"message":"322","line":2195,"column":23,"nodeType":"320","endLine":2195,"endColumn":26},{"ruleId":"318","severity":1,"message":"319","line":2199,"column":25,"nodeType":"320","endLine":2199,"endColumn":85},{"ruleId":"318","severity":1,"message":"319","line":2201,"column":25,"nodeType":"320","endLine":2201,"endColumn":174},{"ruleId":"318","severity":1,"message":"319","line":2208,"column":23,"nodeType":"320","endLine":2208,"endColumn":99},{"ruleId":"321","severity":1,"message":"322","line":2211,"column":23,"nodeType":"320","endLine":2211,"endColumn":26},{"ruleId":"318","severity":1,"message":"319","line":2215,"column":25,"nodeType":"320","endLine":2215,"endColumn":85},{"ruleId":"318","severity":1,"message":"319","line":2217,"column":25,"nodeType":"320","endLine":2217,"endColumn":173},{"ruleId":"318","severity":1,"message":"319","line":2224,"column":23,"nodeType":"320","endLine":2224,"endColumn":99},{"ruleId":"321","severity":1,"message":"322","line":2227,"column":23,"nodeType":"320","endLine":2227,"endColumn":26},{"ruleId":"318","severity":1,"message":"319","line":2231,"column":25,"nodeType":"320","endLine":2231,"endColumn":85},{"ruleId":"318","severity":1,"message":"319","line":2233,"column":25,"nodeType":"320","endLine":2233,"endColumn":173},{"ruleId":"318","severity":1,"message":"319","line":2240,"column":23,"nodeType":"320","endLine":2240,"endColumn":99},{"ruleId":"321","severity":1,"message":"322","line":2243,"column":23,"nodeType":"320","endLine":2243,"endColumn":26},{"ruleId":"318","severity":1,"message":"319","line":2247,"column":25,"nodeType":"320","endLine":2247,"endColumn":85},{"ruleId":"318","severity":1,"message":"319","line":2249,"column":25,"nodeType":"320","endLine":2249,"endColumn":175},{"ruleId":"318","severity":1,"message":"319","line":2258,"column":23,"nodeType":"320","endLine":2258,"endColumn":99},{"ruleId":"321","severity":1,"message":"322","line":2261,"column":23,"nodeType":"320","endLine":2261,"endColumn":26},{"ruleId":"318","severity":1,"message":"319","line":2265,"column":25,"nodeType":"320","endLine":2265,"endColumn":85},{"ruleId":"318","severity":1,"message":"319","line":2267,"column":25,"nodeType":"320","endLine":2267,"endColumn":174},{"ruleId":"318","severity":1,"message":"319","line":2276,"column":23,"nodeType":"320","endLine":2276,"endColumn":99},{"ruleId":"321","severity":1,"message":"322","line":2279,"column":23,"nodeType":"320","endLine":2279,"endColumn":26},{"ruleId":"318","severity":1,"message":"319","line":2283,"column":25,"nodeType":"320","endLine":2283,"endColumn":85},{"ruleId":"318","severity":1,"message":"319","line":2285,"column":25,"nodeType":"320","endLine":2285,"endColumn":175},{"ruleId":"292","severity":1,"message":"293","line":2298,"column":20,"nodeType":"294","messageId":"295","endLine":2298,"endColumn":22},{"ruleId":"321","severity":1,"message":"322","line":2303,"column":23,"nodeType":"320","endLine":2304,"endColumn":24},{"ruleId":"321","severity":1,"message":"322","line":2333,"column":21,"nodeType":"320","endLine":2333,"endColumn":24},{"ruleId":"318","severity":1,"message":"319","line":2356,"column":25,"nodeType":"320","endLine":2356,"endColumn":102},{"ruleId":"321","severity":1,"message":"322","line":2359,"column":25,"nodeType":"320","endLine":2359,"endColumn":28},{"ruleId":"318","severity":1,"message":"319","line":2362,"column":25,"nodeType":"320","endLine":2362,"endColumn":85},{"ruleId":"318","severity":1,"message":"319","line":2368,"column":25,"nodeType":"320","endLine":2368,"endColumn":103},{"ruleId":"321","severity":1,"message":"322","line":2371,"column":25,"nodeType":"320","endLine":2371,"endColumn":28},{"ruleId":"318","severity":1,"message":"319","line":2374,"column":25,"nodeType":"320","endLine":2374,"endColumn":85},{"ruleId":"318","severity":1,"message":"319","line":2380,"column":25,"nodeType":"320","endLine":2380,"endColumn":108},{"ruleId":"321","severity":1,"message":"322","line":2383,"column":25,"nodeType":"320","endLine":2383,"endColumn":28},{"ruleId":"318","severity":1,"message":"319","line":2386,"column":25,"nodeType":"320","endLine":2386,"endColumn":85},{"ruleId":"318","severity":1,"message":"319","line":2392,"column":25,"nodeType":"320","endLine":2392,"endColumn":101},{"ruleId":"321","severity":1,"message":"322","line":2395,"column":25,"nodeType":"320","endLine":2395,"endColumn":28},{"ruleId":"318","severity":1,"message":"319","line":2398,"column":25,"nodeType":"320","endLine":2398,"endColumn":85},{"ruleId":"318","severity":1,"message":"319","line":2404,"column":25,"nodeType":"320","endLine":2404,"endColumn":107},{"ruleId":"321","severity":1,"message":"322","line":2407,"column":25,"nodeType":"320","endLine":2407,"endColumn":28},{"ruleId":"318","severity":1,"message":"319","line":2410,"column":25,"nodeType":"320","endLine":2410,"endColumn":85},{"ruleId":"318","severity":1,"message":"319","line":2416,"column":25,"nodeType":"320","endLine":2416,"endColumn":101},{"ruleId":"321","severity":1,"message":"322","line":2419,"column":25,"nodeType":"320","endLine":2419,"endColumn":28},{"ruleId":"318","severity":1,"message":"319","line":2422,"column":25,"nodeType":"320","endLine":2422,"endColumn":85},{"ruleId":"318","severity":1,"message":"319","line":2428,"column":25,"nodeType":"320","endLine":2428,"endColumn":101},{"ruleId":"321","severity":1,"message":"322","line":2431,"column":25,"nodeType":"320","endLine":2431,"endColumn":28},{"ruleId":"318","severity":1,"message":"319","line":2434,"column":25,"nodeType":"320","endLine":2434,"endColumn":85},{"ruleId":"318","severity":1,"message":"319","line":2441,"column":25,"nodeType":"320","endLine":2441,"endColumn":101},{"ruleId":"321","severity":1,"message":"322","line":2444,"column":25,"nodeType":"320","endLine":2444,"endColumn":28},{"ruleId":"318","severity":1,"message":"319","line":2447,"column":25,"nodeType":"320","endLine":2447,"endColumn":85},{"ruleId":"318","severity":1,"message":"319","line":2453,"column":25,"nodeType":"320","endLine":2453,"endColumn":101},{"ruleId":"321","severity":1,"message":"322","line":2456,"column":25,"nodeType":"320","endLine":2456,"endColumn":28},{"ruleId":"318","severity":1,"message":"319","line":2459,"column":25,"nodeType":"320","endLine":2459,"endColumn":85},{"ruleId":"318","severity":1,"message":"319","line":2465,"column":25,"nodeType":"320","endLine":2465,"endColumn":101},{"ruleId":"321","severity":1,"message":"322","line":2468,"column":25,"nodeType":"320","endLine":2468,"endColumn":28},{"ruleId":"318","severity":1,"message":"319","line":2471,"column":25,"nodeType":"320","endLine":2471,"endColumn":85},{"ruleId":"318","severity":1,"message":"319","line":2477,"column":25,"nodeType":"320","endLine":2477,"endColumn":101},{"ruleId":"321","severity":1,"message":"322","line":2480,"column":25,"nodeType":"320","endLine":2480,"endColumn":28},{"ruleId":"318","severity":1,"message":"319","line":2483,"column":25,"nodeType":"320","endLine":2483,"endColumn":85},{"ruleId":"318","severity":1,"message":"319","line":2489,"column":25,"nodeType":"320","endLine":2489,"endColumn":102},{"ruleId":"321","severity":1,"message":"322","line":2492,"column":25,"nodeType":"320","endLine":2492,"endColumn":28},{"ruleId":"318","severity":1,"message":"319","line":2495,"column":25,"nodeType":"320","endLine":2495,"endColumn":85},{"ruleId":"318","severity":1,"message":"319","line":2501,"column":25,"nodeType":"320","endLine":2501,"endColumn":103},{"ruleId":"321","severity":1,"message":"322","line":2504,"column":25,"nodeType":"320","endLine":2504,"endColumn":28},{"ruleId":"318","severity":1,"message":"319","line":2507,"column":25,"nodeType":"320","endLine":2507,"endColumn":85},{"ruleId":"292","severity":1,"message":"293","line":2520,"column":22,"nodeType":"294","messageId":"295","endLine":2520,"endColumn":24},{"ruleId":"321","severity":1,"message":"322","line":2525,"column":25,"nodeType":"320","endLine":2526,"endColumn":26},{"ruleId":"321","severity":1,"message":"322","line":2554,"column":25,"nodeType":"320","endLine":2554,"endColumn":41},{"ruleId":"321","severity":1,"message":"322","line":2554,"column":107,"nodeType":"320","endLine":2554,"endColumn":132},{"ruleId":"321","severity":1,"message":"322","line":2558,"column":25,"nodeType":"320","endLine":2558,"endColumn":41},{"ruleId":"321","severity":1,"message":"322","line":2558,"column":102,"nodeType":"320","endLine":2558,"endColumn":127},{"ruleId":"321","severity":1,"message":"322","line":2562,"column":25,"nodeType":"320","endLine":2562,"endColumn":41},{"ruleId":"321","severity":1,"message":"322","line":2562,"column":100,"nodeType":"320","endLine":2562,"endColumn":125},{"ruleId":"321","severity":1,"message":"322","line":2566,"column":25,"nodeType":"320","endLine":2566,"endColumn":41},{"ruleId":"321","severity":1,"message":"322","line":2566,"column":95,"nodeType":"320","endLine":2566,"endColumn":120},{"ruleId":"321","severity":1,"message":"322","line":2571,"column":25,"nodeType":"320","endLine":2571,"endColumn":41},{"ruleId":"321","severity":1,"message":"322","line":2571,"column":85,"nodeType":"320","endLine":2571,"endColumn":110},{"ruleId":"321","severity":1,"message":"322","line":2574,"column":25,"nodeType":"320","endLine":2574,"endColumn":41},{"ruleId":"321","severity":1,"message":"322","line":2574,"column":100,"nodeType":"320","endLine":2574,"endColumn":125},{"ruleId":"321","severity":1,"message":"322","line":2577,"column":25,"nodeType":"320","endLine":2577,"endColumn":41},{"ruleId":"321","severity":1,"message":"322","line":2577,"column":90,"nodeType":"320","endLine":2577,"endColumn":115},{"ruleId":"321","severity":1,"message":"322","line":2580,"column":25,"nodeType":"320","endLine":2580,"endColumn":41},{"ruleId":"321","severity":1,"message":"322","line":2580,"column":88,"nodeType":"320","endLine":2580,"endColumn":113},{"ruleId":"292","severity":1,"message":"293","line":2588,"column":24,"nodeType":"294","messageId":"295","endLine":2588,"endColumn":26},{"ruleId":"321","severity":1,"message":"322","line":2596,"column":25,"nodeType":"320","endLine":2596,"endColumn":28},{"ruleId":"321","severity":1,"message":"322","line":2604,"column":21,"nodeType":"320","endLine":2604,"endColumn":24},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ReactTooltip' is defined but never used.","'InfoIcon' is defined but never used.","'ReactGA' is defined but never used.","'Bar' is defined but never used.","'Pie' is defined but never used.","'hideModal' is assigned a value but never used.","'login' is assigned a value but never used.","'ogxdefibox' is assigned a value but never used.","'setOgxdefibox' is assigned a value but never used.","'daddefibox' is assigned a value but never used.","'setDaddefibox' is assigned a value but never used.","'boxdefibox' is assigned a value but never used.","'setBoxdefibox' is assigned a value but never used.","'vigdefibox' is assigned a value but never used.","'setVigdefibox' is assigned a value but never used.","'iqdefibox' is assigned a value but never used.","'setIqdefibox' is assigned a value but never used.","'efxdefibox' is assigned a value but never used.","'setEfxdefibox' is assigned a value but never used.","'dappdefibox' is assigned a value but never used.","'setDappdefibox' is assigned a value but never used.","'chexdefibox' is assigned a value but never used.","'setChexdefibox' is assigned a value but never used.","'pizzadefibox' is assigned a value but never used.","'setPizzadefibox' is assigned a value but never used.","'dfsdefibox' is assigned a value but never used.","'setDfsdefibox' is assigned a value but never used.","'emtdefibox' is assigned a value but never used.","'setEmtdefibox' is assigned a value but never used.","'ndxdefibox' is assigned a value but never used.","'setNdxdefibox' is assigned a value but never used.","'tptdefibox' is assigned a value but never used.","'setTptdefibox' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'govrnprice'. Either include it or remove the dependency array.","ArrayExpression",["323"],"React Hook useEffect has a missing dependency: 'prices'. Either include it or remove the dependency array.",["324"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'displayaccountname'. Either include it or remove the dependency array.",["325"],["326"],["327"],["328"],["329"],["330"],["331"],["332"],["333"],["334"],["335"],["336"],["337"],["338"],["339"],["340"],"'gettokenbalancetwo' is assigned a value but never used.","'displayError' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"345","fix":"347"},{"desc":"345","fix":"348"},{"desc":"345","fix":"349"},{"desc":"345","fix":"350"},{"desc":"345","fix":"351"},{"desc":"345","fix":"352"},{"desc":"345","fix":"353"},{"desc":"345","fix":"354"},{"desc":"345","fix":"355"},{"desc":"345","fix":"356"},{"desc":"345","fix":"357"},{"desc":"345","fix":"358"},{"desc":"345","fix":"359"},{"desc":"345","fix":"360"},{"desc":"345","fix":"361"},"Update the dependencies array to be: [accountname, govrnprice]",{"range":"362","text":"363"},"Update the dependencies array to be: [accountname, prices]",{"range":"364","text":"365"},"Update the dependencies array to be: [accountname, displayaccountname]",{"range":"366","text":"367"},{"range":"368","text":"367"},{"range":"369","text":"367"},{"range":"370","text":"367"},{"range":"371","text":"367"},{"range":"372","text":"367"},{"range":"373","text":"367"},{"range":"374","text":"367"},{"range":"375","text":"367"},{"range":"376","text":"367"},{"range":"377","text":"367"},{"range":"378","text":"367"},{"range":"379","text":"367"},{"range":"380","text":"367"},{"range":"381","text":"367"},{"range":"382","text":"367"},[9352,9365],"[accountname, govrnprice]",[10420,10433],"[accountname, prices]",[13588,13601],"[accountname, displayaccountname]",[14179,14192],[14785,14798],[16416,16429],[17012,17025],[17606,17619],[18202,18215],[18797,18810],[19391,19404],[19992,20005],[20609,20622],[21211,21224],[21807,21820],[22405,22418],[22999,23012],[23597,23610]]
