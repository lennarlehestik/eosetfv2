[{"C:\\Users\\Admin\\Desktop\\eosetfv2\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\eosetfv2\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\eosetfv2\\src\\reportWebVitals.js":"3"},{"size":1850,"mtime":1610572441432,"results":"4","hashOfConfig":"5"},{"size":33062,"mtime":1610751592843,"results":"6","hashOfConfig":"5"},{"size":375,"mtime":1610319986879,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9o52tp",{"filePath":"10","messages":"11","errorCount":0,"warningCount":108,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Desktop\\eosetfv2\\src\\index.js",[],"C:\\Users\\Admin\\Desktop\\eosetfv2\\src\\App.js",["15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Slider } from '@material-ui/core';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { withUAL } from \"ual-reactjs-renderer\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport Drawer from '@material-ui/core/Drawer';\r\n\r\nconst CustomSlider = withStyles({\r\n  root: {\r\n    color: '#52af77',\r\n    height: 8,\r\n  },\r\n  thumb: {\r\n    height: 24,\r\n    width: 24,\r\n    backgroundColor: '#fff',\r\n    border: '2px solid currentColor',\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n    '&:focus, &:hover, &$active': {\r\n      boxShadow: 'inherit',\r\n    },\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: 'calc(-50% + 4px)',\r\n  },\r\n  track: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n  rail: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n})(Slider);\r\n\r\nfunction App(props) {\r\n  const {\r\n    ual: { showModal, hideModal, activeUser, login, logout },\r\n  } = props;\r\n  if (activeUser) {\r\n    const accountName = activeUser.getAccountName();\r\n    accountName.then(function (result) {\r\n      setAccountName(result);\r\n    });\r\n  }\r\n  const displayaccountname = () => {\r\n    if (accountname) {\r\n      return accountname;\r\n    }\r\n  };\r\n  const [drawerstate, setDrawerstate] = useState(false)\r\n  const [tokens, setTokens] = useState(1)\r\n  const [redeemtokens, setRedeemtokens] = useState(1)\r\n  const [view, setView] = useState(\"create\")\r\n  const [accountname, setAccountName] = useState(\"\")\r\n\r\n  const logmeout = () => {\r\n    logout()\r\n    setAccountName(\"\")\r\n  }\r\n\r\n  const efxmult = 10.6593\r\n  const dadmult = 1.439439\r\n  const iqmult = 50.082\r\n  const vigmult = 196.7187\r\n  const dappmult = 19.2562\r\n  const boxmult = 0.035523\r\n  const ogxmult = 1.26108207\r\n\r\n  const sucessstake = () => {\r\n    const Toast = Swal.mixin({\r\n      toast: true,\r\n      position: \"bottom-end\",\r\n      showConfirmButton: false,\r\n      timer: 6000,\r\n      timerProgressBar: true,\r\n      onOpen: (toast) => {\r\n        toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n        toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n      },\r\n    });\r\n    Toast.fire({\r\n      icon: \"success\",\r\n      title: \"Successfully increased voting and polling rewards\",\r\n    });\r\n  };\r\n\r\n  const actionpuccis = (err) => {\r\n    const Toast = Swal.mixin({\r\n      toast: true,\r\n      position: \"bottom-end\",\r\n      showConfirmButton: false,\r\n      timer: 5000,\r\n      timerProgressBar: true,\r\n      didOpen: (toast) => {\r\n        toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n        toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n      },\r\n    });\r\n    Toast.fire({\r\n      icon: \"error\",\r\n      title: err,\r\n    });\r\n  };\r\n\r\n\r\n  const [ogxbalance, setOgx] = useState({ rows: [] });\r\n  const [dadbalance, setDad] = useState({ rows: [] });\r\n  const [boxbalance, setBox] = useState({ rows: [] });\r\n  const [vigbalance, setVig] = useState({ rows: [] });\r\n  const [iqbalance, setIq] = useState({ rows: [] });\r\n  const [efxbalance, setEfx] = useState({ rows: [] });\r\n  const [dappbalance, setDapp] = useState({ rows: [] });\r\n  const [eosetfbalance, setEosetf] = useState({ rows: [] });\r\n\r\n\r\n  const menuClick = (which) =>{\r\n    setView(which)\r\n    setDrawerstate(false)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"core.ogx\",\r\n        table: \"accounts\",\r\n        scope: displayaccountname(),\r\n        limit: 1,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((ogxbalance) => setOgx(ogxbalance))\r\n    );\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"dadtoken1111\",\r\n        table: \"accounts\",\r\n        scope: displayaccountname(),\r\n        limit: 1,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((dadbalance) => setDad(dadbalance))\r\n    );\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"token.defi\",\r\n        table: \"accounts\",\r\n        scope: displayaccountname(),\r\n        limit: 1,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((boxbalance) => setBox(boxbalance))\r\n    );\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"vig111111111\",\r\n        table: \"accounts\",\r\n        scope: displayaccountname(),\r\n        limit: 1,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((vigbalance) => setVig(vigbalance))\r\n    );\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"everipediaiq\",\r\n        table: \"accounts\",\r\n        scope: displayaccountname(),\r\n        limit: 1,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((iqbalance) => setIq(iqbalance))\r\n\r\n    );\r\n  }, [accountname]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"effecttokens\",\r\n        table: \"accounts\",\r\n        scope: displayaccountname(),\r\n        limit: 1,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((efxbalance) => setEfx(efxbalance))\r\n    );\r\n  }, [accountname]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"dappservices\",\r\n        table: \"accounts\",\r\n        scope: displayaccountname(),\r\n        limit: 1,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((dappbalance) => setDapp(dappbalance))\r\n    );\r\n  }, [accountname]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"consortiumtt\",\r\n        table: \"accounts\",\r\n        scope: displayaccountname(),\r\n        limit: 1,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((eosetfbalance) => setEosetf(eosetfbalance))\r\n    );\r\n  }, [accountname]);\r\n\r\n\r\n  const gettokenbalance = (token) => {\r\n    if (token.rows[0]) {\r\n      return Math.floor(Number(token.rows[0].balance.split(\" \")[0]));\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n\r\n  const send = async () => {\r\n    const {\r\n      ual: { login, displayError, showModal },\r\n    } = props;\r\n    // Via static contextType = UALContext, access to the activeUser object on this.context is now available\r\n    const {\r\n      ual: { activeUser },\r\n    } = props;\r\n\r\n    //console.log(getdapp())\r\n\r\n    if (activeUser) {\r\n      try {\r\n        const transaction = {\r\n          actions: [\r\n            {\r\n              account: \"dappservices\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 19.2562 * tokens + \" DAPP\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(dappmult * tokens).toFixed(4) + \" DAPP\",\r\n\r\n              },\r\n            },\r\n\r\n\r\n            {\r\n              account: \"effecttokens\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 10.6593 * tokens + \" EFX\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(10.6593 * tokens).toFixed(4) + \" EFX\",\r\n\r\n              },\r\n            },\r\n\r\n\r\n\r\n            {\r\n              account: \"core.ogx\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 1.26108207 * tokens + \" OGX\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(ogxmult * tokens).toFixed(8) + \" OGX\",\r\n              },\r\n            },\r\n\r\n\r\n\r\n\r\n            {\r\n              account: \"everipediaiq\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 50.082 * tokens + \" IQ\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(iqmult * tokens).toFixed(3) + \" IQ\",\r\n\r\n              },\r\n            },\r\n\r\n\r\n\r\n\r\n            {\r\n              account: \"vig111111111\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 196.7187 * tokens + \" VIG\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(vigmult * tokens).toFixed(4) + \" VIG\",\r\n\r\n              },\r\n            },\r\n\r\n\r\n\r\n            {\r\n              account: \"token.defi\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 0.035523 * tokens + \" BOX\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(boxmult * tokens).toFixed(6) + \" BOX\",\r\n\r\n              },\r\n            },\r\n\r\n\r\n\r\n\r\n            {\r\n              account: \"dadtoken1111\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: efxmult * tokens + \" DAD\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(dadmult * tokens).toFixed(6) + \" DAD\",\r\n\r\n              },\r\n            },\r\n          ],\r\n        };\r\n        // The activeUser.signTransaction will propose the passed in transaction to the logged in Authenticator\r\n        await activeUser.signTransaction(transaction, {\r\n          broadcast: true,\r\n          expireSeconds: 300,\r\n        });\r\n\r\n        sucessstake();\r\n\r\n      } catch (error) {\r\n        console.log(error.message);\r\n        actionpuccis(\r\n          error.message\r\n        );\r\n      }\r\n    } else {\r\n      showModal();\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  const sendetf = async () => {\r\n    const {\r\n      ual: { login, displayError, showModal },\r\n    } = props;\r\n    // Via static contextType = UALContext, access to the activeUser object on this.context is now available\r\n    const {\r\n      ual: { activeUser },\r\n    } = props;\r\n\r\n\r\n    var eosetf = redeemtokens.toFixed(4);\r\n\r\n\r\n    if (activeUser) {\r\n      try {\r\n        const transaction = {\r\n          actions: [\r\n            {\r\n              account: \"consortiumtt\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                quantity: eosetf + \" EOSETF\",\r\n                memo: \"EOSETF redemption\",\r\n              },\r\n            },\r\n\r\n\r\n          ],\r\n        };\r\n        // The activeUser.signTransaction will propose the passed in transaction to the logged in Authenticator\r\n        await activeUser.signTransaction(transaction, {\r\n          broadcast: true,\r\n          expireSeconds: 300,\r\n        });\r\n\r\n        sucessstake();\r\n\r\n        //alert(\"GREAT SUCCESS!\")\r\n        //window.location.reload(false);\r\n\r\n      } catch (error) {\r\n        console.log(error.message);\r\n        actionpuccis(\r\n          error.message\r\n        );\r\n      }\r\n    } else {\r\n      showModal();\r\n    }\r\n  };\r\n\r\n  const toggleDrawer = (open) => (event) => {\r\n    setDrawerstate(open);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src=\"assets/burger.svg\" class=\"menubutton\" onClick={toggleDrawer(true)} />\r\n        <div class=\"maincard\">\r\n          <Drawer\r\n            anchor=\"right\"\r\n            open={drawerstate}\r\n            onClose={toggleDrawer(false)}\r\n            onOpen={toggleDrawer(true)}\r\n            opacity=\"0.5\"\r\n          >\r\n            <div class=\"sidemenu\">\r\n              <div class=\"mobilemenu\">\r\n                <div class=\"logo\">\r\n                  <img width=\"64px\" src=\"assets/logo.svg\" />\r\n                </div>\r\n                <div class=\"appname\">\r\n                  <a>EOSETF</a>\r\n                </div>\r\n                <div class=\"accountname\">\r\n                  {accountname == \"\" ? <a>not signed in</a> : accountname}\r\n                </div>\r\n                <div class=\"menuitemswrapper\">\r\n                  <table class=\"menuitems\">\r\n                    <tr onClick={() => menuClick(\"create\")}>\r\n                      <td><img class=\"menuimg\" src=\"assets/productbox1.svg\" /></td>\r\n                      <td><a class=\"menuitemtext\">Create</a></td>\r\n                    </tr>\r\n                    <tr onClick={() => menuClick(\"redeem\")}>\r\n                      <td><img class=\"menuimg\" src=\"assets/productbox2.svg\" /></td>\r\n                      <td><a class=\"menuitemtext\">Redeem</a></td>\r\n                    </tr>\r\n                    <tr onClick={() => window.open('https://newdex.io/', \"_blank\")}>\r\n                      <td><img class=\"menuimg\" src=\"assets/checkout.svg\" /></td>\r\n                      <td><a class=\"menuitemtext\">Buy</a></td>\r\n                    </tr>\r\n                    <tr onClick={() => window.open('https://app.consortium.vote/', \"_blank\")}>\r\n                      <td><img class=\"menuimg\" src=\"assets/govern.svg\" /></td>\r\n                      <td><a class=\"menuitemtext\">Govern</a></td>\r\n                    </tr>\r\n                    {accountname == \"\" ?\r\n                      <tr onClick={() => showModal()}>\r\n                        <td><img class=\"menuimg\" src=\"assets/login.svg\" /></td>\r\n                        <td><a class=\"menuitemtext\">Login</a></td>\r\n                      </tr>\r\n                      :\r\n                      <tr onClick={() => logmeout()}>\r\n                        <td><img class=\"menuimg\" src=\"assets/logout.svg\" /></td>\r\n                        <td><a class=\"menuitemtext\">Logout</a></td>\r\n                      </tr>\r\n                    }\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Drawer>\r\n          <div class=\"leftbar\">\r\n            <div class=\"logo\">\r\n              <img width=\"64px\" src=\"assets/logo.svg\" />\r\n            </div>\r\n            <div class=\"appname\">\r\n              <a>EOSETF</a>\r\n            </div>\r\n            <div class=\"accountname\">\r\n              {accountname == \"\" ? <a>Not signed in.</a> : accountname}\r\n            </div>\r\n            <div class=\"menuitemswrapper\">\r\n              <table class=\"menuitems\">\r\n                <tr onClick={() => setView(\"create\")}>\r\n                  <td><img class=\"menuimg\" src=\"assets/productbox1.svg\" /></td>\r\n                  <td><a class=\"menuitemtext\">Create</a></td>\r\n                </tr>\r\n                <tr onClick={() => setView(\"redeem\")}>\r\n                  <td><img class=\"menuimg\" src=\"assets/productbox2.svg\" /></td>\r\n                  <td><a class=\"menuitemtext\">Redeem</a></td>\r\n                </tr>\r\n                <tr onClick={() => window.open('https://newdex.io/', \"_blank\")}>\r\n                  <td><img class=\"menuimg\" src=\"assets/checkout.svg\" /></td>\r\n                  <td><a class=\"menuitemtext\">Buy</a></td>\r\n                </tr>\r\n                <tr onClick={() => window.open('https://app.consortium.vote/', \"_blank\")}>\r\n                  <td><img class=\"menuimg\" src=\"assets/govern.svg\" /></td>\r\n                  <td><a class=\"menuitemtext\">Govern</a></td>\r\n                </tr>\r\n                {accountname == \"\" ?\r\n                  <tr onClick={() => showModal()}>\r\n                    <td><img class=\"menuimg\" src=\"assets/login.svg\" /></td>\r\n                    <td><a class=\"menuitemtext\">Login</a></td>\r\n                  </tr>\r\n                  :\r\n                  <tr onClick={() => logmeout()}>\r\n                    <td><img class=\"menuimg\" src=\"assets/logout.svg\" /></td>\r\n                    <td><a class=\"menuitemtext\">Logout</a></td>\r\n                  </tr>\r\n                }\r\n              </table>\r\n            </div>\r\n          </div>\r\n          {view == \"create\" ?\r\n            <div class=\"rightbar\">\r\n              <div class=\"rightbartopbox\">\r\n                <div class=\"createetftitle\">\r\n                  <a>Create EOSETF</a>\r\n                </div>\r\n                <div class=\"slidertext\">\r\n                  <a>You are creating <input style={{\"color\": tokens > 10 ? \"red\" : \"inherit\"}} class=\"tokeninput\" type=\"number\" value={tokens} onChange={e => setTokens(e.target.value)}></input> EOSETF.</a>\r\n                </div>\r\n                <div class=\"slider\">\r\n                  <CustomSlider\r\n                    defaultValue={1.0000}\r\n                    value={tokens}\r\n                    aria-label=\"custom thumb label\"\r\n                    step={1.0000}\r\n                    min={0}\r\n                    max={10.0000}\r\n                    onChangeCommitted={(e, val) => setTokens(val)}\r\n                    style={{\r\n                      marginBottom: \"10px\",\r\n                      \"margin-top\": \"10px\",\r\n                      color: \"white\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Scrollbars class=\"mask\" style={{ width: \"100%\", height: \"90%\" }} autoHide >\r\n                <div class=\"rightbar\">\r\n                  <div class=\"smallcard\" style={{\"border\": parseFloat(dappmult * tokens).toFixed(4) > gettokenbalance(dappbalance) ? \"solid 2px red\" : \"none\"}}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/dapp.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(dappmult * tokens).toFixed(4)} DAPP tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(dappmult * tokens).toFixed(4) < gettokenbalance(dappbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://newdex.io/', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{\"border\": parseFloat(vigmult * tokens).toFixed(4) > gettokenbalance(vigbalance) ? \"solid 2px red\" : \"none\"}}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/vigor.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(vigmult * tokens).toFixed(4)} VIG tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                    {parseFloat(vigmult * tokens).toFixed(4) < gettokenbalance(vigbalance) ?\r\n                      <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      :\r\n                      <img class=\"trximage\" onClick={() => window.open('https://newdex.io/', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                    }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{\"border\": parseFloat(iqmult * tokens).toFixed(3) > gettokenbalance(iqbalance) ? \"solid 2px red\" : \"none\"}}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/everipedia.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(iqmult * tokens).toFixed(3)} IQ tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                    {parseFloat(iqmult * tokens).toFixed(3) < gettokenbalance(iqbalance) ?\r\n                      <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      :\r\n                      <img class=\"trximage\" onClick={() => window.open('https://newdex.io/', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                    }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{\"border\": parseFloat(ogxmult * tokens).toFixed(8) > gettokenbalance(ogxbalance) ? \"solid 2px red\" : \"none\"}}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/ogx.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(ogxmult * tokens).toFixed(8)} OGX tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                    {parseFloat(ogxmult * tokens).toFixed(8) < gettokenbalance(ogxbalance) ?\r\n                      <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      :\r\n                      <img class=\"trximage\" onClick={() => window.open('https://newdex.io/', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                    }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{\"border\": parseFloat(boxmult * tokens).toFixed(6) > gettokenbalance(boxbalance) ? \"solid 2px red\" : \"none\"}}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/tokendefi.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(boxmult * tokens).toFixed(6)} BOX tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                    {parseFloat(boxmult * tokens).toFixed(6) < gettokenbalance(boxbalance) ?\r\n                      <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      :\r\n                      <img class=\"trximage\" onClick={() => window.open('https://newdex.io/', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                    }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{\"border\": parseFloat(efxmult * tokens).toFixed(4) > gettokenbalance(efxbalance) ? \"solid 2px red\" : \"none\"}}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/efx.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(10.6593 * tokens).toFixed(4)} EFX tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                    {parseFloat(efxmult * tokens).toFixed(4) < gettokenbalance(efxbalance) ?\r\n                      <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      :\r\n                      <img class=\"trximage\" onClick={() => window.open('https://newdex.io/', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                    }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{\"border\": parseFloat(dadmult * tokens).toFixed(6) > gettokenbalance(dadbalance) ? \"solid 2px red\" : \"none\"}}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/dad.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(dadmult * tokens).toFixed(6)} DAD tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                    {parseFloat(dadmult * tokens).toFixed(6) < gettokenbalance(dadbalance) ?\r\n                      <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      :\r\n                      <img class=\"trximage\" onClick={() => window.open('https://newdex.io/', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                    }\r\n                    </div>\r\n                  </div>\r\n                  <div style={{\"display\":\"block\"}}>.</div>\r\n                </div>\r\n              </Scrollbars>\r\n              <div class=\"fade\" />\r\n              <button onClick={() => send()} class=\"createbutton\">Create EOSETF</button>\r\n            </div>\r\n\r\n\r\n            : view == \"redeem\" ?\r\n              <div class=\"rightbar\">\r\n                <div class=\"rightbartopbox\">\r\n                  <div class=\"createetftitle\">\r\n                    <a>Redeem EOSETF</a>\r\n                  </div>\r\n                  <div class=\"slidertext\">\r\n                    <a>You are redeeming <input class=\"tokeninput\" type=\"number\" value={redeemtokens} onChange={e => setRedeemtokens(e.target.value)}></input> EOSETF.</a>\r\n                  </div>\r\n                  <div class=\"slider\">\r\n                    <CustomSlider\r\n                      defaultValue={1.0000}\r\n                      aria-label=\"custom thumb label\"\r\n                      step={1.0000}\r\n                      value={redeemtokens}\r\n                      min={0}\r\n                      max={10.0000}\r\n                      onChangeCommitted={(e, val) => setRedeemtokens(val)}\r\n                      style={{\r\n                        marginBottom: \"10px\",\r\n                        \"margin-top\": \"10px\",\r\n                        color: \"white\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <Scrollbars class=\"mask\" style={{ width: \"100%\", height: \"90%\" }} autoHide >\r\n                  <div class=\"rightbar\">\r\n                  <div class=\"smallcard\">\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/dapp.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a>{(redeemtokens*dappmult).toFixed(4)} DAPP tokens returned</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\">\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/vigor.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a>{(redeemtokens*vigmult).toFixed(4)} VIG tokens returned</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\">\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/everipedia.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a>{(redeemtokens*iqmult).toFixed(3)} IQ tokens returned</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\">\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/ogx.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a>{(redeemtokens*ogxmult).toFixed(8)} OGX tokens returned</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\">\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/tokendefi.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a>{(redeemtokens*boxmult).toFixed(6)} BOX tokens returned</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\">\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/efx.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a>{(redeemtokens*efxmult).toFixed(4)} EFX tokens returned</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\">\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/dad.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a>{(redeemtokens*dadmult).toFixed(6)} DAD tokens returned</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  </div>\r\n                </Scrollbars>\r\n                <button class=\"createbutton\" onClick={() => sendetf()}>Redeem EOSETF</button>\r\n              </div>\r\n              : <a>Error</a>\r\n          }\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withUAL(App);\r\n","C:\\Users\\Admin\\Desktop\\eosetfv2\\src\\reportWebVitals.js",[],{"ruleId":"123","severity":1,"message":"124","line":1,"column":8,"nodeType":"125","messageId":"126","endLine":1,"endColumn":12},{"ruleId":"123","severity":1,"message":"127","line":5,"column":22,"nodeType":"125","messageId":"126","endLine":5,"endColumn":32},{"ruleId":"123","severity":1,"message":"128","line":44,"column":23,"nodeType":"125","messageId":"126","endLine":44,"endColumn":32},{"ruleId":"123","severity":1,"message":"129","line":44,"column":46,"nodeType":"125","messageId":"126","endLine":44,"endColumn":51},{"ruleId":"123","severity":1,"message":"130","line":120,"column":10,"nodeType":"125","messageId":"126","endLine":120,"endColumn":23},{"ruleId":"131","severity":1,"message":"132","line":146,"column":6,"nodeType":"133","endLine":146,"endColumn":19,"suggestions":"134"},{"ruleId":"131","severity":1,"message":"132","line":167,"column":6,"nodeType":"133","endLine":167,"endColumn":19,"suggestions":"135"},{"ruleId":"131","severity":1,"message":"132","line":188,"column":6,"nodeType":"133","endLine":188,"endColumn":19,"suggestions":"136"},{"ruleId":"131","severity":1,"message":"132","line":209,"column":6,"nodeType":"133","endLine":209,"endColumn":19,"suggestions":"137"},{"ruleId":"131","severity":1,"message":"132","line":231,"column":6,"nodeType":"133","endLine":231,"endColumn":19,"suggestions":"138"},{"ruleId":"131","severity":1,"message":"132","line":251,"column":6,"nodeType":"133","endLine":251,"endColumn":19,"suggestions":"139"},{"ruleId":"131","severity":1,"message":"132","line":273,"column":6,"nodeType":"133","endLine":273,"endColumn":19,"suggestions":"140"},{"ruleId":"131","severity":1,"message":"132","line":292,"column":6,"nodeType":"133","endLine":292,"endColumn":19,"suggestions":"141"},{"ruleId":"123","severity":1,"message":"129","line":307,"column":14,"nodeType":"125","messageId":"126","endLine":307,"endColumn":19},{"ruleId":"123","severity":1,"message":"142","line":307,"column":21,"nodeType":"125","messageId":"126","endLine":307,"endColumn":33},{"ruleId":"123","severity":1,"message":"129","line":491,"column":14,"nodeType":"125","messageId":"126","endLine":491,"endColumn":19},{"ruleId":"123","severity":1,"message":"142","line":491,"column":21,"nodeType":"125","messageId":"126","endLine":491,"endColumn":33},{"ruleId":"143","severity":1,"message":"144","line":556,"column":9,"nodeType":"145","endLine":556,"endColumn":88},{"ruleId":"143","severity":1,"message":"144","line":568,"column":19,"nodeType":"145","endLine":568,"endColumn":61},{"ruleId":"146","severity":1,"message":"147","line":571,"column":19,"nodeType":"145","endLine":571,"endColumn":22},{"ruleId":"148","severity":1,"message":"149","line":574,"column":32,"nodeType":"150","messageId":"151","endLine":574,"endColumn":34},{"ruleId":"146","severity":1,"message":"147","line":574,"column":40,"nodeType":"145","endLine":574,"endColumn":43},{"ruleId":"143","severity":1,"message":"144","line":579,"column":27,"nodeType":"145","endLine":579,"endColumn":79},{"ruleId":"146","severity":1,"message":"147","line":580,"column":27,"nodeType":"145","endLine":580,"endColumn":51},{"ruleId":"143","severity":1,"message":"144","line":583,"column":27,"nodeType":"145","endLine":583,"endColumn":79},{"ruleId":"146","severity":1,"message":"147","line":584,"column":27,"nodeType":"145","endLine":584,"endColumn":51},{"ruleId":"143","severity":1,"message":"144","line":587,"column":27,"nodeType":"145","endLine":587,"endColumn":76},{"ruleId":"146","severity":1,"message":"147","line":588,"column":27,"nodeType":"145","endLine":588,"endColumn":51},{"ruleId":"143","severity":1,"message":"144","line":591,"column":27,"nodeType":"145","endLine":591,"endColumn":74},{"ruleId":"146","severity":1,"message":"147","line":592,"column":27,"nodeType":"145","endLine":592,"endColumn":51},{"ruleId":"148","severity":1,"message":"149","line":594,"column":34,"nodeType":"150","messageId":"151","endLine":594,"endColumn":36},{"ruleId":"143","severity":1,"message":"144","line":596,"column":29,"nodeType":"145","endLine":596,"endColumn":75},{"ruleId":"146","severity":1,"message":"147","line":597,"column":29,"nodeType":"145","endLine":597,"endColumn":53},{"ruleId":"143","severity":1,"message":"144","line":601,"column":29,"nodeType":"145","endLine":601,"endColumn":76},{"ruleId":"146","severity":1,"message":"147","line":602,"column":29,"nodeType":"145","endLine":602,"endColumn":53},{"ruleId":"143","severity":1,"message":"144","line":612,"column":15,"nodeType":"145","endLine":612,"endColumn":57},{"ruleId":"146","severity":1,"message":"147","line":615,"column":15,"nodeType":"145","endLine":615,"endColumn":18},{"ruleId":"148","severity":1,"message":"149","line":618,"column":28,"nodeType":"150","messageId":"151","endLine":618,"endColumn":30},{"ruleId":"146","severity":1,"message":"147","line":618,"column":36,"nodeType":"145","endLine":618,"endColumn":39},{"ruleId":"143","severity":1,"message":"144","line":623,"column":23,"nodeType":"145","endLine":623,"endColumn":75},{"ruleId":"146","severity":1,"message":"147","line":624,"column":23,"nodeType":"145","endLine":624,"endColumn":47},{"ruleId":"143","severity":1,"message":"144","line":627,"column":23,"nodeType":"145","endLine":627,"endColumn":75},{"ruleId":"146","severity":1,"message":"147","line":628,"column":23,"nodeType":"145","endLine":628,"endColumn":47},{"ruleId":"143","severity":1,"message":"144","line":631,"column":23,"nodeType":"145","endLine":631,"endColumn":72},{"ruleId":"146","severity":1,"message":"147","line":632,"column":23,"nodeType":"145","endLine":632,"endColumn":47},{"ruleId":"143","severity":1,"message":"144","line":635,"column":23,"nodeType":"145","endLine":635,"endColumn":70},{"ruleId":"146","severity":1,"message":"147","line":636,"column":23,"nodeType":"145","endLine":636,"endColumn":47},{"ruleId":"148","severity":1,"message":"149","line":638,"column":30,"nodeType":"150","messageId":"151","endLine":638,"endColumn":32},{"ruleId":"143","severity":1,"message":"144","line":640,"column":25,"nodeType":"145","endLine":640,"endColumn":71},{"ruleId":"146","severity":1,"message":"147","line":641,"column":25,"nodeType":"145","endLine":641,"endColumn":49},{"ruleId":"143","severity":1,"message":"144","line":645,"column":25,"nodeType":"145","endLine":645,"endColumn":72},{"ruleId":"146","severity":1,"message":"147","line":646,"column":25,"nodeType":"145","endLine":646,"endColumn":49},{"ruleId":"148","severity":1,"message":"149","line":652,"column":17,"nodeType":"150","messageId":"151","endLine":652,"endColumn":19},{"ruleId":"146","severity":1,"message":"147","line":656,"column":19,"nodeType":"145","endLine":656,"endColumn":22},{"ruleId":"146","severity":1,"message":"147","line":659,"column":19,"nodeType":"145","endLine":659,"endColumn":22},{"ruleId":"143","severity":1,"message":"144","line":682,"column":23,"nodeType":"145","endLine":682,"endColumn":100},{"ruleId":"146","severity":1,"message":"147","line":685,"column":23,"nodeType":"145","endLine":685,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":689,"column":25,"nodeType":"145","endLine":689,"endColumn":85},{"ruleId":"143","severity":1,"message":"144","line":691,"column":25,"nodeType":"145","endLine":691,"endColumn":151},{"ruleId":"143","severity":1,"message":"144","line":698,"column":23,"nodeType":"145","endLine":698,"endColumn":101},{"ruleId":"146","severity":1,"message":"147","line":701,"column":23,"nodeType":"145","endLine":701,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":705,"column":23,"nodeType":"145","endLine":705,"endColumn":83},{"ruleId":"143","severity":1,"message":"144","line":707,"column":23,"nodeType":"145","endLine":707,"endColumn":149},{"ruleId":"143","severity":1,"message":"144","line":714,"column":23,"nodeType":"145","endLine":714,"endColumn":106},{"ruleId":"146","severity":1,"message":"147","line":717,"column":23,"nodeType":"145","endLine":717,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":721,"column":23,"nodeType":"145","endLine":721,"endColumn":83},{"ruleId":"143","severity":1,"message":"144","line":723,"column":23,"nodeType":"145","endLine":723,"endColumn":149},{"ruleId":"143","severity":1,"message":"144","line":730,"column":23,"nodeType":"145","endLine":730,"endColumn":99},{"ruleId":"146","severity":1,"message":"147","line":733,"column":23,"nodeType":"145","endLine":733,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":737,"column":23,"nodeType":"145","endLine":737,"endColumn":83},{"ruleId":"143","severity":1,"message":"144","line":739,"column":23,"nodeType":"145","endLine":739,"endColumn":149},{"ruleId":"143","severity":1,"message":"144","line":746,"column":23,"nodeType":"145","endLine":746,"endColumn":105},{"ruleId":"146","severity":1,"message":"147","line":749,"column":23,"nodeType":"145","endLine":749,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":753,"column":23,"nodeType":"145","endLine":753,"endColumn":83},{"ruleId":"143","severity":1,"message":"144","line":755,"column":23,"nodeType":"145","endLine":755,"endColumn":149},{"ruleId":"143","severity":1,"message":"144","line":762,"column":23,"nodeType":"145","endLine":762,"endColumn":99},{"ruleId":"146","severity":1,"message":"147","line":765,"column":23,"nodeType":"145","endLine":765,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":769,"column":23,"nodeType":"145","endLine":769,"endColumn":83},{"ruleId":"143","severity":1,"message":"144","line":771,"column":23,"nodeType":"145","endLine":771,"endColumn":149},{"ruleId":"143","severity":1,"message":"144","line":778,"column":23,"nodeType":"145","endLine":778,"endColumn":99},{"ruleId":"146","severity":1,"message":"147","line":781,"column":23,"nodeType":"145","endLine":781,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":785,"column":23,"nodeType":"145","endLine":785,"endColumn":83},{"ruleId":"143","severity":1,"message":"144","line":787,"column":23,"nodeType":"145","endLine":787,"endColumn":149},{"ruleId":"148","severity":1,"message":"149","line":799,"column":20,"nodeType":"150","messageId":"151","endLine":799,"endColumn":22},{"ruleId":"146","severity":1,"message":"147","line":803,"column":21,"nodeType":"145","endLine":803,"endColumn":24},{"ruleId":"146","severity":1,"message":"147","line":806,"column":21,"nodeType":"145","endLine":806,"endColumn":24},{"ruleId":"143","severity":1,"message":"144","line":829,"column":23,"nodeType":"145","endLine":829,"endColumn":100},{"ruleId":"146","severity":1,"message":"147","line":832,"column":23,"nodeType":"145","endLine":832,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":835,"column":23,"nodeType":"145","endLine":835,"endColumn":83},{"ruleId":"143","severity":1,"message":"144","line":841,"column":23,"nodeType":"145","endLine":841,"endColumn":101},{"ruleId":"146","severity":1,"message":"147","line":844,"column":23,"nodeType":"145","endLine":844,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":847,"column":23,"nodeType":"145","endLine":847,"endColumn":83},{"ruleId":"143","severity":1,"message":"144","line":853,"column":23,"nodeType":"145","endLine":853,"endColumn":106},{"ruleId":"146","severity":1,"message":"147","line":856,"column":23,"nodeType":"145","endLine":856,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":859,"column":23,"nodeType":"145","endLine":859,"endColumn":83},{"ruleId":"143","severity":1,"message":"144","line":865,"column":23,"nodeType":"145","endLine":865,"endColumn":99},{"ruleId":"146","severity":1,"message":"147","line":868,"column":23,"nodeType":"145","endLine":868,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":871,"column":23,"nodeType":"145","endLine":871,"endColumn":83},{"ruleId":"143","severity":1,"message":"144","line":877,"column":23,"nodeType":"145","endLine":877,"endColumn":105},{"ruleId":"146","severity":1,"message":"147","line":880,"column":23,"nodeType":"145","endLine":880,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":883,"column":23,"nodeType":"145","endLine":883,"endColumn":83},{"ruleId":"143","severity":1,"message":"144","line":889,"column":23,"nodeType":"145","endLine":889,"endColumn":99},{"ruleId":"146","severity":1,"message":"147","line":892,"column":23,"nodeType":"145","endLine":892,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":895,"column":23,"nodeType":"145","endLine":895,"endColumn":83},{"ruleId":"143","severity":1,"message":"144","line":901,"column":23,"nodeType":"145","endLine":901,"endColumn":99},{"ruleId":"146","severity":1,"message":"147","line":904,"column":23,"nodeType":"145","endLine":904,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":907,"column":23,"nodeType":"145","endLine":907,"endColumn":83},{"ruleId":"146","severity":1,"message":"147","line":915,"column":17,"nodeType":"145","endLine":915,"endColumn":20},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.","'hideModal' is assigned a value but never used.","'login' is assigned a value but never used.","'eosetfbalance' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'displayaccountname'. Either include it or remove the dependency array.","ArrayExpression",["152"],["153"],["154"],["155"],["156"],["157"],["158"],["159"],"'displayError' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"160","fix":"161"},{"desc":"160","fix":"162"},{"desc":"160","fix":"163"},{"desc":"160","fix":"164"},{"desc":"160","fix":"165"},{"desc":"160","fix":"166"},{"desc":"160","fix":"167"},{"desc":"160","fix":"168"},"Update the dependencies array to be: [accountname, displayaccountname]",{"range":"169","text":"170"},{"range":"171","text":"170"},{"range":"172","text":"170"},{"range":"173","text":"170"},{"range":"174","text":"170"},{"range":"175","text":"170"},{"range":"176","text":"170"},{"range":"177","text":"170"},[3839,3852],"[accountname, displayaccountname]",[4372,4385],[4903,4916],[5436,5449],[5968,5981],[6499,6512],[7037,7050],[7575,7588]]