[{"/Users/vlad/Desktop/lennyetf/eosetfv2/src/index.js":"1","/Users/vlad/Desktop/lennyetf/eosetfv2/src/reportWebVitals.js":"2","/Users/vlad/Desktop/lennyetf/eosetfv2/src/App.js":"3"},{"size":1791,"mtime":1610628062938,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1610316645021,"results":"6","hashOfConfig":"5"},{"size":27754,"mtime":1610628397705,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"187o1g5",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":98,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/Users/vlad/Desktop/lennyetf/eosetfv2/src/index.js",[],["16","17"],"/Users/vlad/Desktop/lennyetf/eosetfv2/src/reportWebVitals.js",[],"/Users/vlad/Desktop/lennyetf/eosetfv2/src/App.js",["18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115"],"import logo from './logo.svg';\nimport './App.css';\nimport { Slider } from '@material-ui/core';\nimport React, { useState, useEffect } from \"react\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { withUAL } from \"ual-reactjs-renderer\";\nimport Swal from \"sweetalert2\";\n\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport Drawer from '@material-ui/core/Drawer';\n\nconst CustomSlider = withStyles({\n  root: {\n    color: '#52af77',\n    height: 8,\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\n\nfunction App(props) {\n  const {\n    ual: { showModal, hideModal, activeUser, login, logout },\n  } = props;\n  if (activeUser) {\n    const accountName = activeUser.getAccountName();\n    accountName.then(function (result) {\n      setAccountName(result);\n    });\n  }\n  const displayaccountname = () => {\n    if (accountname) {\n      return accountname;\n    }\n  };\n  const [drawerstate, setDrawerstate] = useState(false)\n  const [tokens, setTokens] = useState(1)\n  const [view, setView] = useState(\"create\")\n  const [accountname, setAccountName] = useState(\"\")\n\n  const logmeout = () => {\n    logout()\n    setAccountName(\"\")\n  }\n\n  const sucessstake = () => {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: \"bottom-end\",\n      showConfirmButton: false,\n      timer: 6000,\n      timerProgressBar: true,\n      onOpen: (toast) => {\n        toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n        toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n      },\n    });\n    Toast.fire({\n      icon: \"success\",\n      title: \"Successfully increased voting and polling rewards\",\n    });\n  };\n\n  const actionpuccis = (err) => {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: \"bottom-end\",\n      showConfirmButton: false,\n      timer: 5000,\n      timerProgressBar: true,\n      didOpen: (toast) => {\n        toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n        toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n      },\n    });\n    Toast.fire({\n      icon: \"error\",\n      title: err,\n    });\n  };\n\n\n  const [ogxbalance, setOgx] = useState({ rows: [] });\n  const [dadbalance, setDad] = useState({ rows: [] });\n  const [boxbalance, setBox] = useState({ rows: [] });\n  const [vigbalance, setVig] = useState({ rows: [] });\n  const [iqbalance, setIq] = useState({ rows: [] });\n  const [efxbalance, setEfx] = useState({ rows: [] });\n  const [dappbalance, setDapp] = useState({ rows: [] });\n\n\n\n\n\n  useEffect(() => {\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        json: true,\n        code: \"core.ogx\",\n        table: \"accounts\",\n        scope: displayaccountname(),\n        limit: 1,\n      }),\n    }).then((response) =>\n      response.json().then((ogxbalance) => setOgx(ogxbalance))\n    );\n  }, [accountname]);\n\n\n\n  useEffect(() => {\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        json: true,\n        code: \"dadtoken1111\",\n        table: \"accounts\",\n        scope: displayaccountname(),\n        limit: 1,\n      }),\n    }).then((response) =>\n      response.json().then((dadbalance) => setDad(dadbalance))\n    );\n  }, [accountname]);\n\n\n\n  useEffect(() => {\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        json: true,\n        code: \"token.defi\",\n        table: \"accounts\",\n        scope: displayaccountname(),\n        limit: 1,\n      }),\n    }).then((response) =>\n      response.json().then((boxbalance) => setBox(boxbalance))\n    );\n  }, [accountname]);\n\n\n\n  useEffect(() => {\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        json: true,\n        code: \"vig111111111\",\n        table: \"accounts\",\n        scope: displayaccountname(),\n        limit: 1,\n      }),\n    }).then((response) =>\n      response.json().then((vigbalance) => setVig(vigbalance))\n    );\n  }, [accountname]);\n\n\n\n  useEffect(() => {\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        json: true,\n        code: \"everipediaiq\",\n        table: \"accounts\",\n        scope: displayaccountname(),\n        limit: 1,\n      }),\n    }).then((response) =>\n      response.json().then((iqbalance) => setIq(iqbalance))\n\n    );\n  }, [accountname]);\n\n\n  useEffect(() => {\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        json: true,\n        code: \"effecttokens\",\n        table: \"accounts\",\n        scope: displayaccountname(),\n        limit: 1,\n      }),\n    }).then((response) =>\n      response.json().then((efxbalance) => setEfx(efxbalance))\n    );\n  }, [accountname]);\n\n\n\n\n  useEffect(() => {\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        json: true,\n        code: \"dappservices\",\n        table: \"accounts\",\n        scope: displayaccountname(),\n        limit: 1,\n      }),\n    }).then((response) =>\n      response.json().then((dappbalance) => setDapp(dappbalance))\n    );\n  }, [accountname]);\n\n\n  const getdapp = () => {\n    if (dappbalance.rows[0]) {\n      return Math.floor(Number(dappbalance.rows[0].balance.split(\" \")[0]));\n    }\n    else {\n      return 0;\n    }\n  };\n\n  const getefx = () => {\n    if (efxbalance.rows[0]) {\n      return Math.floor(Number(efxbalance.rows[0].efxbalance.split(\" \")[0]));\n    }\n  };\n\n  const getogx = () => {\n    if (ogxbalance.rows[0]) {\n      return Math.floor(Number(ogxbalance.rows[0].ogxbalance.split(\" \")[0]));\n    }\n  };\n\n  const getbox = () => {\n    if (boxbalance.rows[0]) {\n      return Math.floor(Number(boxbalance.rows[0].boxbalance.split(\" \")[0]));\n    }\n  };\n\n  const getvig = () => {\n    if (vigbalance.rows[0]) {\n      return Math.floor(Number(vigbalance.rows[0].vigbalance.split(\" \")[0]));\n    }\n  };\n\n  const getiq = () => {\n    if (iqbalance.rows[0]) {\n      return Math.floor(Number(iqbalance.rows[0].iqbalance.split(\" \")[0]));\n    }\n  };\n\n  const getdad = () => {\n    if (dadbalance.rows[0]) {\n      return Math.floor(Number(dadbalance.rows[0].dadbalance.split(\" \")[0]));\n    }\n  };\n\n\n  const send = async () => {\n    const {\n      ual: { login, displayError, showModal },\n    } = props;\n    // Via static contextType = UALContext, access to the activeUser object on this.context is now available\n    const {\n      ual: { activeUser },\n    } = props;\n\n    console.log(getdapp())\n\n    if (activeUser) {\n      try {\n        const transaction = {\n          actions: [\n            {\n              account: \"dappservices\",\n              name: \"transfer\",\n              authorization: [\n                {\n                  actor: displayaccountname(), // use account that was logged in\n                  permission: \"active\",\n                },\n              ],\n              data: {\n                from: displayaccountname(),\n                to: \"consortiumtt\",\n                //quantity: 19.2562 * tokens + \" DAPP\",\n                memo: \"EOSETF creation\",\n                quantity: parseFloat(19.2562 * tokens).toFixed(4) + \" DAPP\",\n\n              },\n            },\n\n\n            {\n              account: \"effecttokens\",\n              name: \"transfer\",\n              authorization: [\n                {\n                  actor: displayaccountname(), // use account that was logged in\n                  permission: \"active\",\n                },\n              ],\n              data: {\n                from: displayaccountname(),\n                to: \"consortiumtt\",\n                //quantity: 10.6593 * tokens + \" EFX\",\n                memo: \"EOSETF creation\",\n                quantity: parseFloat(10.6593 * tokens).toFixed(4) + \" EFX\",\n\n              },\n            },\n\n\n\n            {\n              account: \"core.ogx\",\n              name: \"transfer\",\n              authorization: [\n                {\n                  actor: displayaccountname(), // use account that was logged in\n                  permission: \"active\",\n                },\n              ],\n              data: {\n                from: displayaccountname(),\n                to: \"consortiumtt\",\n                //quantity: 1.26108207 * tokens + \" OGX\",\n                memo: \"EOSETF creation\",\n                quantity: parseFloat(1.26108207 * tokens).toFixed(8) + \" OGX\",\n\n              },\n            },\n\n\n\n\n            {\n              account: \"everipediaiq\",\n              name: \"transfer\",\n              authorization: [\n                {\n                  actor: displayaccountname(), // use account that was logged in\n                  permission: \"active\",\n                },\n              ],\n              data: {\n                from: displayaccountname(),\n                to: \"consortiumtt\",\n                //quantity: 50.082 * tokens + \" IQ\",\n                memo: \"EOSETF creation\",\n                quantity: parseFloat(50.082 * tokens).toFixed(3) + \" IQ\",\n\n              },\n            },\n\n\n\n\n            {\n              account: \"vig111111111\",\n              name: \"transfer\",\n              authorization: [\n                {\n                  actor: displayaccountname(), // use account that was logged in\n                  permission: \"active\",\n                },\n              ],\n              data: {\n                from: displayaccountname(),\n                to: \"consortiumtt\",\n                //quantity: 196.7187 * tokens + \" VIG\",\n                memo: \"EOSETF creation\",\n                quantity: parseFloat(196.7187 * tokens).toFixed(4) + \" VIG\",\n\n              },\n            },\n\n\n\n            {\n              account: \"token.defi\",\n              name: \"transfer\",\n              authorization: [\n                {\n                  actor: displayaccountname(), // use account that was logged in\n                  permission: \"active\",\n                },\n              ],\n              data: {\n                from: displayaccountname(),\n                to: \"consortiumtt\",\n                //quantity: 0.035523 * tokens + \" BOX\",\n                memo: \"EOSETF creation\",\n                quantity: parseFloat(0.035523 * tokens).toFixed(6) + \" BOX\",\n\n              },\n            },\n\n\n\n\n            {\n              account: \"dadtoken1111\",\n              name: \"transfer\",\n              authorization: [\n                {\n                  actor: displayaccountname(), // use account that was logged in\n                  permission: \"active\",\n                },\n              ],\n              data: {\n                from: displayaccountname(),\n                to: \"consortiumtt\",\n                //quantity: 1.439439 * tokens + \" DAD\",\n                memo: \"EOSETF creation\",\n                quantity: parseFloat(1.439439 * tokens).toFixed(6) + \" DAD\",\n\n              },\n            },\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n          ],\n        };\n        // The activeUser.signTransaction will propose the passed in transaction to the logged in Authenticator\n        await activeUser.signTransaction(transaction, {\n          broadcast: true,\n          expireSeconds: 300,\n        });\n\n        sucessstake();\n\n        //alert(\"GREAT SUCCESS!\")\n        //window.location.reload(false);\n\n      } catch (error) {\n        console.log(error.message);\n        actionpuccis(\n          error.message\n        );\n        //if (error.message.startsWith(\"TypeError: Cannot\") == true) {\n\n      }\n    } else {\n      showModal();\n    }\n  };\n\n\n\n\n  const sendetf = async () => {\n    const {\n      ual: { login, displayError, showModal },\n    } = props;\n    // Via static contextType = UALContext, access to the activeUser object on this.context is now available\n    const {\n      ual: { activeUser },\n    } = props;\n\n\n    var eosetf = tokens.toFixed(4);\n\n\n    if (activeUser) {\n      try {\n        const transaction = {\n          actions: [\n            {\n              account: \"consortiumtt\",\n              name: \"transfer\",\n              authorization: [\n                {\n                  actor: displayaccountname(), // use account that was logged in\n                  permission: \"active\",\n                },\n              ],\n              data: {\n                from: displayaccountname(),\n                to: \"consortiumtt\",\n                quantity: eosetf + \" EOSETF\",\n                memo: \"EOSETF redemption\",\n\n              },\n            },\n\n\n          ],\n        };\n        // The activeUser.signTransaction will propose the passed in transaction to the logged in Authenticator\n        await activeUser.signTransaction(transaction, {\n          broadcast: true,\n          expireSeconds: 300,\n        });\n\n        sucessstake();\n\n        //alert(\"GREAT SUCCESS!\")\n        //window.location.reload(false);\n\n      } catch (error) {\n        console.log(error.message);\n        actionpuccis(\n          error.message\n        );\n      }\n    } else {\n      showModal();\n    }\n  };\n\n  const toggleDrawer = (open) => (event) => {\n    setDrawerstate(open);\n  };\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src=\"assets/burger.svg\" class=\"menubutton\" onClick={toggleDrawer(true)} />\n        <div class=\"maincard\">\n          <Drawer\n            anchor=\"right\"\n            open={drawerstate}\n            onClose={toggleDrawer(false)}\n            onOpen={toggleDrawer(true)}\n            opacity=\"0.5\"\n          >\n            <div class=\"sidemenu\">\n              <div class=\"mobilemenu\">\n                <div class=\"logo\">\n                  <img width=\"64px\" src=\"assets/logo.svg\" />\n                </div>\n                <div class=\"appname\">\n                  <a>EOSETF</a>\n                </div>\n                <div class=\"accountname\">\n                  {accountname == \"\" ? <a>not signed in</a> : accountname}\n                </div>\n                <div class=\"menuitemswrapper\">\n                  <table class=\"menuitems\">\n                    <tr onClick={() => setView(\"create\")}>\n                      <td><img class=\"menuimg\" src=\"assets/productbox1.svg\" /></td>\n                      <td><a class=\"menuitemtext\">Create</a></td>\n                    </tr>\n                    <tr onClick={() => setView(\"redeem\")}>\n                      <td><img class=\"menuimg\" src=\"assets/productbox2.svg\" /></td>\n                      <td><a class=\"menuitemtext\">Redeem</a></td>\n                    </tr>\n                    <tr onClick={() => window.open('https://newdex.io/', \"_blank\")}>\n                      <td><img class=\"menuimg\" src=\"assets/checkout.svg\" /></td>\n                      <td><a class=\"menuitemtext\">Buy</a></td>\n                    </tr>\n                    <tr onClick={() => window.open('https://app.consortium.vote/', \"_blank\")}>\n                      <td><img class=\"menuimg\" src=\"assets/govern.svg\" /></td>\n                      <td><a class=\"menuitemtext\">Govern</a></td>\n                    </tr>\n                    {accountname == \"\" ?\n                      <tr onClick={() => showModal()}>\n                        <td><img class=\"menuimg\" src=\"assets/login.svg\" /></td>\n                        <td><a class=\"menuitemtext\">Login</a></td>\n                      </tr>\n                      :\n                      <tr onClick={() => logmeout()}>\n                        <td><img class=\"menuimg\" src=\"assets/logout.svg\" /></td>\n                        <td><a class=\"menuitemtext\">Logout</a></td>\n                      </tr>\n                    }\n                  </table>\n                </div>\n              </div>\n            </div>\n          </Drawer>\n          <div class=\"leftbar\">\n            <div class=\"logo\">\n              <img width=\"64px\" src=\"assets/logo.svg\" />\n            </div>\n            <div class=\"appname\">\n              <a>EOSETF</a>\n            </div>\n            <div class=\"accountname\">\n              {accountname == \"\" ? <a>not signed in</a> : accountname}\n            </div>\n            <div class=\"menuitemswrapper\">\n              <table class=\"menuitems\">\n                <tr onClick={() => setView(\"create\")}>\n                  <td><img class=\"menuimg\" src=\"assets/productbox1.svg\" /></td>\n                  <td><a class=\"menuitemtext\">Create</a></td>\n                </tr>\n                <tr onClick={() => setView(\"redeem\")}>\n                  <td><img class=\"menuimg\" src=\"assets/productbox2.svg\" /></td>\n                  <td><a class=\"menuitemtext\">Redeem</a></td>\n                </tr>\n                <tr onClick={() => window.open('https://newdex.io/', \"_blank\")}>\n                  <td><img class=\"menuimg\" src=\"assets/checkout.svg\" /></td>\n                  <td><a class=\"menuitemtext\">Buy</a></td>\n                </tr>\n                <tr onClick={() => window.open('https://app.consortium.vote/', \"_blank\")}>\n                  <td><img class=\"menuimg\" src=\"assets/govern.svg\" /></td>\n                  <td><a class=\"menuitemtext\">Govern</a></td>\n                </tr>\n                {accountname == \"\" ?\n                  <tr onClick={() => showModal()}>\n                    <td><img class=\"menuimg\" src=\"assets/login.svg\" /></td>\n                    <td><a class=\"menuitemtext\">Login</a></td>\n                  </tr>\n                  :\n                  <tr onClick={() => logmeout()}>\n                    <td><img class=\"menuimg\" src=\"assets/logout.svg\" /></td>\n                    <td><a class=\"menuitemtext\">Logout</a></td>\n                  </tr>\n                }\n              </table>\n            </div>\n          </div>\n          {view == \"create\" ?\n            <div class=\"rightbar\">\n              <div class=\"rightbartopbox\">\n                <div class=\"createetftitle\">\n                  <a>Create EOSETF</a>\n                </div>\n                <div class=\"slidertext\">\n                  <a>You are creating <a class=\"highlighttext\">{tokens}</a> EOSETF.</a>\n                </div>\n                <div class=\"slider\">\n                  <CustomSlider\n                    defaultValue={1.0000}\n                    aria-label=\"custom thumb label\"\n                    step={1.0000}\n                    min={0}\n                    max={10.0000}\n                    onChangeCommitted={(e, val) => setTokens(val)}\n                    style={{\n                      marginBottom: \"10px\",\n                      \"margin-top\": \"10px\",\n                      color: \"white\",\n                    }}\n                  />\n                </div>\n              </div>\n              <Scrollbars style={{ width: \"100%\", height: \"90%\" }} autoHide >\n                <div class=\"rightbar\">\n                  <div class=\"smallcard\">\n                    <div class=\"tokenlogo\">\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\n                    </div>\n                    <div class=\"smallcardtext\">\n                      <a>Send: 100 DAPP tokens</a>\n                    </div>\n                    <div class=\"trxbutton\">\n                      <img class=\"trximage\" height=\"100%\" src=\"assets/connection.svg\" />\n                    </div>\n                  </div>\n\n                  <div class=\"smallcard\">\n                    <div class=\"tokenlogo\">\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\n                    </div>\n                    <div class=\"smallcardtext\">\n                      <a>Send: 100 DAPP tokens</a>\n                    </div>\n                    <div class=\"trxbutton\">\n                      <img class=\"trximage\" height=\"100%\" src=\"assets/connection.svg\" />\n                    </div>\n                  </div>\n\n                  <div class=\"smallcard\">\n                    <div class=\"tokenlogo\">\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\n                    </div>\n                    <div class=\"smallcardtext\">\n                      <a>Send: 100 DAPP tokens</a>\n                    </div>\n                    <div class=\"trxbutton\">\n                      <img class=\"trximage\" height=\"100%\" src=\"assets/connection.svg\" />\n                    </div>\n                  </div>\n\n                  <div class=\"smallcard\">\n                    <div class=\"tokenlogo\">\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\n                    </div>\n                    <div class=\"smallcardtext\">\n                      <a>Send: 100 DAPP tokens</a>\n                    </div>\n                    <div class=\"trxbutton\">\n                      <img class=\"trximage\" height=\"100%\" src=\"assets/connection.svg\" />\n                    </div>\n                  </div>\n\n                  <div class=\"smallcard\">\n                    <div class=\"tokenlogo\">\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\n                    </div>\n                    <div class=\"smallcardtext\">\n                      <a>Send: 100 DAPP tokens</a>\n                    </div>\n                    <div class=\"trxbutton\">\n                      <img class=\"trximage\" height=\"100%\" src=\"assets/connection.svg\" />\n                    </div>\n                  </div>\n\n                  <div class=\"smallcard\">\n                    <div class=\"tokenlogo\">\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\n                    </div>\n                    <div class=\"smallcardtext\">\n                      <a>Send: 100 DAPP tokens</a>\n                    </div>\n                    <div class=\"trxbutton\">\n                      <img class=\"trximage\" height=\"100%\" src=\"assets/connection.svg\" />\n                    </div>\n                  </div>\n\n                  <div class=\"smallcard\">\n                    <div class=\"tokenlogo\">\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\n                    </div>\n                    <div class=\"smallcardtext\">\n                      <a>Send: 100 DAPP tokens</a>\n                    </div>\n                    <div class=\"trxbutton\">\n                      <img class=\"trximage\" height=\"100%\" src=\"assets/connection.svg\" />\n                    </div>\n                  </div>\n                </div>\n              </Scrollbars>\n              <div class=\"fade\" />\n              <button onClick={() => send()} class=\"createbutton\">Create EOSETF</button>\n            </div>\n            : view == \"redeem\" ?\n              <div class=\"rightbar\">\n                <div class=\"rightbartopbox\">\n                  <div class=\"createetftitle\">\n                    <a>Redeem EOSETF</a>\n                  </div>\n                  <div class=\"slidertext\">\n                    <a>You are redeeming <a class=\"highlighttext\">{tokens}</a> EOSETF.</a>\n                  </div>\n                  <div class=\"slider\">\n                    <CustomSlider\n                      defaultValue={1.0000}\n                      aria-label=\"custom thumb label\"\n                      step={1.0000}\n                      min={0}\n                      max={10.0000}\n                      onChangeCommitted={(e, val) => setTokens(val)}\n                      style={{\n                        marginBottom: \"10px\",\n                        \"margin-top\": \"10px\",\n                        color: \"white\",\n                      }}\n                    />\n                  </div>\n                </div>\n                <Scrollbars style={{ width: \"100%\", height: \"90%\" }} autoHide >\n                  <div class=\"rightbar\">\n                    <div class=\"smallcard\">\n                      <div class=\"tokenlogo\">\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\n                      </div>\n                      <div class=\"smallcardtext\">\n                        <a>You will get: 100 DAPP tokens</a>\n                      </div>\n                      <div class=\"trxbutton\">\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/connection.svg\" />\n                      </div>\n                    </div>\n\n                    <div class=\"smallcard\">\n                      <div class=\"tokenlogo\">\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\n                      </div>\n                      <div class=\"smallcardtext\">\n                        <a>You will get: 100 DAPP tokens</a>\n                      </div>\n                      <div class=\"trxbutton\">\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/connection.svg\" />\n                      </div>\n                    </div>\n\n                    <div class=\"smallcard\">\n                      <div class=\"tokenlogo\">\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\n                      </div>\n                      <div class=\"smallcardtext\">\n                        <a>You will get: 100 DAPP tokens</a>\n                      </div>\n                      <div class=\"trxbutton\">\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/connection.svg\" />\n                      </div>\n                    </div>\n\n                    <div class=\"smallcard\">\n                      <div class=\"tokenlogo\">\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\n                      </div>\n                      <div class=\"smallcardtext\">\n                        <a>You will get: 100 DAPP tokens</a>\n                      </div>\n                      <div class=\"trxbutton\">\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/connection.svg\" />\n                      </div>\n                    </div>\n                  </div>\n                </Scrollbars>\n                <button class=\"createbutton\" onClick={() => sendetf()}>Redeem EOSETF</button>\n              </div>\n              : <a>Error</a>\n          }\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default withUAL(App);\n",{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":1,"column":8,"nodeType":"122","messageId":"123","endLine":1,"endColumn":12},{"ruleId":"120","severity":1,"message":"124","line":5,"column":22,"nodeType":"122","messageId":"123","endLine":5,"endColumn":32},{"ruleId":"120","severity":1,"message":"125","line":44,"column":23,"nodeType":"122","messageId":"123","endLine":44,"endColumn":32},{"ruleId":"120","severity":1,"message":"126","line":44,"column":46,"nodeType":"122","messageId":"123","endLine":44,"endColumn":51},{"ruleId":"127","severity":1,"message":"128","line":133,"column":6,"nodeType":"129","endLine":133,"endColumn":19,"suggestions":"130"},{"ruleId":"127","severity":1,"message":"128","line":154,"column":6,"nodeType":"129","endLine":154,"endColumn":19,"suggestions":"131"},{"ruleId":"127","severity":1,"message":"128","line":175,"column":6,"nodeType":"129","endLine":175,"endColumn":19,"suggestions":"132"},{"ruleId":"127","severity":1,"message":"128","line":196,"column":6,"nodeType":"129","endLine":196,"endColumn":19,"suggestions":"133"},{"ruleId":"127","severity":1,"message":"128","line":218,"column":6,"nodeType":"129","endLine":218,"endColumn":19,"suggestions":"134"},{"ruleId":"127","severity":1,"message":"128","line":238,"column":6,"nodeType":"129","endLine":238,"endColumn":19,"suggestions":"135"},{"ruleId":"127","severity":1,"message":"128","line":260,"column":6,"nodeType":"129","endLine":260,"endColumn":19,"suggestions":"136"},{"ruleId":"120","severity":1,"message":"137","line":272,"column":9,"nodeType":"122","messageId":"123","endLine":272,"endColumn":15},{"ruleId":"120","severity":1,"message":"138","line":278,"column":9,"nodeType":"122","messageId":"123","endLine":278,"endColumn":15},{"ruleId":"120","severity":1,"message":"139","line":284,"column":9,"nodeType":"122","messageId":"123","endLine":284,"endColumn":15},{"ruleId":"120","severity":1,"message":"140","line":290,"column":9,"nodeType":"122","messageId":"123","endLine":290,"endColumn":15},{"ruleId":"120","severity":1,"message":"141","line":296,"column":9,"nodeType":"122","messageId":"123","endLine":296,"endColumn":14},{"ruleId":"120","severity":1,"message":"142","line":302,"column":9,"nodeType":"122","messageId":"123","endLine":302,"endColumn":15},{"ruleId":"120","severity":1,"message":"126","line":311,"column":14,"nodeType":"122","messageId":"123","endLine":311,"endColumn":19},{"ruleId":"120","severity":1,"message":"143","line":311,"column":21,"nodeType":"122","messageId":"123","endLine":311,"endColumn":33},{"ruleId":"120","severity":1,"message":"126","line":516,"column":14,"nodeType":"122","messageId":"123","endLine":516,"endColumn":19},{"ruleId":"120","severity":1,"message":"143","line":516,"column":21,"nodeType":"122","messageId":"123","endLine":516,"endColumn":33},{"ruleId":"144","severity":1,"message":"145","line":582,"column":9,"nodeType":"146","endLine":582,"endColumn":88},{"ruleId":"144","severity":1,"message":"145","line":594,"column":19,"nodeType":"146","endLine":594,"endColumn":61},{"ruleId":"147","severity":1,"message":"148","line":597,"column":19,"nodeType":"146","endLine":597,"endColumn":22},{"ruleId":"149","severity":1,"message":"150","line":600,"column":32,"nodeType":"151","messageId":"152","endLine":600,"endColumn":34},{"ruleId":"147","severity":1,"message":"148","line":600,"column":40,"nodeType":"146","endLine":600,"endColumn":43},{"ruleId":"144","severity":1,"message":"145","line":605,"column":27,"nodeType":"146","endLine":605,"endColumn":79},{"ruleId":"147","severity":1,"message":"148","line":606,"column":27,"nodeType":"146","endLine":606,"endColumn":51},{"ruleId":"144","severity":1,"message":"145","line":609,"column":27,"nodeType":"146","endLine":609,"endColumn":79},{"ruleId":"147","severity":1,"message":"148","line":610,"column":27,"nodeType":"146","endLine":610,"endColumn":51},{"ruleId":"144","severity":1,"message":"145","line":613,"column":27,"nodeType":"146","endLine":613,"endColumn":76},{"ruleId":"147","severity":1,"message":"148","line":614,"column":27,"nodeType":"146","endLine":614,"endColumn":51},{"ruleId":"144","severity":1,"message":"145","line":617,"column":27,"nodeType":"146","endLine":617,"endColumn":74},{"ruleId":"147","severity":1,"message":"148","line":618,"column":27,"nodeType":"146","endLine":618,"endColumn":51},{"ruleId":"149","severity":1,"message":"150","line":620,"column":34,"nodeType":"151","messageId":"152","endLine":620,"endColumn":36},{"ruleId":"144","severity":1,"message":"145","line":622,"column":29,"nodeType":"146","endLine":622,"endColumn":75},{"ruleId":"147","severity":1,"message":"148","line":623,"column":29,"nodeType":"146","endLine":623,"endColumn":53},{"ruleId":"144","severity":1,"message":"145","line":627,"column":29,"nodeType":"146","endLine":627,"endColumn":76},{"ruleId":"147","severity":1,"message":"148","line":628,"column":29,"nodeType":"146","endLine":628,"endColumn":53},{"ruleId":"144","severity":1,"message":"145","line":638,"column":15,"nodeType":"146","endLine":638,"endColumn":57},{"ruleId":"147","severity":1,"message":"148","line":641,"column":15,"nodeType":"146","endLine":641,"endColumn":18},{"ruleId":"149","severity":1,"message":"150","line":644,"column":28,"nodeType":"151","messageId":"152","endLine":644,"endColumn":30},{"ruleId":"147","severity":1,"message":"148","line":644,"column":36,"nodeType":"146","endLine":644,"endColumn":39},{"ruleId":"144","severity":1,"message":"145","line":649,"column":23,"nodeType":"146","endLine":649,"endColumn":75},{"ruleId":"147","severity":1,"message":"148","line":650,"column":23,"nodeType":"146","endLine":650,"endColumn":47},{"ruleId":"144","severity":1,"message":"145","line":653,"column":23,"nodeType":"146","endLine":653,"endColumn":75},{"ruleId":"147","severity":1,"message":"148","line":654,"column":23,"nodeType":"146","endLine":654,"endColumn":47},{"ruleId":"144","severity":1,"message":"145","line":657,"column":23,"nodeType":"146","endLine":657,"endColumn":72},{"ruleId":"147","severity":1,"message":"148","line":658,"column":23,"nodeType":"146","endLine":658,"endColumn":47},{"ruleId":"144","severity":1,"message":"145","line":661,"column":23,"nodeType":"146","endLine":661,"endColumn":70},{"ruleId":"147","severity":1,"message":"148","line":662,"column":23,"nodeType":"146","endLine":662,"endColumn":47},{"ruleId":"149","severity":1,"message":"150","line":664,"column":30,"nodeType":"151","messageId":"152","endLine":664,"endColumn":32},{"ruleId":"144","severity":1,"message":"145","line":666,"column":25,"nodeType":"146","endLine":666,"endColumn":71},{"ruleId":"147","severity":1,"message":"148","line":667,"column":25,"nodeType":"146","endLine":667,"endColumn":49},{"ruleId":"144","severity":1,"message":"145","line":671,"column":25,"nodeType":"146","endLine":671,"endColumn":72},{"ruleId":"147","severity":1,"message":"148","line":672,"column":25,"nodeType":"146","endLine":672,"endColumn":49},{"ruleId":"149","severity":1,"message":"150","line":678,"column":17,"nodeType":"151","messageId":"152","endLine":678,"endColumn":19},{"ruleId":"147","severity":1,"message":"148","line":682,"column":19,"nodeType":"146","endLine":682,"endColumn":22},{"ruleId":"147","severity":1,"message":"148","line":685,"column":19,"nodeType":"146","endLine":685,"endColumn":22},{"ruleId":"147","severity":1,"message":"148","line":685,"column":39,"nodeType":"146","endLine":685,"endColumn":64},{"ruleId":"144","severity":1,"message":"145","line":707,"column":23,"nodeType":"146","endLine":707,"endColumn":151},{"ruleId":"147","severity":1,"message":"148","line":710,"column":23,"nodeType":"146","endLine":710,"endColumn":26},{"ruleId":"144","severity":1,"message":"145","line":713,"column":23,"nodeType":"146","endLine":713,"endColumn":89},{"ruleId":"144","severity":1,"message":"145","line":719,"column":23,"nodeType":"146","endLine":719,"endColumn":151},{"ruleId":"147","severity":1,"message":"148","line":722,"column":23,"nodeType":"146","endLine":722,"endColumn":26},{"ruleId":"144","severity":1,"message":"145","line":725,"column":23,"nodeType":"146","endLine":725,"endColumn":89},{"ruleId":"144","severity":1,"message":"145","line":731,"column":23,"nodeType":"146","endLine":731,"endColumn":151},{"ruleId":"147","severity":1,"message":"148","line":734,"column":23,"nodeType":"146","endLine":734,"endColumn":26},{"ruleId":"144","severity":1,"message":"145","line":737,"column":23,"nodeType":"146","endLine":737,"endColumn":89},{"ruleId":"144","severity":1,"message":"145","line":743,"column":23,"nodeType":"146","endLine":743,"endColumn":151},{"ruleId":"147","severity":1,"message":"148","line":746,"column":23,"nodeType":"146","endLine":746,"endColumn":26},{"ruleId":"144","severity":1,"message":"145","line":749,"column":23,"nodeType":"146","endLine":749,"endColumn":89},{"ruleId":"144","severity":1,"message":"145","line":755,"column":23,"nodeType":"146","endLine":755,"endColumn":151},{"ruleId":"147","severity":1,"message":"148","line":758,"column":23,"nodeType":"146","endLine":758,"endColumn":26},{"ruleId":"144","severity":1,"message":"145","line":761,"column":23,"nodeType":"146","endLine":761,"endColumn":89},{"ruleId":"144","severity":1,"message":"145","line":767,"column":23,"nodeType":"146","endLine":767,"endColumn":151},{"ruleId":"147","severity":1,"message":"148","line":770,"column":23,"nodeType":"146","endLine":770,"endColumn":26},{"ruleId":"144","severity":1,"message":"145","line":773,"column":23,"nodeType":"146","endLine":773,"endColumn":89},{"ruleId":"144","severity":1,"message":"145","line":779,"column":23,"nodeType":"146","endLine":779,"endColumn":151},{"ruleId":"147","severity":1,"message":"148","line":782,"column":23,"nodeType":"146","endLine":782,"endColumn":26},{"ruleId":"144","severity":1,"message":"145","line":785,"column":23,"nodeType":"146","endLine":785,"endColumn":89},{"ruleId":"149","severity":1,"message":"150","line":793,"column":20,"nodeType":"151","messageId":"152","endLine":793,"endColumn":22},{"ruleId":"147","severity":1,"message":"148","line":797,"column":21,"nodeType":"146","endLine":797,"endColumn":24},{"ruleId":"147","severity":1,"message":"148","line":800,"column":21,"nodeType":"146","endLine":800,"endColumn":24},{"ruleId":"147","severity":1,"message":"148","line":800,"column":42,"nodeType":"146","endLine":800,"endColumn":67},{"ruleId":"144","severity":1,"message":"145","line":822,"column":25,"nodeType":"146","endLine":822,"endColumn":153},{"ruleId":"147","severity":1,"message":"148","line":825,"column":25,"nodeType":"146","endLine":825,"endColumn":28},{"ruleId":"144","severity":1,"message":"145","line":828,"column":25,"nodeType":"146","endLine":828,"endColumn":91},{"ruleId":"144","severity":1,"message":"145","line":834,"column":25,"nodeType":"146","endLine":834,"endColumn":153},{"ruleId":"147","severity":1,"message":"148","line":837,"column":25,"nodeType":"146","endLine":837,"endColumn":28},{"ruleId":"144","severity":1,"message":"145","line":840,"column":25,"nodeType":"146","endLine":840,"endColumn":91},{"ruleId":"144","severity":1,"message":"145","line":846,"column":25,"nodeType":"146","endLine":846,"endColumn":153},{"ruleId":"147","severity":1,"message":"148","line":849,"column":25,"nodeType":"146","endLine":849,"endColumn":28},{"ruleId":"144","severity":1,"message":"145","line":852,"column":25,"nodeType":"146","endLine":852,"endColumn":91},{"ruleId":"144","severity":1,"message":"145","line":858,"column":25,"nodeType":"146","endLine":858,"endColumn":153},{"ruleId":"147","severity":1,"message":"148","line":861,"column":25,"nodeType":"146","endLine":861,"endColumn":28},{"ruleId":"144","severity":1,"message":"145","line":864,"column":25,"nodeType":"146","endLine":864,"endColumn":91},{"ruleId":"147","severity":1,"message":"148","line":871,"column":17,"nodeType":"146","endLine":871,"endColumn":20},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.","'hideModal' is assigned a value but never used.","'login' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'displayaccountname'. Either include it or remove the dependency array.","ArrayExpression",["155"],["156"],["157"],["158"],["159"],["160"],["161"],"'getefx' is assigned a value but never used.","'getogx' is assigned a value but never used.","'getbox' is assigned a value but never used.","'getvig' is assigned a value but never used.","'getiq' is assigned a value but never used.","'getdad' is assigned a value but never used.","'displayError' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"desc":"162","fix":"164"},{"desc":"162","fix":"165"},{"desc":"162","fix":"166"},{"desc":"162","fix":"167"},{"desc":"162","fix":"168"},{"desc":"162","fix":"169"},"Update the dependencies array to be: [accountname, displayaccountname]",{"range":"170","text":"171"},{"range":"172","text":"171"},{"range":"173","text":"171"},{"range":"174","text":"171"},{"range":"175","text":"171"},{"range":"176","text":"171"},{"range":"177","text":"171"},[3311,3324],"[accountname, displayaccountname]",[3823,3836],[4333,4346],[4845,4858],[5355,5368],[5866,5879],[6382,6395]]