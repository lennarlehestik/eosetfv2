[{"/Users/vlad/Desktop/lennyetf/eosetfv2/src/index.js":"1","/Users/vlad/Desktop/lennyetf/eosetfv2/src/BarChart.js":"2","/Users/vlad/Desktop/lennyetf/eosetfv2/src/reportWebVitals.js":"3","/Users/vlad/Desktop/lennyetf/eosetfv2/src/App.js":"4","/Users/vlad/Desktop/lennyetf/eosetfv2/src/Poll.js":"5"},{"size":1940,"mtime":1636099860899,"results":"6","hashOfConfig":"7"},{"size":2875,"mtime":1625133910109,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1610316645021,"results":"9","hashOfConfig":"7"},{"size":47558,"mtime":1636099860898,"results":"10","hashOfConfig":"7"},{"size":12152,"mtime":1636099860899,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"187o1g5",{"filePath":"16","messages":"17","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":121,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"15"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"15"},"/Users/vlad/Desktop/lennyetf/eosetfv2/src/index.js",["27","28"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { UALProvider } from 'ual-reactjs-renderer'\nimport { Anchor } from 'ual-anchor'\nimport { Scatter } from 'ual-scatter'\nimport { Lynx } from 'ual-lynx'\nimport { TokenPocket } from 'ual-token-pocket'\nimport { Wombat } from 'ual-wombat'\nimport { EOSIOAuth } from 'ual-eosio-reference-authenticator'\nimport { Metamask } from 'ual-metamask'\n\n\nconst appName = \"EOSETF\";\n\nconst chain = {\n  chainId: \"aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906\",\n  rpcEndpoints: [\n    {\n      protocol: \"https\",\n      host: \"eos.greymass.com\",\n      //https://dsp.maltablock.org\n      //host: \"dsp.airdropsdac.com\", https://node2.blockstartdsp.com\"dsp.eosphere.io\",https://dsp.eosdetroit.io,https://node1.eosdsp.com\n      port: \"\",\n    },\n  ],\n};\n\nconst anchor = new Anchor([chain], {\n  appName,\n});\nconst scatter = new Scatter([chain], { appName })\nconst lynx = new Lynx([chain])\nconst tokenPocket = new TokenPocket([chain])\nconst wombat = new Wombat([chain], { appName: 'EOSETF' })\nconst eosioAuth = new EOSIOAuth([chain], { appName, protocol: 'eosio' })\nconst metamask = new Metamask([chain])\n\n\nconst supportedChains = [chain];\nconst supportedAuthenticators = [\n  anchor, lynx, tokenPocket, eosioAuth, metamask //wombat, scatter removed due to development server error (works in prod)\n];\n\nReactDOM.render(\n  <React.StrictMode>\n    <UALProvider\n      chains={supportedChains}\n      authenticators={supportedAuthenticators}\n      appName={appName}\n    >\n      <App />\n    </UALProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["29","30"],"/Users/vlad/Desktop/lennyetf/eosetfv2/src/BarChart.js",["31","32","33","34","35","36","37","38","39"],"import './App.css';\nimport './Poll.css';\nimport { Slider } from '@material-ui/core';\nimport React, { useState, useEffect } from \"react\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { ResponsiveBar } from '@nivo/bar'\n\nconst BarChart = React.memo(props => {\n  const colors = { 'Current': 'rgb(0, 183, 255)', 'Reallocated': 'rgb(240, 107, 255)'}\n  const getColor = bar => colors[bar.id]\n  const data = props.data\n    const MyResponsiveBar = ({ data /* see data tab */ }) => (\n        <ResponsiveBar\n            data={data}\n            keys={[ 'Current', 'Reallocated']}\n            indexBy=\"token\"\n            margin={{ top: 20, right: 130, bottom: 50, left: 70 }}\n            padding={0.3}\n            valueScale={{ type: 'linear' }}\n            indexScale={{ type: 'band', round: true }}\n            colors={getColor}\n            borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n            axisTop={null}\n            groupMode='grouped'\n            layout=\"horizontal\"\n            axisRight={null}\n            axisBottom={{\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 0,\n                legend: 'Percentage of portfolio',\n                legendPosition: 'middle',\n                legendOffset: 32\n            }}\n            axisLeft={{\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 0,\n                legendPosition: 'middle',\n                legendOffset: -40\n            }}\n            labelSkipWidth={12}\n            labelSkipHeight={12}\n            labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n            legends={[\n                {\n                    dataFrom: 'keys',\n                    anchor: 'bottom-right',\n                    direction: 'column',\n                    justify: false,\n                    translateX: 120,\n                    translateY: 0,\n                    itemsSpacing: 2,\n                    itemWidth: 100,\n                    itemHeight: 20,\n                    itemDirection: 'left-to-right',\n                    itemOpacity: 0.85,\n                    symbolSize: 20,\n                    effects: [\n                        {\n                            on: 'hover',\n                            style: {\n                                itemOpacity: 1\n                            }\n                        }\n                    ]\n                }\n            ]}\n            animate={true}\n            motionStiffness={90}\n            motionDamping={15}\n        />\n    )\n    return(\n            <MyResponsiveBar data = {data}/>\n    )\n}\n)\n\nexport default BarChart;","/Users/vlad/Desktop/lennyetf/eosetfv2/src/reportWebVitals.js",[],"/Users/vlad/Desktop/lennyetf/eosetfv2/src/App.js",["40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160"],"import logo from './logo.svg';\nimport './App.css';\nimport { Slider } from '@material-ui/core';\nimport React, { useState, useEffect } from \"react\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { withUAL } from \"ual-reactjs-renderer\";\nimport Swal from \"sweetalert2\";\nimport ReactTooltip from \"react-tooltip\";\nimport InfoIcon from '@material-ui/icons/Info';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport Drawer from '@material-ui/core/Drawer';\nimport ReactGA from \"react-ga\";\nimport { Bar, Pie, Doughnut } from 'react-chartjs-2';\nimport { Promise } from \"bluebird\";\nimport Poll from './Poll'\n//import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CachedIcon from '@material-ui/icons/Cached';\n\nconst CustomSlider = withStyles({\n  root: {\n    color: '#52af77',\n    height: 8,\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontSize: \"14px\",\n    width: '100%',\n  },\n  heading: {\n    fontSize: \"14px\",\n    color: \"#534C80\",\n    fontFamily: \"'Roboto', sans-serif\",\n    margin: 0\n  },\n  summary: {\n    padding: 0,\n  },\n  expansion: {\n    backgroundColor: \"rgba( 255, 255, 255, 0 )\",\n    boxShadow: \"none\",\n    borderRadius: \"100px\",\n    marginLeft: 0,\n  },\n  expansion2: {\n    fontSize: \"10px\"\n  }\n}));\n\nfunction App(props) {\n\n\n  const classes = useStyles();\n\n  const {\n    ual: { showModal, hideModal, activeUser, login, logout },\n  } = props;\n  if (activeUser) {\n    const accountName = activeUser.getAccountName();\n    accountName.then(function (result) {\n      setAccountName(result);\n    });\n  }\n  const displayaccountname = () => {\n    if (accountname) {\n      return accountname;\n    }\n  };\n  const [drawerstate, setDrawerstate] = useState(false)\n  const [tokens, setTokens] = useState(0)\n  const [redeemtokens, setRedeemtokens] = useState(0)\n  const [view, setView] = useState(\"create\")\n  const [accountname, setAccountName] = useState(\"\")\n\n  const logmeout = () => {\n    logout()\n    setAccountName(\"\")\n  }\n\n\n  const redemptionfee = 0.95\n  const efxmult = 2.6911\n  const dadmult = 0.880282\n  const iqmult = 26.233\n  const vigmult = 125.0000\n  const dappmult = 12.6263\n  const boxmult = 0.036075\n  const ogxmult = 2.13675214\n\n  const chexmult = 56.94760820\n  const pizzamult = 4.4696\n  const dfsmult = 0.0140\n  const emtmult = 16.3399\n  const dexmult = 3.3850\n  const tptmult = 17.9856\n\n\n  const sucessstake = () => {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: \"bottom-end\",\n      showConfirmButton: false,\n      timer: 6000,\n      timerProgressBar: true,\n      onOpen: (toast) => {\n        toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n        toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n      },\n    });\n    Toast.fire({\n      icon: \"success\",\n      title: \"CETF and EOSETF successfully issued!\",\n    });\n  };\n\n  const sucessredemption = () => {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: \"bottom-end\",\n      showConfirmButton: false,\n      timer: 6000,\n      timerProgressBar: true,\n      onOpen: (toast) => {\n        toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n        toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n      },\n    });\n    Toast.fire({\n      icon: \"success\",\n      title: \"Tokens successfully redeemed!\",\n    });\n  };\n\n\n\n  const actionpuccis = (err) => {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: \"bottom-end\",\n      showConfirmButton: false,\n      timer: 5000,\n      timerProgressBar: true,\n      didOpen: (toast) => {\n        toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n        toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n      },\n    });\n    Toast.fire({\n      icon: \"error\",\n      title: err,\n    });\n  };\n\n  const [govrnprice, setGovrnprice] = useState({ rows: [] });\n  const [dadpriceeos, setDadprice] = useState({ rows: [] });\n  const [eosetfprice, setEosetfprice] = useState({ rows: [] });\n  const [etfprice, setEtfprice] = useState();\n\n  const [prices, setPrices] = useState([]);\n  const [chartprices, setChartPrices] = useState([]);\n\n  const [eosetfbalance, setEosetf] = useState({ rows: [] });\n  const [etfbalance, setEtf] = useState({ rows: [] });\n  const [eosetfbalanceind, setEosetfind] = useState({ rows: [] });\n  const [etfbalanceind, setEtfind] = useState({ rows: [] });\n\n  const [fulldata, setFulldata] = useState([])\n  const [fulldataprices, setFulldataprices] = useState()\n\n  const refresher = () => {\n    setAccountName(\"\")\n    setTimeout(() => {\n      if (activeUser) {\n        const accountName = activeUser.getAccountName();\n        accountName.then(function (result) {\n          setAccountName(result);\n        });\n      }\n    }, 100)\n  }\n\n  const menuClick = (which) => {\n    setView(which)\n    setDrawerstate(false)\n  }\n\n  useEffect(() => {\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        json: true,\n        code: \"swap.defi\",\n        table: \"pairs\",\n        scope: \"swap.defi\",\n        lower_bound: 588,\n        upper_bound: 588,\n        limit: 1,\n      }),\n    }).then((response) =>\n      response.json().then((dadpriceeos) => setDadprice(dadpriceeos))\n    );\n  }, [accountname]);\n\n\n\n\n  useEffect(() => {\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        json: true,\n        code: \"swap.defi\",\n        table: \"pairs\",\n        scope: \"swap.defi\",\n        lower_bound: 1232,\n        upper_bound: 1232,\n        limit: 1,\n      }),\n    }).then((response) =>\n      response.json().then((eosetfprice) => setEosetfprice(eosetfprice))\n    );\n  }, [accountname]);\n\n\n\n  useEffect(() => {\n    fetch('https://api.newdex.io/v1/price?symbol=consortiumlv-govrn-eos', {\n    }).then((response) =>\n      response.json().then((govrnprice) => setGovrnprice(govrnprice.data.price))\n    );\n\n\n  }, [accountname]);\n\n\n  const getdadprice = () => {\n    if (dadpriceeos.rows[0]) {\n      return Number(dadpriceeos.rows[0].price1_last);\n    }\n    else {\n      return 0;\n    }\n  };\n\n\n\n  const geteosetfprice = () => {\n    if (eosetfprice.rows[0]) {\n      return Number(eosetfprice.rows[0].price1_last);\n    }\n    else {\n      return 0;\n    }\n  };\n\n\n\n  const getpricesum = () => {\n    if (prices) {\n      return getprice(\"box\") * boxmult + getprice(\"ogx\") * ogxmult + getprice(\"iq\") * iqmult + getprice(\"dapp\") * dappmult + getprice(\"vig\") * vigmult + getprice(\"efx\") * efxmult + getprice(\"chex\") * chexmult\n        + getprice(\"pizza\") * pizzamult + getprice(\"dfs\") * dfsmult + getprice(\"emt\") * emtmult + getprice(\"dex\") * dexmult + getprice(\"tpt\") * tptmult + getdadprice() * dadmult;\n    }\n  }\n\n\n  useEffect(() => {\n    const newdexcomms = [{ community: \"box\", symbol: \"token.defi-box-eos\" }, { community: \"ogx\", symbol: \"core.ogx-ogx-eos\" }, { community: \"iq\", symbol: \"everipediaiq-iq-eos\" }\n      , { community: \"dapp\", symbol: \"dappservices-dapp-eos\" }, { community: \"vig\", symbol: \"vig111111111-vig-eos\" }, { community: \"efx\", symbol: \"effecttokens-efx-eos\" }, { community: \"chex\", symbol: \"chexchexchex-chex-eos\" }, { community: \"pizza\", symbol: \"pizzatotoken-pizza-eos\" }\n      , { community: \"dfs\", symbol: \"minedfstoken-dfs-eos\" }, { community: \"emt\", symbol: \"emanateoneos-emt-eos\" }, { community: \"dex\", symbol: \"token.newdex-dex-eos\" }, { community: \"tpt\", symbol: \"eosiotptoken-tpt-eos\" }]\n    newdexcomms.forEach((item) => {\n      fetch('https://api.newdex.io/v1/price?symbol=' + item.symbol)\n        .then(response => response.json())\n        .then(data => {\n          Object.assign(item, { price: data?.data?.price })\n          setPrices([...newdexcomms]);\n        }\n        )\n    })\n  }, []);\n\n  const getprice = (community) => {\n    if (prices) {\n      const datar = prices.filter(\n        function (data) { return data.community == community }\n      );\n      if (datar[0])\n        return datar[0].price\n    }\n  }\n\n\n  const labelarray = (data) => {\n    const arr = []\n    data?.forEach((i)=>{\n      arr.push(i?.token?.split(\",\")[1])\n    })\n    return arr\n  }\n  \n\n  useEffect(()=>{\n    if(fulldata){\n      console.log(fulldata)\n      const datar = fulldata\n      datar.forEach((element, index, array) => {\n        fetch('https://api.newdex.io/v1/price?symbol=' + `${element.contract}-${element.minamount.split(\" \")[1].toLowerCase()}-eos`)\n        .then(response => response.json())\n        .then(data => {\n          datar[index].price = data?.data?.price\n        }\n        )\n        .then(() => {\n          const arr = []\n          const eosetfpricearray = []\n          const pricesum = datar.map(p => p.price * Number(p.minamount.split(\" \").[0])).reduce((a,b) => a + b)\n          console.log(\"PRICESUM:\" + pricesum)\n          datar.forEach((i)=>{\n            //make result here (price * multiplier)/price_sum\n            const result = (((Number(i.price) * Number(i.minamount.split(\" \").[0]))*100) / pricesum).toFixed(2)\n            arr.push(result)\n          })\n          setChartPrices(arr)\n          setEtfprice(pricesum)\n        })\n\n      })\n    }\n  },[fulldata])\n\n\n  const data1 = {\n    labels: labelarray(fulldata),\n    datasets: [\n      {\n        label: 'ETF weight',\n        fill: true,\n        lineTension: 0.1,\n        backgroundColor: [\"#f17ae9\", \"#f9a9f1\", \"#fdd5f8\", \"#ffffff\", \"#7aa6e3\", \"#8fe1ff\", \"#21d2ff\", \"#f9a9f1\", \"#fdd5f8\", \"#fffff5\", \"#cbf0ff\", \"#fbaaeb\", \"#21d2f8\"],\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        data: chartprices\n      }\n    ]\n  };\n\n\n  //price1_last\n  const getbalance = (row) => {\n    if(row.balance){\n    return Number(row?.balance.split(\" \")[0])\n    }\n  }\n  \n  useEffect(()=>{\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          json: true,\n          code: \"consortiumtt\",\n          table: \"rebalon\",\n          scope: \"consortiumtt\",\n          limit: 100,\n        }),\n      }).then((response) =>\n        response.json().then((res) => fetcher(res))\n      );\n    //fetch main table\n    //for each row in main table, fetch more => append to items in main state\n    //outside of this function, start replacing hardcoded state with dynamic\n    const fetcher = (fetchdata) => {\n      setFulldata(fetchdata.rows)\n      if(fetchdata.rows){\n      let data = fetchdata.rows\n      data.forEach((element, index, array) => {\n        if(accountname){\n          fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              json: true,\n              code: element.contract,\n              table: \"accounts\",\n              scope: displayaccountname(),\n              limit: 1,\n            }),\n          }).then((response) =>\n            response.json().then((balance) => attachbalance(balance.rows[0].balance))\n          );\n        }\n        //FETCH HERE\n        //THEN data[index].newvalue = fetched_value\n        const attachbalance = (balance) => {\n          data[index].balance = balance\n        }\n    });\n    setFulldata(data)\n\n\n    //TODO RIGHT NOW FOR PRICE SUM. NEED TO ADD MULTIPLIERS.\n    const prices = []\n    data.map((value, index)=>{\n      fetch('https://api.newdex.io/v1/price?symbol=' + value.contract + \"-\" + value.token.split(\",\")[1].toLowerCase() + '-eos')\n      .then(response => response.json())\n      .then(data => {\n        prices.push(data.data.price)\n      }\n      )\n    })\n    }\n    const pricesum = prices.reduce((a, b) => a + b, 0)\n    console.log(pricesum)\n  }\n  },[accountname])\n\n  useEffect(() => {\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        json: true,\n        code: \"consortiumtt\",\n        table: \"accounts\",\n        scope: displayaccountname(),\n        limit: 3,\n      }),\n    }).then((response) =>\n      response.json().then((etfbalanceind) => setEtfind(etfbalanceind))\n    );\n  }, [accountname]);\n\n  useEffect(() => {\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        json: true,\n        code: \"consortiumtt\",\n        table: \"accounts\",\n        scope: displayaccountname(),\n        lower_bound: \"CETF\",\n        upper_bound: \"CETF\",\n        limit: 1,\n      }),\n    }).then((response) =>\n      response.json().then((etfbalanceind) => setEtfind(etfbalanceind))\n    );\n  }, [accountname]);\n\n\n  useEffect(() => {\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        json: true,\n        code: \"consortiumtt\",\n        table: \"accounts\",\n        scope: displayaccountname(),\n        lower_bound: \"EOSETF\",\n        upper_bound: \"EOSETF\",\n        limit: 1,\n      }),\n    }).then((response) =>\n      response.json().then((eosetfbalanceind) => setEosetfind(eosetfbalanceind))\n    );\n  }, [accountname]);\n\n\n\n\n  useEffect(() => {\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        json: true,\n        code: \"consortiumtt\",\n        table: \"stat\",\n        scope: \"CETF\",\n        limit: 1,\n      }),\n    }).then((response) =>\n      response.json().then((etfbalance) => setEtf(etfbalance))\n    );\n  }, [accountname]);\n\n\n\n\n  useEffect(() => {\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        json: true,\n        code: \"consortiumtt\",\n        table: \"stat\",\n        scope: \"EOSETF\",\n        limit: 1,\n      }),\n    }).then((response) =>\n      response.json().then((eosetfbalance) => setEosetf(eosetfbalance))\n    );\n  }, [accountname]);\n\n\n  const gettokenbalance = (token) => {\n    if (token.rows[0]) {\n      return Number(token.rows[0].balance.split(\" \")[0]);\n    }\n    else {\n      return 0;\n    }\n  };\n\n  const gettokenbalanceone = (token) => {\n    if (token.rows[0]) {\n      return Math.floor(Number(token.rows[0].balance.split(\" \")[0]));\n      //return (token.rows[0].balance);\n    }\n    else {\n      return 0;\n    }\n  };\n\n  const gettokenbalancetwo = (token) => {\n    if (token.rows[1]) {\n      return Math.floor(Number(token.rows[1].balance.split(\" \")[0]));\n    }\n    else {\n      return 0;\n    }\n  };\n\n\n  const gettokensupply = (token) => {\n    if (token.rows[0]) {\n      return Math.floor(Number(token.rows[0].supply.split(\" \")[0]));\n    }\n    else {\n      return 0;\n    }\n  };\n\n\n\n  const halvingdivider = () => {\n    if (etfbalance.rows[0]) {\n      return parseInt(\n        Math.pow(\n          2,\n          parseInt(\n            Math.floor(Number(etfbalance.rows[0].supply.split(\" \")[0])) /\n            20000000\n          )\n        )\n      );\n    }\n  };\n\n\n\n\n  const creationreward = () => {\n    return parseInt(\n      80 /\n      halvingdivider()\n    );\n  };\n\n\n  const halvings = (totalcirc) => {\n    if (totalcirc < 20000000) {\n      return 0;\n    } else if (totalcirc >> 20000000 && totalcirc < 40000000) {\n      return 1;\n    } else if (totalcirc >> 40000000 && totalcirc < 60000000) {\n      return 2;\n    } else if (totalcirc >> 60000000 && totalcirc < 80000000) {\n      return 3;\n    }\n  };\n\n  const dynamicsend = (buy) => {\n    const fulldatacopy = fulldata\n    let alldata = [];\n    if(fulldatacopy){\n      Promise.all(fulldatacopy.map((value,index) =>{\n        return new Promise((resolve) => {\n        fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          json: true,\n          code: \"swap.defi\",\n          table: \"pairs\",\n          scope: \"swap.defi\",\n          lower_bound: fulldatacopy[index].pairid,\n          upper_bound: fulldatacopy[index].pairid,\n          limit: 1,\n        }),\n      }).then(resp => resp.json()).then(data => {\n        fulldatacopy[index].defibox = data\n      }).then(()=>{\n        fulldatacopy.forEach((element, index, array) => {\n          if(accountname){\n            fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                json: true,\n                code: element.contract,\n                table: \"accounts\",\n                scope: displayaccountname(),\n                limit: 1,\n              }),\n            }).then((response) =>\n              response.json().then((balance) => attachbalance(balance.rows[0].balance))\n            );\n          }\n          //FETCH HERE\n          //THEN data[index].newvalue = fetched_value\n          const attachbalance = (balance) => {\n            fulldatacopy[index].balance = balance\n          }\n          resolve()\n      });\n      })\n      })}\n      )).then(() => {\n          sender(fulldatacopy)\n      })\n    }\n\n    const sender = async(totaldata)=>{\n      console.log(\"DID IT\")\n      console.log(totaldata)\n      console.log(chartprices)\n      var slippagetoohigh = false;\n      var slippagelist = []\n      const multparse = (mult, nr, bal) => {\n        if(bal){\n          console.log(Number(parseFloat(mult * tokens).toFixed(nr)) - parseFloat(bal?.split(\" \")[0]))\n          return Number(parseFloat(mult * tokens).toFixed(nr)) - parseFloat(bal?.split(\" \")[0])\n        }\n      }\n      const reserveparse = (token, reserve) => {\n        return Number(parseFloat(token?.rows[0][reserve]))\n      }\n      const slippageparseflip = (token, mult, nr, balance) => {\n        const slippage = ((reserveparse(token, \"reserve1\") / reserveparse(token, \"reserve0\")) / ((reserveparse(token, \"reserve1\") / (reserveparse(token, \"reserve0\") + multparse(mult, nr, balance)))))\n        if ((slippage - 1) * 100 > 3) {\n          slippagelist.push({ token: token?.rows[0].reserve0.split(\" \")[1], amount: ((slippage - 1) * 100).toFixed(2) })\n          slippagetoohigh = true\n        }\n        return slippage\n      }\n      const slippageparse = (token, mult, nr, balance) => {\n        const slippage = ((reserveparse(token, \"reserve0\") / reserveparse(token, \"reserve1\")) / ((reserveparse(token, \"reserve0\") / (reserveparse(token, \"reserve1\") + multparse(mult, nr, balance)))))\n        if ((slippage - 1) * 100 > 3) {\n          slippagelist.push({ token: token?.rows[0].reserve1.split(\" \")[1], amount: ((slippage - 1) * 100).toFixed(2) })\n          slippagetoohigh = true\n        }\n        return slippage\n      }\n      totaldata.map((value, index)=>{\n        let buyamount;\n        if(value.defibox.rows[0].reserve0.split(\" \")[1] == \"EOS\"){\n          buyamount = (((reserveparse(value.defibox, \"reserve0\") / reserveparse(value.defibox, \"reserve1\")) * 1.003 * multparse(Number(value.minamount.split(\" \")[0]), value.token.split(\",\")[0], value.balance) * slippageparse(value.defibox, Number(value.minamount.split(\" \")[0]), value.token.split(\",\")[0], value.balance)) + 0.004).toFixed(4)\n        }else{\n          buyamount = (((reserveparse(value.defibox, \"reserve1\") / reserveparse(value.defibox, \"reserve0\")) * 1.003 * multparse(Number(value.minamount.split(\" \")[0]), value.token.split(\",\")[0], value.balance) * slippageparseflip(value.defibox, Number(value.minamount.split(\" \")[0]), value.token.split(\",\")[0], value.balance)) + 0.004).toFixed(4)\n        }\n        totaldata[index].buyamount = buyamount\n      })\n\n      if (activeUser) {\n        try {\n          const transaction = {\n            actions: []\n          };\n          totaldata.map((value, index)=>{\n            transaction.actions.push(\n              {\n                account: value.contract,\n                name: \"transfer\",\n                authorization: [\n                  {\n                    actor: displayaccountname(), // use account that was logged in\n                    permission: \"active\",\n                  },\n                ],\n                data: {\n                  from: displayaccountname(),\n                  to: \"consortiumtt\",\n                  //quantity: 19.2562 * tokens + \" DAPP\",\n                  memo: \"EOSETF creation through eosetf.io\",\n                  quantity: parseFloat(value.minamount.split(\" \")[0] * tokens).toFixed(value.token.split(\",\")[0]) + \" \" + value.token.split(\",\")[1],\n\n                },\n              }\n            )\n          })\n          if (buy == true) {\n            totaldata.map((value, index)=>{\n              if (multparse(value.minamount.split(\" \")[0], value.token.split(\",\")[0], value.balance) > 0) {\n                transaction.actions.unshift(\n                  {\n                    account: 'eosio.token',\n                    name: 'transfer',\n                    authorization: [\n                      {\n                        actor: displayaccountname(), // use account that was logged in\n                        permission: 'active',\n                      },\n                    ],\n                    data: {\n                      from: displayaccountname(),\n                      to: 'swap.defi',\n                      //quantity: 19.2562 * tokens + ' DAPP',\n                      memo: 'swap,0,' + value.strpairid,\n                      quantity: value.buyamount + ' EOS'\n  \n                    },\n                  }\n                )\n              }\n            })\n\n          }\n          // The activeUser.signTransaction will propose the passed in transaction to the logged in Authenticator\n          if (buy == false) {\n            await activeUser.signTransaction(transaction, {\n              broadcast: true,\n              expireSeconds: 300,\n            })\n            sucessstake()\n          }\n\n          if (buy == true && slippagetoohigh == false) {\n            await activeUser.signTransaction(transaction, {\n              broadcast: true,\n              expireSeconds: 300,\n            })\n            sucessstake()\n          }\n          else {\n            var slippagemessage = \"\";\n            if (Object.keys(slippagelist).length > 1) {\n              slippagelist.forEach((item) => {\n                slippagemessage = slippagemessage.concat(item.token, \"(\", item.amount, \"%), \")\n              })\n            }\n            else {\n              slippagemessage = slippagemessage.concat(slippagelist[0].token, \"(\", slippagelist[0].amount, \"%), \")\n            }\n\n            const message = \"Slippage was higher than 3% for: \" + slippagemessage.slice(0, -2) + \".\"\n\n            const Toast = Swal.mixin({\n              toast: true,\n              position: \"bottom-end\",\n              showConfirmButton: false,\n              timer: 6000,\n              timerProgressBar: true,\n              onOpen: (toast) => {\n                toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n                toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n              },\n            });\n            Toast.fire({\n              icon: \"error\",\n              title: message,\n            });\n          }\n        }\n        catch (error) {\n          console.log(error.message);\n          actionpuccis(\n            error.message\n          );\n        }\n      } else {\n        showModal();\n      }\n      \n    }\n\n  }\n\n\n  const sendetf = async () => {\n    const {\n      ual: { login, displayError, showModal },\n    } = props;\n    // Via static contextType = UALContext, access to the activeUser object on this.context is now available\n    const {\n      ual: { activeUser },\n    } = props;\n\n\n    var eosetf = Number(redeemtokens).toFixed(4);\n\n\n    if (activeUser) {\n      try {\n        const transaction = {\n          actions: [\n            {\n              account: \"consortiumtt\",\n              name: \"transfer\",\n              authorization: [\n                {\n                  actor: displayaccountname(), // use account that was logged in\n                  permission: \"active\",\n                },\n              ],\n              data: {\n                from: displayaccountname(),\n                to: \"consortiumtt\",\n                quantity: eosetf + \" EOSETF\",\n                memo: \"EOSETF redemption through eosetf.io\",\n              },\n            }\n\n          ],\n        };\n        // The activeUser.signTransaction will propose the passed in transaction to the logged in Authenticator\n        await activeUser.signTransaction(transaction, {\n          broadcast: true,\n          expireSeconds: 300,\n        });\n\n        sucessredemption();\n\n      } catch (error) {\n        console.log(error.message);\n        actionpuccis(\n          error.message\n        );\n      }\n    } else {\n      showModal();\n    }\n  };\n\n  const toggleDrawer = (open) => (event) => {\n    setDrawerstate(open);\n  };\n\n\n  return (\n\n    <div className=\"App\">\n\n      <header className=\"App-header\">\n        <div class=\"outsidebutton githubbutton\" onClick={() => window.open('https://github.com/n0umen0n/sceosetf', \"_blank\")}><img class=\"outsideimgright\" src=\"assets/github.png\" /><div class=\"outsidebuttontext\">GIT</div></div>\n        <div class=\"outsidebutton telegrambutton\" onClick={() => window.open('https://t.me/eosetf', \"_blank\")}><img class=\"outsideimgright\" src=\"assets/telegram.webp\" /><div class=\"outsidebuttontext\">TG</div></div>\n        <div class=\"outsidebutton twitterbutton\" onClick={() => window.open('https://twitter.com/CETF13', \"_blank\")}><img class=\"outsideimgright\" src=\"assets/twitter.png\" /><div class=\"outsidebuttontext\">TWIT</div></div>\n        <div class=\"outsidebutton mediumbutton\" onClick={() => window.open('https://medium.com/@eosetf', \"_blank\")}><img class=\"outsideimgright\" src=\"assets/med.png\" /><div class=\"outsidebuttontext\">MED</div></div>\n\n        <img src=\"assets/burger.svg\" class=\"menubutton\" onClick={toggleDrawer(true)} />\n        <div class=\"maincard\">\n          <div class=\"outsidebutton govrnbutton\" onClick={() => window.open('https://app.consortium.vote/community/zlmdhu2blclw', \"_blank\")}><img class=\"outsideimg\" src=\"assets/consologo.png\" /><div class=\"outsidebuttontext\">VOTE</div></div>\n          <div class=\"outsidebutton buybutton\" onClick={() => window.open('https://defibox.io/pool-market-details/1232', \"_blank\")}><img class=\"outsideimg\" src=\"assets/buylogo.png\" /><div class=\"outsidebuttontext\">BUY/SELL</div></div>\n          <Drawer\n            anchor=\"right\"\n            open={drawerstate}\n            onClose={toggleDrawer(false)}\n            onOpen={toggleDrawer(true)}\n            opacity=\"0.5\"\n          >\n            <div class=\"sidemenu\">\n              <div class=\"mobilemenu\">\n                <div class=\"logo\">\n                  <img width=\"64px\" src=\"assets/logo.svg\" />\n                </div>\n                <div class=\"appname\">\n                  <a>CETF</a>\n                </div>\n                <div class=\"accountname\">\n                  {accountname == \"\" ? <a>not logged in</a> : accountname}\n                </div>\n                <div class=\"menuitemswrapper\">\n                  <table class=\"menuitems\">\n                    <tr onClick={() => menuClick(\"create\")}>\n                      <td><img class=\"menuimg\" src=\"assets/productbox1.svg\" /></td>\n                      <td><a class=\"menuitemtext\">Create</a></td>\n                    </tr>\n                    <tr onClick={() => menuClick(\"redeem\")}>\n                      <td><img class=\"menuimg\" src=\"assets/productbox2.svg\" /></td>\n                      <td><a class=\"menuitemtext\">Redeem</a></td>\n                    </tr>\n                    <tr onClick={() => window.open('https://defibox.io/pool-market-details/1232', \"_blank\")}>\n                      <td><img class=\"menuimg\" src=\"assets/checkout.svg\" /></td>\n                      <td><a class=\"menuitemtext\">Buy</a></td>\n                    </tr>\n                    <tr onClick={() => window.open('https://app.consortium.vote/community/zlmdhu2blclw', \"_blank\")}>\n                      <td><img class=\"menuimg\" src=\"assets/govern.svg\" /></td>\n                      <td><a class=\"menuitemtext\">Govern</a></td>\n                    </tr>\n                    <tr onClick={() => window.location='https://polling.eosetf.io'}>\n                      <td><img class=\"menuimg\" src=\"assets/question.svg\" /></td>\n                      <td><a class=\"menuitemtext\">Poll</a></td>\n                    </tr>\n                    <tr onClick={() => menuClick(\"stats\")}>\n                      <td><img class=\"menuimg\" src=\"assets/stats.svg\" /></td>\n                      <td><a class=\"menuitemtext\">Statistics</a></td>\n                    </tr>\n                    <tr onClick={() => menuClick(\"about\")}>\n                      <td><img class=\"menuimg\" src=\"assets/briefcase.svg\" /></td>\n                      <td><a class=\"menuitemtext\">Tokens</a></td>\n                    </tr>\n                    <tr onClick={() => window.open('https://t.me/eosetf', \"_blank\")}>\n                      <td><img class=\"menuimg\" src=\"assets/telegram.svg\" /></td>\n                      <td><a class=\"menuitemtext\">Telegram</a></td>\n                    </tr>\n                    <tr onClick={() => window.open('https://github.com/n0umen0n/sceosetf', \"_blank\")}>\n                      <td><img class=\"menuimg\" src=\"assets/github.svg\" /></td>\n                      <td><a class=\"menuitemtext\">Github</a></td>\n                    </tr>\n                    {accountname == \"\" ?\n                      <tr onClick={() => showModal()}>\n                        <td><img class=\"menuimg\" src=\"assets/login.svg\" /></td>\n                        <td><a class=\"menuitemtext\">Login</a></td>\n                      </tr>\n                      :\n                      <tr onClick={() => logmeout()}>\n                        <td><img class=\"menuimg\" src=\"assets/logout.svg\" /></td>\n                        <td><a class=\"menuitemtext\">Logout</a></td>\n                      </tr>\n                    }\n                  </table>\n                </div>\n              </div>\n            </div>\n          </Drawer>\n          <div class=\"leftbar\">\n            <div class=\"logo\">\n              <img width=\"64px\" src=\"assets/logo.svg\" />\n            </div>\n            <div class=\"appname\">\n              <a>CETF</a>\n            </div>\n            <div class=\"accountname\">\n              {accountname == \"\" ? <a>Not logged in</a> : accountname}\n            </div>\n            <div class=\"menuitemswrapper\">\n              <table class=\"menuitems\">\n                <tr onClick={() => setView(\"create\")}>\n                  <td><img class=\"menuimg\" src=\"assets/productbox1.svg\" /></td>\n                  <td><a class=\"menuitemtext\">Create</a></td>\n                </tr>\n                <tr onClick={() => setView(\"redeem\")}>\n                  <td><img class=\"menuimg\" src=\"assets/productbox2.svg\" /></td>\n                  <td><a class=\"menuitemtext\">Redeem</a></td>\n                </tr>\n                <tr onClick={() => window.location='https://polling.eosetf.io'}>\n                  <td><img class=\"menuimg\" src=\"assets/question.svg\" /></td>\n                  <td><a class=\"menuitemtext\">Poll</a></td>\n                </tr>\n                <tr onClick={() => setView(\"stats\")}>\n                  <td><img class=\"menuimg\" src=\"assets/stats.svg\" /></td>\n                  <td><a class=\"menuitemtext\">Statistics</a></td>\n                </tr>\n                <tr onClick={() => setView(\"about\")}>\n                  <td><img class=\"menuimg\" src=\"assets/briefcase.svg\" /></td>\n                  <td><a class=\"menuitemtext\">Tokens</a></td>\n                </tr>\n                {accountname == \"\" ?\n                  <tr onClick={() => showModal()}>\n                    <td><img class=\"menuimg\" src=\"assets/login.svg\" /></td>\n                    <td><a class=\"menuitemtext\">Login</a></td>\n                  </tr>\n                  :\n                  <tr onClick={() => logmeout()}>\n                    <td><img class=\"menuimg\" src=\"assets/logout.svg\" /></td>\n                    <td><a class=\"menuitemtext\">Logout</a></td>\n                  </tr>\n                }\n              </table>\n            </div>\n          </div>\n          {view == \"create\" ?\n            <div class=\"rightbar\">\n              <div class=\"rightbartopbox\">\n                <div class=\"createetftitle\">\n                  <div>\n                    <a\n                    >\n\n                      Create EOSETF\n\n\n                    </a>\n                  </div>\n                </div>\n                <div className={classes.root}>\n                  <Accordion className={classes.expansion}>\n                    <AccordionSummary\n                      expandIcon={<ExpandMoreIcon />}\n                      aria-controls=\"panel1a-content\"\n                      id=\"panel1a-header\"\n                      className={classes.summary}\n                    >\n                      <Typography className={classes.heading}>Click here for more information</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails className={classes.expansion2}>\n                      <Scrollbars class=\"mask2\" style={{ width: \"100%\", height: \"25vh\" }} >\n                        <Typography className={classes.heading} style={{ \"padding-right\": \"10px\", \"padding-bottom\": \"34px\" }}>\n                          Creation involves transfer of tokens to cet.f account, the code is unaudited but there is multisig.\n                                        <br /> <br />To create EOSETF you have to own 13 different EOS mainnet tokens.\n                                        <br /> <br />BUY ALL AND CREATE - buys all the displayed tokens from Defibox and creates EOSETF.\n                                        <br /> <br />BUY MISSING AND CREATE - buys only the tokens you are missing from Defibox and creates EOSETF.\n                                        <br /> <br />Due to slippage, the displayed valuation of tokens might differ from autobuy purchase price, slippage protection is set to 3%, but please double-check the EOS being transferred before signing the transaction.\n                                        <br /> <br />After creation your account is issued EOSETF and CETF tokens (10 CETF per 1 EOSETF).\n                                        <br /> <br />CETF will be used as a governance and fee distribution token.\n                                      <br />  <br />At 80m CETF (4615 EOSETF / 3 halvings) no more CETF will be issued.\n                                      <br /> <br />Redemption fee is set to 5%\n                                          </Typography>\n                        <div style={{ \"display\": \"block\", \"opacity\": \"0\" }}>.<br />.<br />.</div>\n\n                      </Scrollbars>\n                      <div class=\"fade\" />\n                    </AccordionDetails>\n                  </Accordion>\n                </div>\n                <div class=\"slidertext\">\n                  <a>Creating <input style={{ \"color\": tokens > 200 ? \"red\" : \"inherit\" }} class=\"tokeninput\" type=\"number\" value={tokens} onChange={e => setTokens(e.target.value)}></input> EOSETF, consisting of tokens valued at <input class=\"eosvalue\" type=\"number\" value={parseFloat(tokens * etfprice).toFixed(2)}></input> EOS </a>\n                </div>\n                <div class=\"slider\">\n                  <CustomSlider\n                    defaultValue={0.0000}\n                    value={tokens}\n                    aria-label=\"custom thumb label\"\n                    step={1.0000}\n                    min={0}\n                    max={200.0000}\n                    onChangeCommitted={(e, val) => setTokens(val)}\n                    style={{\n                      marginBottom: \"10px\",\n                      \"margin-top\": \"10px\",\n                      color: \"white\",\n                    }}\n                  />\n                </div>\n              </div>\n              <Scrollbars class=\"mask\" style={{ width: \"100%\", height: \"90%\" }} autoHide >\n                <div class=\"rightbar\">\n                  {fulldata ? \n                  fulldata.map(row => (\n                    <div class=\"smallcard\" style={{ \"border\": (parseFloat(row.minamount.split(\" \")[0]) * tokens).toFixed(String(row.decimals).length-1) > getbalance(row) ? \"solid 2px red\" : \"none\" }}>\n                      <div class=\"tokenlogo\">\n                        <img class=\"tokenlogoimage\" height=\"100%\" src={row.image} />\n                      </div>\n                      <div class=\"smallcardtext\">\n                        <a>{(parseFloat(row.minamount.split(\" \")[0]) * tokens).toFixed(String(row.decimals).length-1)} {row.minamount.split(\" \")[1]} tokens</a>\n                      </div>\n                      <div class=\"trxbutton\">\n                      {(parseFloat(row.minamount.split(\" \")[0]) * tokens).toFixed(String(row.decimals).length-1) < getbalance(row) ?\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\n                        :\n                        <img class=\"trximage\" onClick={() => window.open(`https://defibox.io/pool-market-details/${row.pairid}`, \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\n                      }\n                    </div>\n                    </div>\n                  ))\n                  :\n                  <></>\n                  }\n                  <div style={{ \"display\": \"block\", \"opacity\": \"0\" }}>.<br />.<br />.</div>\n\n                </div>\n              </Scrollbars>\n              <div class=\"fade\" />\n              <div class=\"createbuttonwrapper\">\n                <button onClick={() => dynamicsend(true)} class=\"createbutton\">Buy missing and Create</button>\n                <button onClick={() => dynamicsend(false)} class=\"createbutton\">Buy all and Create</button>\n              </div>\n            </div>\n\n\n            : view == \"redeem\" ?\n              <div class=\"rightbar\">\n                <div class=\"rightbartopbox\">\n                  <div class=\"createetftitle\">\n                    <div>\n                      <a\n                      >\n\n                        Redeem tokens\n\n\n                      </a>\n                    </div>\n                  </div>\n                  <div className={classes.root}>\n                    <Accordion className={classes.expansion}>\n                      <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1a-content\"\n                        id=\"panel1a-header\"\n                        className={classes.summary}\n                      >\n                        <Typography className={classes.heading}>Click here for more information</Typography>\n                      </AccordionSummary>\n                      <AccordionDetails className={classes.expansion2}>\n                        <Typography className={classes.heading} style={{ \"padding-right\": \"10px\", \"padding-bottom\": \"46px\" }}>\n                          To redeem 13 tokens, EOSETF must be sent to cet.f account. <br /><br />\n                          Sent EOSETF tokens get burned.<br /><br />\n                        Redemption fee is set to 5%.\n                      </Typography>\n                      </AccordionDetails>\n                    </Accordion>\n                  </div>\n                  <div class=\"slidertext\">\n                    <a>You are redeeming <input class=\"tokeninput\" type=\"number\" value={redeemtokens} onChange={e => setRedeemtokens(e.target.value)}></input> EOSETF</a>\n                  </div>\n                  <div class=\"slider\">\n                    <CustomSlider\n                      defaultValue={0.0000}\n                      aria-label=\"custom thumb label\"\n                      step={1.0000}\n                      value={redeemtokens}\n                      min={0}\n                      max={200.0000}\n                      onChangeCommitted={(e, val) => setRedeemtokens(val)}\n                      style={{\n                        marginBottom: \"10px\",\n                        \"margin-top\": \"10px\",\n                        color: \"white\",\n                      }}\n                    />\n                  </div>\n                </div>\n                <Scrollbars class=\"mask\" style={{ width: \"100%\", height: \"90%\" }} autoHide >\n                  <div class=\"rightbar\">\n                  {fulldata ? \n                  fulldata.map(row => (\n                    <div class=\"smallcard\">\n                      <div class=\"tokenlogo\">\n                        <img class=\"tokenlogoimage\" height=\"100%\" src={row.image} />\n                      </div>\n                      <div class=\"smallcardtext\">\n                        <a>{(redeemtokens * row.minamount.split(\" \")[0] * redemptionfee).toFixed(String(row.decimals).length-1)} {row.minamount.split(\" \")[1]} tokens returned</a>\n                      </div>\n                      <div class=\"trxbutton\">\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\n                      </div>\n                    </div>\n                  ))\n                  :\n                  <></>\n                  }\n\n                    <div style={{ \"display\": \"block\", \"opacity\": \"0\" }}>.<br />.<br />.</div>\n\n                  </div>\n                </Scrollbars>\n                <div class=\"createbuttonwrapper\">\n                  <button class=\"createbutton\" onClick={() => sendetf()}>Redeem tokens</button>\n                </div>\n              </div>\n\n              : view == \"stats\" ?\n                <div class=\"rightbar\">\n                  <div class=\"rightbartopbox\">\n                    <div class=\"createetftitle\">\n                      <div>\n                        <a\n                        >\n\n                          Statistics\n                          <CachedIcon style={{ \"margin-left\": \"5px\", \"width\": \"24px\", \"height\": \"auto\", \"vertical-align\": \"middle\" }} onClick={() => refresher()} />\n                        </a>\n\n                      </div>\n                    </div>\n                    <div className={classes.root}>\n                      <Accordion className={classes.expansion}>\n                        <AccordionSummary\n                          expandIcon={<ExpandMoreIcon />}\n                          aria-controls=\"panel1a-content\"\n                          id=\"panel1a-header\"\n                          className={classes.summary}\n                        >\n                          <Typography className={classes.heading}>Click here for more information</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails className={classes.expansion2}>\n                          <Typography className={classes.heading}>\n                            Distribution of CETF will end when circulating supply of EOSETF will be 4615. <br />  <br />\n                          </Typography>\n                        </AccordionDetails>\n                      </Accordion>\n                    </div>\n                  </div>\n\n                  <Scrollbars class=\"mask\" style={{ width: \"80%\" }} autoHide >\n                    <div class=\"statcards\">\n                      <div class=\"statcard\">\n                        <a class=\"stat\">{gettokenbalanceone(eosetfbalanceind).toLocaleString()} EOSETF</a><a class=\"statexplainer\">My balance</a>\n                      </div>\n\n                      <div class=\"statcard\">\n                        <a class=\"stat\">{gettokenbalanceone(etfbalanceind).toLocaleString()} CETF</a><a class=\"statexplainer\">My balance</a>\n                      </div>\n\n                      <div class=\"statcard\">\n                        <a class=\"stat\">{gettokensupply(eosetfbalance).toLocaleString()} EOSETF</a><a class=\"statexplainer\">Circulating supply</a>\n                      </div>\n\n                      <div class=\"statcard\">\n                        <a class=\"stat\">{gettokensupply(etfbalance).toLocaleString()} CETF</a><a class=\"statexplainer\">Circulating supply (Max 80m)</a>\n                      </div>\n\n\n                      <div class=\"statcard\">\n                        <a class=\"stat\">{creationreward().toLocaleString()} CETF</a><a class=\"statexplainer\"> Issuance per 1 EOSTF</a>\n                      </div>\n                      <div class=\"statcard\">\n                        <a class=\"stat\">{halvings(gettokensupply(etfbalance)).toLocaleString()}</a><a class=\"statexplainer\">Halvings (Max 3)</a>\n                      </div>\n                      <div class=\"statcard\">\n                        <a class=\"stat\">{parseFloat(geteosetfprice().toFixed(2))} EOS</a><a class=\"statexplainer\">EOSETF price</a>\n                      </div>\n                      <div class=\"statcard\">\n                        <a class=\"stat\">{etfprice.toFixed(2)} EOS </a><a class=\"statexplainer\">Price of tokens bought separately</a>\n                      </div>\n                    </div>\n                    <div style={{ \"display\": \"block\", \"opacity\": \"0\" }}>.<br />.<br />.</div>\n\n                  </Scrollbars>\n                  <div class=\"fade\" />\n                </div>\n                : view == \"poll\" ?\n                  <Poll fulldata={fulldata}/>\n                  : view == \"about\" ?\n                    <div class=\"rightbar\">\n                      <div class=\"rightbartopbox\">\n\n                        <div class=\"createetftitle\">\n                          EOSETF token allocation\n                    </div>\n                        <div class=\"slidertext\">\n                          <a>Chart shows % (in USD) of each token in the fund</a>\n                        </div>\n                      </div>\n                      <div class=\"chartwrapper\">\n                        <Doughnut options={{ maintainAspectRatio: false, maxWidth: 300, height: \"auto\" }} responsive=\"true\" data={data1} legend={{ \"position\": \"bottom\" }} />\n                      </div>\n                    </div>\n\n                    : <a>Error</a>\n          }\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default withUAL(App);\n","/Users/vlad/Desktop/lennyetf/eosetfv2/src/Poll.js",["161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183"],"import './App.css';\nimport './Poll.css';\nimport { Slider } from '@material-ui/core';\nimport React, { useState, useEffect } from \"react\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport BarChart from './BarChart'\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withUAL } from \"ual-reactjs-renderer\";\nimport Swal from \"sweetalert2\";\nimport Select from 'react-select'\nimport makeAnimated from 'react-select/animated';\n\nconst animatedComponents = makeAnimated();\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontSize: \"14px\",\n    width: '100%',\n  },\n  progress: {\n    width: '100%',\n    fontSize: '10px'\n  },\n  heading: {\n    fontSize: \"14px\",\n    color: \"#534C80\",\n    fontFamily: \"'Roboto', sans-serif\",\n    margin: 0\n  },\n  summary: {\n    padding: 0,\n  },\n  expansion: {\n    backgroundColor: \"rgba( 255, 255, 255, 0 )\",\n    boxShadow: \"none\",\n    borderRadius: \"100px\",\n    marginLeft: 0,\n  },\n  expansion2: {\n    fontSize: \"10px\"\n  }\n}));\n\nconst CustomSlider = withStyles({\n  root: {\n    color: 'rgb(182, 188, 226)',\n    height: 8,\n  },\n  thumb: {\n    height: 12,\n    width: 12,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -4,\n    marginLeft: -4,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 4,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 4,\n    borderRadius: 4,\n  },\n})(Slider);\n\nfunction Poll(props) {\n  const classes = useStyles();\n  const [data, setData] = useState();\n  const [polldata, setpollData] = useState([]);\n  const [prices, setPrices] = useState();\n  const [percentages, setPercentages] = useState([]);\n  const [percentagesum, setPercentagesum] = useState();\n  const [allocationstate, setAllocationstate] = useState();\n  const [counter, setCounter] = useState();\n  const [chartdatastate, setChartdatastate] = useState();\n  const [options, setOptions] = useState([]);\n\n\n  const {\n    ual: { showModal, hideModal, activeUser, login, logout },\n  } = props;\n\n  if (activeUser) {\n    const accountName = activeUser.getAccountName();\n    accountName.then(function (result) {\n      setAccountName(result);\n    });\n  }\n  const displayaccountname = () => {\n    if (accountname) {\n      return accountname;\n    }\n  };\n\n  const [accountname, setAccountName] = useState(\"\")\n\n\n  const actionpuccis = (err) => {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: \"bottom-end\",\n      showConfirmButton: false,\n      timer: 5000,\n      timerProgressBar: true,\n      didOpen: (toast) => {\n        toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n        toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n      },\n    });\n    Toast.fire({\n      icon: \"error\",\n      title: err,\n    });\n  };\n\n\n  const sucessredemption = () => {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: \"bottom-end\",\n      showConfirmButton: false,\n      timer: 6000,\n      timerProgressBar: true,\n      onOpen: (toast) => {\n        toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n        toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n      },\n    });\n    Toast.fire({\n      icon: \"success\",\n      title: \"Sucessfully voted!\",\n    });\n  };\n\n  function LinearProgressWithLabel(props) {\n    return (\n      <Box display=\"flex\" alignItems=\"center\">\n        <Box width=\"100%\" mr={1}>\n          <LinearProgress variant=\"determinate\" {...props} />\n        </Box>\n        <Box minWidth={35}>\n          <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n            props.value,\n          )}%`}</Typography>\n        </Box>\n      </Box>\n    );\n  }\n\n  useEffect(() => {\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        json: true,\n        code: \"cet.f\",\n        table: \"etfinfo\",\n        scope: \"cet.f\",\n        limit: 100,\n      }),\n    }).then((response) =>\n      response.json().then((data) => setData(data.rows))\n    );\n  }, []);\n\n  useEffect(() => {\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        json: true,\n        code: \"consortiumlv\",\n        table: \"kysimused\",\n        scope: \"zlmdhu2blclw\",\n        lower_bound: 1111,\n        upper_bound: 1111,\n        limit: 1,\n      }),\n    }).then((response) =>\n      response.json().then((polldata) => setpollData(polldata.rows))\n    );\n  }, []);\n\n\n\n  useEffect(() => {\n    console.log(props.fulldata)\n    const newdexcomms = props.fulldata\n    //[{ community: \"box\", symbol: \"token.defi-box-eos\" }, { community: \"ogx\", symbol: \"core.ogx-ogx-eos\" }, { community: \"iq\", symbol: \"everipediaiq-iq-eos\" }\n    //  , { community: \"dapp\", symbol: \"dappservices-dapp-eos\" }, { community: \"vig\", symbol: \"vig111111111-vig-eos\" }, { community: \"efx\", symbol: \"effecttokens-efx-eos\" }, { community: \"chex\", symbol: \"chexchexchex-chex-eos\" }, { community: \"pizza\", symbol: \"pizzatotoken-pizza-eos\" }\n    //  , { community: \"dfs\", symbol: \"minedfstoken-dfs-eos\" }, { community: \"emt\", symbol: \"emanateoneos-emt-eos\" }, { community: \"dex\", symbol: \"token.newdex-dex-eos\" }, { community: \"tpt\", symbol: \"eosiotptoken-tpt-eos\" }, { community: \"dad\", symbol: \"dadtoken1111-dad-eos\" }]\n      newdexcomms.forEach((item) => {\n      fetch('https://api.newdex.io/v1/price?symbol=' + `${item.contract}-${item.token.split(\",\")[1]}-eos`)\n        .then(response => response.json())\n        .then(data => {\n          Object.assign(item, { price: data?.data?.price })\n          setPrices([...newdexcomms]);\n        }\n        )\n    })\n  }, []);\n\n\n\n  const sumValues = (obj) => Object.keys(obj).reduce((acc, value) => acc + Number(obj[value]), 0);\n\n  const sumpercentages = () => {\n    const sum = sumValues(percentages)\n    setPercentagesum(sum)\n  }\n\n\n  const cetfvote = async () => {\n    const {\n      ual: { login, displayError, showModal },\n    } = props;\n    // Via static contextType = UALContext, access to the activeUser object on this.context is now available\n    const {\n      ual: { activeUser },\n    } = props;\n\n\n    //var eosetf = Number(redeemtokens).toFixed(4);\n\n\n    if (activeUser) {\n      try {\n        const transaction = {\n          actions: [\n            {\n              account: \"consortiumlv\",\n              name: \"cetfvote\",\n              authorization: [\n                {\n                  actor: displayaccountname(), // use account that was logged in\n                  permission: \"active\",\n                },\n              ],\n              data: {\n                usersvote: [100, 130, 200, 300, 400, 44, 500, 200, 333, 500, 900, 1000, 300],\n                pollkey: 1111,\n                community: \"zlmdhu2blclw\",\n                voter: displayaccountname(),\n              },\n            },\n\n\n          ],\n        };\n        // The activeUser.signTransaction will propose the passed in transaction to the logged in Authenticator\n        await activeUser.signTransaction(transaction, {\n          broadcast: true,\n          expireSeconds: 300,\n        });\n\n        sucessredemption();\n        /*\n \n                ReactGA.event({\n                  category: \"Chain acion\",\n                  action: \"User redeemed tokens.\",\n                });\n        */\n        //alert(\"GREAT SUCCESS!\")\n        //window.location.reload(false);\n\n      } catch (error) {\n        console.log(error.message);\n        actionpuccis(\n          error.message\n        );\n      }\n    } else {\n      showModal();\n    }\n  };\n\n  const getmult = (token) => {\n    if (data) {\n      var result = data.filter(obj => {\n        return obj?.token?.split(\" \")[1].toLowerCase() == token?.toLowerCase()\n      })\n      var minamountdivider = Math.pow(10, result[0]?.token.match((/0/g) || []).length)\n      var multiplier = result[0]?.minamount / minamountdivider\n      return multiplier\n    }\n  }\n\n  const getallocation = (token) => {\n    const alloc = (getmult(token) * getprice(token) * 100 / getpricesum()).toFixed(4)\n    return alloc;\n  }\n\n  useEffect(() => {\n    if (data && prices) {\n      const chartdata = []\n      for (let i in data) {\n        const token = data[i].token.split(\" \")[1]\n        chartdata.push({ \"token\": token, \"Current\": allocationstate[token], \"Reallocated\": Math.floor(Math.random() * 10 + 3) })\n      }\n      setChartdatastate(chartdata)\n    }\n  }, [allocationstate])\n\n  useEffect(() => {\n    const allocations = []\n    const optionslist = []\n    for (let i in data) {\n      const token = data[i].token.split(\" \")[1]\n      const allocation = getallocation(token)\n      allocations[token] = allocation\n      if (allocation != \"NaN\") {\n        allocationchange(token, allocation)\n      }\n      if(allocation > 10){\n        optionslist[token] = allocation\n        optionslist.push({value:token, label:token})\n      }\n    }\n    setAllocationstate(allocations)\n    setOptions(optionslist)\n    setCounter(counter + 1)\n  }, [data, prices])\n\n  const getprice = (token) => {\n    if (prices) {\n      var result = prices.filter(obj => {\n        return obj?.community?.toLowerCase() == token?.toLowerCase()\n      })\n      if (result[0]) {\n        return result[0].price\n      }\n    }\n  }\n\n  const getpricesum = () => {\n    let sum = 0;\n    if (prices && data) {\n      for (let i in prices) {\n        const multiplication = Number(prices[i].price) * Number(getmult(prices[i].community))\n        sum += multiplication\n      }\n    }\n    return sum;\n  }\n\n  const allocationchange = (token, percentage) => {\n    const changedpercentages = percentages\n    changedpercentages[token] = Number(percentage)\n    setPercentages(...[changedpercentages])\n    sumpercentages()\n  }\n\n  const getpercentagesum = () => {\n    if (percentagesum) {\n      if (percentagesum <= 100 && percentagesum > 0) {\n        return <a style={{ \"color\": \"green\" }}>{`${percentagesum.toFixed(2)}%`}</a>\n      }\n      else return <a style={{ \"color\": \"red\" }}>{`${percentagesum.toFixed(2)}%`}</a>\n    }\n  }\n\n\n  const renderoptionadder = () => {\n    const handleChange = (values) => {\n      console.log(values)\n    }\n    return(\n      <div>\n      <Select options={options} components={animatedComponents} isMulti onChange={handleChange}/>\n      <button>Add tokens</button>\n      <a>{JSON.stringify(props.fulldata)}</a>\n      </div>\n    )\n  }\n\n  const rendercards = () => {\n    const cards = data?.map((d) =>\n      <div class=\"small-card\">\n        <a class=\"tokenname\">{d.token.split(\" \")[1]}</a>\n        <div class=\"input-wrapper\"><input key={counter} defaultValue={allocationstate[d.token.split(\" \")[1]]} class=\"tokenamount spinner\" onChange={event => allocationchange(d.token.split(\" \")[1], event.target.value)}></input></div>\n      </div>\n    );\n    return cards;\n  }\n\n  //ONCLICK VOTE \n\n  return (\n    <div class=\"right-bar\">\n      <div class=\"vote-titlearea\">\n        <div>\n          <a class=\"vote-title\">\n            Allocation voting\n                    </a>\n          <div class=\"totalnumber\">Your allocation total: {getpercentagesum()}</div>\n        </div>\n        <div class=\"votebutton\" onClick={() => cetfvote()}>Vote</div>\n\n      </div>\n\n      <Scrollbars class=\"mask2\" style={{ width: \"100%\", height: \"90%\" }} >\n        <div class=\"chartarea\">{chartdatastate ? <BarChart data={chartdatastate} /> : <CircularProgress />}</div>\n        <div>\n          {renderoptionadder()}\n        </div>\n        <div class=\"card-wrapper\">\n          {rendercards()}\n        </div>\n        <div style={{ \"display\": \"block\", \"opacity\": \"0\" }}>.<br />.<br />.</div>\n      </Scrollbars>\n      <div class=\"fade\" />\n    </div>\n  )\n}\n\nexport default withUAL(Poll);",{"ruleId":"184","severity":1,"message":"185","line":34,"column":7,"nodeType":"186","messageId":"187","endLine":34,"endColumn":14},{"ruleId":"184","severity":1,"message":"188","line":37,"column":7,"nodeType":"186","messageId":"187","endLine":37,"endColumn":13},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"184","severity":1,"message":"193","line":3,"column":10,"nodeType":"186","messageId":"187","endLine":3,"endColumn":16},{"ruleId":"184","severity":1,"message":"194","line":4,"column":17,"nodeType":"186","messageId":"187","endLine":4,"endColumn":25},{"ruleId":"184","severity":1,"message":"195","line":4,"column":27,"nodeType":"186","messageId":"187","endLine":4,"endColumn":36},{"ruleId":"184","severity":1,"message":"196","line":5,"column":10,"nodeType":"186","messageId":"187","endLine":5,"endColumn":20},{"ruleId":"184","severity":1,"message":"197","line":5,"column":22,"nodeType":"186","messageId":"187","endLine":5,"endColumn":32},{"ruleId":"184","severity":1,"message":"198","line":6,"column":8,"nodeType":"186","messageId":"187","endLine":6,"endColumn":22},{"ruleId":"184","severity":1,"message":"199","line":7,"column":8,"nodeType":"186","messageId":"187","endLine":7,"endColumn":18},{"ruleId":"184","severity":1,"message":"200","line":8,"column":8,"nodeType":"186","messageId":"187","endLine":8,"endColumn":11},{"ruleId":"184","severity":1,"message":"201","line":9,"column":10,"nodeType":"186","messageId":"187","endLine":9,"endColumn":20},{"ruleId":"184","severity":1,"message":"202","line":1,"column":8,"nodeType":"186","messageId":"187","endLine":1,"endColumn":12},{"ruleId":"184","severity":1,"message":"203","line":8,"column":8,"nodeType":"186","messageId":"187","endLine":8,"endColumn":20},{"ruleId":"184","severity":1,"message":"204","line":9,"column":8,"nodeType":"186","messageId":"187","endLine":9,"endColumn":16},{"ruleId":"184","severity":1,"message":"205","line":12,"column":8,"nodeType":"186","messageId":"187","endLine":12,"endColumn":15},{"ruleId":"184","severity":1,"message":"206","line":13,"column":10,"nodeType":"186","messageId":"187","endLine":13,"endColumn":13},{"ruleId":"184","severity":1,"message":"207","line":13,"column":15,"nodeType":"186","messageId":"187","endLine":13,"endColumn":18},{"ruleId":"184","severity":1,"message":"208","line":86,"column":23,"nodeType":"186","messageId":"187","endLine":86,"endColumn":32},{"ruleId":"184","severity":1,"message":"209","line":86,"column":46,"nodeType":"186","messageId":"187","endLine":86,"endColumn":51},{"ruleId":"184","severity":1,"message":"210","line":184,"column":10,"nodeType":"186","messageId":"187","endLine":184,"endColumn":20},{"ruleId":"184","severity":1,"message":"211","line":198,"column":10,"nodeType":"186","messageId":"187","endLine":198,"endColumn":24},{"ruleId":"184","severity":1,"message":"212","line":198,"column":26,"nodeType":"186","messageId":"187","endLine":198,"endColumn":43},{"ruleId":"184","severity":1,"message":"213","line":296,"column":9,"nodeType":"186","messageId":"187","endLine":296,"endColumn":20},{"ruleId":"214","severity":1,"message":"215","line":322,"column":49,"nodeType":"216","messageId":"217","endLine":322,"endColumn":51},{"ruleId":"218","severity":1,"message":"219","line":344,"column":56,"nodeType":"216","messageId":"220","endLine":344,"endColumn":57},{"ruleId":"184","severity":1,"message":"221","line":352,"column":17,"nodeType":"186","messageId":"187","endLine":352,"endColumn":33},{"ruleId":"222","severity":1,"message":"223","line":448,"column":28,"nodeType":"224","messageId":"225","endLine":448,"endColumn":30},{"ruleId":"226","severity":1,"message":"227","line":460,"column":5,"nodeType":"228","endLine":460,"endColumn":18,"suggestions":"229"},{"ruleId":"226","severity":1,"message":"230","line":479,"column":6,"nodeType":"228","endLine":479,"endColumn":19,"suggestions":"231"},{"ruleId":"226","severity":1,"message":"230","line":500,"column":6,"nodeType":"228","endLine":500,"endColumn":19,"suggestions":"232"},{"ruleId":"226","severity":1,"message":"230","line":522,"column":6,"nodeType":"228","endLine":522,"endColumn":19,"suggestions":"233"},{"ruleId":"184","severity":1,"message":"234","line":569,"column":9,"nodeType":"186","messageId":"187","endLine":569,"endColumn":24},{"ruleId":"184","severity":1,"message":"235","line":588,"column":9,"nodeType":"186","messageId":"187","endLine":588,"endColumn":27},{"ruleId":"184","severity":1,"message":"236","line":648,"column":9,"nodeType":"186","messageId":"187","endLine":648,"endColumn":16},{"ruleId":"222","severity":1,"message":"223","line":734,"column":35,"nodeType":"224","messageId":"225","endLine":734,"endColumn":37},{"ruleId":"214","severity":1,"message":"215","line":736,"column":57,"nodeType":"216","messageId":"217","endLine":736,"endColumn":59},{"ruleId":"222","severity":1,"message":"223","line":749,"column":39,"nodeType":"224","messageId":"225","endLine":749,"endColumn":41},{"ruleId":"214","severity":1,"message":"215","line":771,"column":19,"nodeType":"216","messageId":"217","endLine":771,"endColumn":21},{"ruleId":"222","severity":1,"message":"223","line":772,"column":41,"nodeType":"224","messageId":"225","endLine":772,"endColumn":43},{"ruleId":"214","severity":1,"message":"215","line":799,"column":19,"nodeType":"216","messageId":"217","endLine":799,"endColumn":21},{"ruleId":"214","severity":1,"message":"215","line":807,"column":19,"nodeType":"216","messageId":"217","endLine":807,"endColumn":21},{"ruleId":"214","severity":1,"message":"215","line":807,"column":46,"nodeType":"216","messageId":"217","endLine":807,"endColumn":48},{"ruleId":"184","severity":1,"message":"209","line":861,"column":14,"nodeType":"186","messageId":"187","endLine":861,"endColumn":19},{"ruleId":"184","severity":1,"message":"237","line":861,"column":21,"nodeType":"186","messageId":"187","endLine":861,"endColumn":33},{"ruleId":"238","severity":1,"message":"239","line":924,"column":127,"nodeType":"240","endLine":924,"endColumn":182},{"ruleId":"238","severity":1,"message":"239","line":925,"column":112,"nodeType":"240","endLine":925,"endColumn":170},{"ruleId":"238","severity":1,"message":"239","line":926,"column":118,"nodeType":"240","endLine":926,"endColumn":174},{"ruleId":"238","severity":1,"message":"239","line":927,"column":117,"nodeType":"240","endLine":927,"endColumn":169},{"ruleId":"238","severity":1,"message":"239","line":929,"column":9,"nodeType":"240","endLine":929,"endColumn":88},{"ruleId":"238","severity":1,"message":"239","line":931,"column":142,"nodeType":"240","endLine":931,"endColumn":195},{"ruleId":"238","severity":1,"message":"239","line":932,"column":133,"nodeType":"240","endLine":932,"endColumn":184},{"ruleId":"238","severity":1,"message":"239","line":943,"column":19,"nodeType":"240","endLine":943,"endColumn":61},{"ruleId":"241","severity":1,"message":"242","line":946,"column":19,"nodeType":"240","endLine":946,"endColumn":22},{"ruleId":"214","severity":1,"message":"215","line":949,"column":32,"nodeType":"216","messageId":"217","endLine":949,"endColumn":34},{"ruleId":"241","severity":1,"message":"242","line":949,"column":40,"nodeType":"240","endLine":949,"endColumn":43},{"ruleId":"238","severity":1,"message":"239","line":954,"column":27,"nodeType":"240","endLine":954,"endColumn":79},{"ruleId":"241","severity":1,"message":"242","line":955,"column":27,"nodeType":"240","endLine":955,"endColumn":51},{"ruleId":"238","severity":1,"message":"239","line":958,"column":27,"nodeType":"240","endLine":958,"endColumn":79},{"ruleId":"241","severity":1,"message":"242","line":959,"column":27,"nodeType":"240","endLine":959,"endColumn":51},{"ruleId":"238","severity":1,"message":"239","line":962,"column":27,"nodeType":"240","endLine":962,"endColumn":76},{"ruleId":"241","severity":1,"message":"242","line":963,"column":27,"nodeType":"240","endLine":963,"endColumn":51},{"ruleId":"238","severity":1,"message":"239","line":966,"column":27,"nodeType":"240","endLine":966,"endColumn":74},{"ruleId":"241","severity":1,"message":"242","line":967,"column":27,"nodeType":"240","endLine":967,"endColumn":51},{"ruleId":"238","severity":1,"message":"239","line":970,"column":27,"nodeType":"240","endLine":970,"endColumn":76},{"ruleId":"241","severity":1,"message":"242","line":971,"column":27,"nodeType":"240","endLine":971,"endColumn":51},{"ruleId":"238","severity":1,"message":"239","line":974,"column":27,"nodeType":"240","endLine":974,"endColumn":73},{"ruleId":"241","severity":1,"message":"242","line":975,"column":27,"nodeType":"240","endLine":975,"endColumn":51},{"ruleId":"238","severity":1,"message":"239","line":978,"column":27,"nodeType":"240","endLine":978,"endColumn":77},{"ruleId":"241","severity":1,"message":"242","line":979,"column":27,"nodeType":"240","endLine":979,"endColumn":51},{"ruleId":"238","severity":1,"message":"239","line":982,"column":27,"nodeType":"240","endLine":982,"endColumn":76},{"ruleId":"241","severity":1,"message":"242","line":983,"column":27,"nodeType":"240","endLine":983,"endColumn":51},{"ruleId":"238","severity":1,"message":"239","line":986,"column":27,"nodeType":"240","endLine":986,"endColumn":74},{"ruleId":"241","severity":1,"message":"242","line":987,"column":27,"nodeType":"240","endLine":987,"endColumn":51},{"ruleId":"214","severity":1,"message":"215","line":989,"column":34,"nodeType":"216","messageId":"217","endLine":989,"endColumn":36},{"ruleId":"238","severity":1,"message":"239","line":991,"column":29,"nodeType":"240","endLine":991,"endColumn":75},{"ruleId":"241","severity":1,"message":"242","line":992,"column":29,"nodeType":"240","endLine":992,"endColumn":53},{"ruleId":"238","severity":1,"message":"239","line":996,"column":29,"nodeType":"240","endLine":996,"endColumn":76},{"ruleId":"241","severity":1,"message":"242","line":997,"column":29,"nodeType":"240","endLine":997,"endColumn":53},{"ruleId":"238","severity":1,"message":"239","line":1007,"column":15,"nodeType":"240","endLine":1007,"endColumn":57},{"ruleId":"241","severity":1,"message":"242","line":1010,"column":15,"nodeType":"240","endLine":1010,"endColumn":18},{"ruleId":"214","severity":1,"message":"215","line":1013,"column":28,"nodeType":"216","messageId":"217","endLine":1013,"endColumn":30},{"ruleId":"241","severity":1,"message":"242","line":1013,"column":36,"nodeType":"240","endLine":1013,"endColumn":39},{"ruleId":"238","severity":1,"message":"239","line":1018,"column":23,"nodeType":"240","endLine":1018,"endColumn":75},{"ruleId":"241","severity":1,"message":"242","line":1019,"column":23,"nodeType":"240","endLine":1019,"endColumn":47},{"ruleId":"238","severity":1,"message":"239","line":1022,"column":23,"nodeType":"240","endLine":1022,"endColumn":75},{"ruleId":"241","severity":1,"message":"242","line":1023,"column":23,"nodeType":"240","endLine":1023,"endColumn":47},{"ruleId":"238","severity":1,"message":"239","line":1026,"column":23,"nodeType":"240","endLine":1026,"endColumn":72},{"ruleId":"241","severity":1,"message":"242","line":1027,"column":23,"nodeType":"240","endLine":1027,"endColumn":47},{"ruleId":"238","severity":1,"message":"239","line":1030,"column":23,"nodeType":"240","endLine":1030,"endColumn":69},{"ruleId":"241","severity":1,"message":"242","line":1031,"column":23,"nodeType":"240","endLine":1031,"endColumn":47},{"ruleId":"238","severity":1,"message":"239","line":1034,"column":23,"nodeType":"240","endLine":1034,"endColumn":73},{"ruleId":"241","severity":1,"message":"242","line":1035,"column":23,"nodeType":"240","endLine":1035,"endColumn":47},{"ruleId":"214","severity":1,"message":"215","line":1037,"column":30,"nodeType":"216","messageId":"217","endLine":1037,"endColumn":32},{"ruleId":"238","severity":1,"message":"239","line":1039,"column":25,"nodeType":"240","endLine":1039,"endColumn":71},{"ruleId":"241","severity":1,"message":"242","line":1040,"column":25,"nodeType":"240","endLine":1040,"endColumn":49},{"ruleId":"238","severity":1,"message":"239","line":1044,"column":25,"nodeType":"240","endLine":1044,"endColumn":72},{"ruleId":"241","severity":1,"message":"242","line":1045,"column":25,"nodeType":"240","endLine":1045,"endColumn":49},{"ruleId":"214","severity":1,"message":"215","line":1051,"column":17,"nodeType":"216","messageId":"217","endLine":1051,"endColumn":19},{"ruleId":"241","severity":1,"message":"242","line":1056,"column":21,"nodeType":"240","endLine":1057,"endColumn":22},{"ruleId":"241","severity":1,"message":"242","line":1096,"column":19,"nodeType":"240","endLine":1096,"endColumn":22},{"ruleId":"238","severity":1,"message":"239","line":1121,"column":25,"nodeType":"240","endLine":1121,"endColumn":85},{"ruleId":"241","severity":1,"message":"242","line":1124,"column":25,"nodeType":"240","endLine":1124,"endColumn":28},{"ruleId":"238","severity":1,"message":"239","line":1128,"column":25,"nodeType":"240","endLine":1128,"endColumn":85},{"ruleId":"238","severity":1,"message":"239","line":1130,"column":25,"nodeType":"240","endLine":1130,"endColumn":185},{"ruleId":"214","severity":1,"message":"215","line":1150,"column":20,"nodeType":"216","messageId":"217","endLine":1150,"endColumn":22},{"ruleId":"241","severity":1,"message":"242","line":1155,"column":23,"nodeType":"240","endLine":1156,"endColumn":24},{"ruleId":"241","severity":1,"message":"242","line":1184,"column":21,"nodeType":"240","endLine":1184,"endColumn":24},{"ruleId":"238","severity":1,"message":"239","line":1209,"column":25,"nodeType":"240","endLine":1209,"endColumn":85},{"ruleId":"241","severity":1,"message":"242","line":1212,"column":25,"nodeType":"240","endLine":1212,"endColumn":28},{"ruleId":"238","severity":1,"message":"239","line":1215,"column":25,"nodeType":"240","endLine":1215,"endColumn":85},{"ruleId":"214","severity":1,"message":"215","line":1232,"column":22,"nodeType":"216","messageId":"217","endLine":1232,"endColumn":24},{"ruleId":"241","severity":1,"message":"242","line":1237,"column":25,"nodeType":"240","endLine":1238,"endColumn":26},{"ruleId":"241","severity":1,"message":"242","line":1268,"column":25,"nodeType":"240","endLine":1268,"endColumn":41},{"ruleId":"241","severity":1,"message":"242","line":1268,"column":107,"nodeType":"240","endLine":1268,"endColumn":132},{"ruleId":"241","severity":1,"message":"242","line":1272,"column":25,"nodeType":"240","endLine":1272,"endColumn":41},{"ruleId":"241","severity":1,"message":"242","line":1272,"column":102,"nodeType":"240","endLine":1272,"endColumn":127},{"ruleId":"241","severity":1,"message":"242","line":1276,"column":25,"nodeType":"240","endLine":1276,"endColumn":41},{"ruleId":"241","severity":1,"message":"242","line":1276,"column":100,"nodeType":"240","endLine":1276,"endColumn":125},{"ruleId":"241","severity":1,"message":"242","line":1280,"column":25,"nodeType":"240","endLine":1280,"endColumn":41},{"ruleId":"241","severity":1,"message":"242","line":1280,"column":95,"nodeType":"240","endLine":1280,"endColumn":120},{"ruleId":"241","severity":1,"message":"242","line":1285,"column":25,"nodeType":"240","endLine":1285,"endColumn":41},{"ruleId":"241","severity":1,"message":"242","line":1285,"column":85,"nodeType":"240","endLine":1285,"endColumn":110},{"ruleId":"241","severity":1,"message":"242","line":1288,"column":25,"nodeType":"240","endLine":1288,"endColumn":41},{"ruleId":"241","severity":1,"message":"242","line":1288,"column":100,"nodeType":"240","endLine":1288,"endColumn":125},{"ruleId":"241","severity":1,"message":"242","line":1291,"column":25,"nodeType":"240","endLine":1291,"endColumn":41},{"ruleId":"241","severity":1,"message":"242","line":1291,"column":90,"nodeType":"240","endLine":1291,"endColumn":115},{"ruleId":"241","severity":1,"message":"242","line":1294,"column":25,"nodeType":"240","endLine":1294,"endColumn":41},{"ruleId":"241","severity":1,"message":"242","line":1294,"column":71,"nodeType":"240","endLine":1294,"endColumn":96},{"ruleId":"214","severity":1,"message":"215","line":1302,"column":24,"nodeType":"216","messageId":"217","endLine":1302,"endColumn":26},{"ruleId":"214","severity":1,"message":"215","line":1304,"column":26,"nodeType":"216","messageId":"217","endLine":1304,"endColumn":28},{"ruleId":"241","severity":1,"message":"242","line":1312,"column":27,"nodeType":"240","endLine":1312,"endColumn":30},{"ruleId":"241","severity":1,"message":"242","line":1320,"column":23,"nodeType":"240","endLine":1320,"endColumn":26},{"ruleId":"184","severity":1,"message":"243","line":11,"column":8,"nodeType":"186","messageId":"187","endLine":11,"endColumn":17},{"ruleId":"184","severity":1,"message":"244","line":51,"column":7,"nodeType":"186","messageId":"187","endLine":51,"endColumn":19},{"ruleId":"184","severity":1,"message":"245","line":82,"column":9,"nodeType":"186","messageId":"187","endLine":82,"endColumn":16},{"ruleId":"184","severity":1,"message":"246","line":84,"column":10,"nodeType":"186","messageId":"187","endLine":84,"endColumn":18},{"ruleId":"184","severity":1,"message":"247","line":95,"column":12,"nodeType":"186","messageId":"187","endLine":95,"endColumn":21},{"ruleId":"184","severity":1,"message":"208","line":95,"column":23,"nodeType":"186","messageId":"187","endLine":95,"endColumn":32},{"ruleId":"184","severity":1,"message":"209","line":95,"column":46,"nodeType":"186","messageId":"187","endLine":95,"endColumn":51},{"ruleId":"184","severity":1,"message":"248","line":95,"column":53,"nodeType":"186","messageId":"187","endLine":95,"endColumn":59},{"ruleId":"184","severity":1,"message":"249","line":150,"column":12,"nodeType":"186","messageId":"187","endLine":150,"endColumn":35},{"ruleId":"218","severity":1,"message":"219","line":214,"column":54,"nodeType":"216","messageId":"220","endLine":214,"endColumn":55},{"ruleId":"226","severity":1,"message":"250","line":222,"column":6,"nodeType":"228","endLine":222,"endColumn":8,"suggestions":"251"},{"ruleId":"184","severity":1,"message":"209","line":236,"column":14,"nodeType":"186","messageId":"187","endLine":236,"endColumn":19},{"ruleId":"184","severity":1,"message":"237","line":236,"column":21,"nodeType":"186","messageId":"187","endLine":236,"endColumn":33},{"ruleId":"214","severity":1,"message":"215","line":302,"column":56,"nodeType":"216","messageId":"217","endLine":302,"endColumn":58},{"ruleId":"226","severity":1,"message":"252","line":324,"column":6,"nodeType":"228","endLine":324,"endColumn":23,"suggestions":"253"},{"ruleId":"214","severity":1,"message":"254","line":333,"column":22,"nodeType":"216","messageId":"217","endLine":333,"endColumn":24},{"ruleId":"226","severity":1,"message":"255","line":344,"column":6,"nodeType":"228","endLine":344,"endColumn":20,"suggestions":"256"},{"ruleId":"214","severity":1,"message":"215","line":349,"column":46,"nodeType":"216","messageId":"217","endLine":349,"endColumn":48},{"ruleId":"241","severity":1,"message":"242","line":378,"column":16,"nodeType":"240","endLine":378,"endColumn":48},{"ruleId":"241","severity":1,"message":"242","line":380,"column":19,"nodeType":"240","endLine":380,"endColumn":49},{"ruleId":"241","severity":1,"message":"242","line":393,"column":7,"nodeType":"240","endLine":393,"endColumn":10},{"ruleId":"241","severity":1,"message":"242","line":401,"column":9,"nodeType":"240","endLine":401,"endColumn":30},{"ruleId":"241","severity":1,"message":"242","line":414,"column":11,"nodeType":"240","endLine":414,"endColumn":33},"no-unused-vars","'scatter' is assigned a value but never used.","Identifier","unusedVar","'wombat' is assigned a value but never used.","no-native-reassign",["257"],"no-negated-in-lhs",["258"],"'Slider' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'withStyles' is defined but never used.","'makeStyles' is defined but never used.","'LinearProgress' is defined but never used.","'Typography' is defined but never used.","'Box' is defined but never used.","'Scrollbars' is defined but never used.","'logo' is defined but never used.","'ReactTooltip' is defined but never used.","'InfoIcon' is defined but never used.","'ReactGA' is defined but never used.","'Bar' is defined but never used.","'Pie' is defined but never used.","'hideModal' is assigned a value but never used.","'login' is assigned a value but never used.","'govrnprice' is assigned a value but never used.","'fulldataprices' is assigned a value but never used.","'setFulldataprices' is assigned a value but never used.","'getpricesum' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'eosetfpricearray' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'displayaccountname' and 'prices'. Either include them or remove the dependency array.","ArrayExpression",["259"],"React Hook useEffect has a missing dependency: 'displayaccountname'. Either include it or remove the dependency array.",["260"],["261"],["262"],"'gettokenbalance' is assigned a value but never used.","'gettokenbalancetwo' is assigned a value but never used.","'alldata' is assigned a value but never used.","'displayError' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'TextField' is defined but never used.","'CustomSlider' is assigned a value but never used.","'classes' is assigned a value but never used.","'polldata' is assigned a value but never used.","'showModal' is assigned a value but never used.","'logout' is assigned a value but never used.","'LinearProgressWithLabel' is defined but never used.","React Hook useEffect has a missing dependency: 'props.fulldata'. Either include it or remove the dependency array.",["263"],"React Hook useEffect has missing dependencies: 'data' and 'prices'. Either include them or remove the dependency array.",["264"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'allocationchange', 'counter', and 'getallocation'. Either include them or remove the dependency array. You can also do a functional update 'setCounter(c => ...)' if you only need 'counter' in the 'setCounter' call.",["265"],"no-global-assign","no-unsafe-negation",{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"268","fix":"270"},{"desc":"268","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},"Update the dependencies array to be: [accountname, displayaccountname, prices]",{"range":"278","text":"279"},"Update the dependencies array to be: [accountname, displayaccountname]",{"range":"280","text":"281"},{"range":"282","text":"281"},{"range":"283","text":"281"},"Update the dependencies array to be: [props.fulldata]",{"range":"284","text":"285"},"Update the dependencies array to be: [allocationstate, data, prices]",{"range":"286","text":"287"},"Update the dependencies array to be: [allocationchange, counter, data, getallocation, prices]",{"range":"288","text":"289"},[12754,12767],"[accountname, displayaccountname, prices]",[13272,13285],"[accountname, displayaccountname]",[13849,13862],[14440,14453],[6170,6172],"[props.fulldata]",[8898,8915],"[allocationstate, data, prices]",[9466,9480],"[allocationchange, counter, data, getallocation, prices]"]