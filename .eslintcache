[{"/Users/vlad/Desktop/lennyetf/eosetfv2/src/index.js":"1","/Users/vlad/Desktop/lennyetf/eosetfv2/src/reportWebVitals.js":"2","/Users/vlad/Desktop/lennyetf/eosetfv2/src/App.js":"3"},{"size":1272,"mtime":1610316645020,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1610316645021,"results":"6","hashOfConfig":"5"},{"size":9532,"mtime":1610320297207,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"187o1g5",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":43,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/Users/vlad/Desktop/lennyetf/eosetfv2/src/index.js",[],["16","17"],"/Users/vlad/Desktop/lennyetf/eosetfv2/src/reportWebVitals.js",[],"/Users/vlad/Desktop/lennyetf/eosetfv2/src/App.js",["18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60"],"import logo from './logo.svg';\nimport './App.css';\nimport { Slider } from '@material-ui/core';\nimport React, { useState, useEffect } from \"react\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { withUAL } from \"ual-reactjs-renderer\";\n\nconst CustomSlider = withStyles({\n  root: {\n    color: '#52af77',\n    height: 8,\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\n\nfunction App(props) {\n  const {\n    ual: { showModal, hideModal, activeUser, login, logout },\n  } = props;\n  if (activeUser) {\n    const accountName = activeUser.getAccountName();\n    accountName.then(function (result) {\n      setAccountName(result);\n    });\n  }\n  const displayaccountname = () => {\n    if (accountname) {\n      return accountname;\n    }\n  };\n  const [tokens, setTokens] = useState(1)\n  const [accountname, setAccountName] = useState(\"\")\n\n  const logmeout = () => {\n    logout()\n    setAccountName(\"\")\n  }\n\n\n  const send = async () => {\n    const {\n      ual: { login, displayError, showModal },\n    } = props;\n    // Via static contextType = UALContext, access to the activeUser object on this.context is now available\n    const {\n      ual: { activeUser },\n    } = props;\n\n    var efx = tokens.toFixed(4);\n\n    if (activeUser) {\n      try {\n        const transaction = {\n          actions: [\n            {\n              account: \"dappservices\",\n              name: \"transfer\",\n              authorization: [\n                {\n                  actor: displayaccountname(), // use account that was logged in\n                  permission: \"active\",\n                },\n              ],\n              data: {\n                from: displayaccountname(),\n                to: \"consortiumtt\",\n                quantity: 2.1563 * tokens + \" DAPP\",\n                memo: \"test\",\n\n              },\n            },\n\n\n            {\n              account: \"effecttokens\",\n              name: \"transfer\",\n              authorization: [\n                {\n                  actor: displayaccountname(), // use account that was logged in\n                  permission: \"active\",\n                },\n              ],\n              data: {\n                from: displayaccountname(),\n                to: \"consortiumtt\",\n                quantity: efx + \" EFX\",\n                memo: \"test2\",\n\n              },\n            },\n\n\n          ],\n        };\n        // The activeUser.signTransaction will propose the passed in transaction to the logged in Authenticator\n        await activeUser.signTransaction(transaction, {\n          broadcast: true,\n          expireSeconds: 300,\n        });\n        //alert(\"GREAT SUCCESS!\")\n        window.location.reload(false);\n\n      } catch (error) {\n        //if (error.message.startsWith(\"TypeError: Cannot\") == true) {\n\n      }\n    } else {\n      showModal();\n    }\n  };\n\n\n\n\n  const sendetf = async () => {\n    const {\n      ual: { login, displayError, showModal },\n    } = props;\n    // Via static contextType = UALContext, access to the activeUser object on this.context is now available\n    const {\n      ual: { activeUser },\n    } = props;\n\n\n    var eosetf = tokens.toFixed(4);\n\n\n    if (activeUser) {\n      try {\n        const transaction = {\n          actions: [\n            {\n              account: \"consortiumtt\",\n              name: \"transfer\",\n              authorization: [\n                {\n                  actor: displayaccountname(), // use account that was logged in\n                  permission: \"active\",\n                },\n              ],\n              data: {\n                from: displayaccountname(),\n                to: \"consortiumtt\",\n                quantity: eosetf + \" EOSETF\",\n                memo: \"test\",\n\n              },\n            },\n\n\n          ],\n        };\n        // The activeUser.signTransaction will propose the passed in transaction to the logged in Authenticator\n        await activeUser.signTransaction(transaction, {\n          broadcast: true,\n          expireSeconds: 300,\n        });\n        //alert(\"GREAT SUCCESS!\")\n        window.location.reload(false);\n\n      } catch (error) {\n        //if (error.message.startsWith(\"TypeError: Cannot\") == true) {\n\n      }\n    } else {\n      showModal();\n    }\n  };\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div class=\"maincard\">\n\n          <div class=\"leftbar\">\n            <div class=\"logo\">\n              <img width=\"64px\" src=\"assets/logo.svg\" />\n            </div>\n            <div class=\"appname\">\n              <a>EOSETF</a>\n            </div>\n            <div class=\"accountname\">\n              {accountname == \"\" ? <a>not signed in</a> : accountname}\n            </div>\n            <div class=\"menuitemswrapper\">\n              <table class=\"menuitems\">\n                <tr onClick={() => send()}>\n                  <td><img class=\"menuimg\" src=\"assets/productbox1.svg\" /></td>\n                  <td><a class=\"menuitemtext\">Create</a></td>\n                </tr>\n                <tr onClick={() => sendetf()}>\n                  <td><img class=\"menuimg\" src=\"assets/productbox2.svg\" /></td>\n                  <td><a class=\"menuitemtext\">Redeem</a></td>\n                </tr>\n                <tr>\n                  <td><img class=\"menuimg\" src=\"assets/checkout.svg\" /></td>\n                  <td><a class=\"menuitemtext\">Buy</a></td>\n                </tr>\n                {accountname == \"\" ?\n                  <tr onClick={() => showModal()}>\n                    <td><img class=\"menuimg\" src=\"assets/login.svg\" /></td>\n                    <td><a class=\"menuitemtext\">Login</a></td>\n                  </tr>\n                  :\n                  <tr onClick={() => logmeout()}>\n                    <td><img class=\"menuimg\" src=\"assets/logout.svg\" /></td>\n                    <td><a class=\"menuitemtext\">Logout</a></td>\n                  </tr>\n                }\n              </table>\n            </div>\n          </div>\n\n          <div class=\"rightbar\">\n            <div class=\"rightbartopbox\">\n              <div class=\"createetftitle\">\n                <a>Create EOSETF</a>\n              </div>\n              <div class=\"slidertext\">\n                <a>You are creating <a class=\"highlighttext\">{tokens}</a> EOSETF.</a>\n              </div>\n              <div class=\"slider\">\n                <CustomSlider\n                  defaultValue={1.0000}\n                  aria-label=\"custom thumb label\"\n                  step={1.0000}\n                  min={0}\n                  max={10.0000}\n                  onChangeCommitted={(e, val) => setTokens(val)}\n                  style={{\n                    marginBottom: \"10px\",\n                    \"margin-top\": \"10px\",\n                    color: \"white\",\n                  }}\n                />\n              </div>\n            </div>\n\n            <div class=\"smallcard\">\n              <div class=\"tokenlogo\">\n                <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\n              </div>\n              <div class=\"smallcardtext\">\n                <a>You have: 200 DAPP tokens</a><br />\n                <a>You need to send: 100 DAPP tokens</a>\n              </div>\n              <div class=\"trxbutton\">\n                <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/connection.svg\" />\n              </div>\n            </div>\n\n            <div class=\"smallcard\">\n              <div class=\"tokenlogo\">\n                <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\n              </div>\n              <div class=\"smallcardtext\">\n                <a>You have: 200 DAPP tokens</a><br />\n                <a>You need to send: 100 DAPP tokens</a>\n              </div>\n              <div class=\"trxbutton\">\n                <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/connection.svg\" />\n              </div>\n            </div>\n\n            <div class=\"smallcard\">\n              <div class=\"tokenlogo\">\n                <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\n              </div>\n              <div class=\"smallcardtext\">\n                <a>You have: 200 DAPP tokens</a><br />\n                <a>You need to send: 100 DAPP tokens</a>\n              </div>\n              <div class=\"trxbutton\">\n                <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/connection.svg\" />\n              </div>\n            </div>\n\n            <div class=\"smallcard\">\n              <div class=\"tokenlogo\">\n                <img class=\"tokenlogoimage\" height=\"100%\" src=\"https://assets.coingecko.com/coins/images/8116/large/dapp-logo.jpg?1554996565\" />\n              </div>\n              <div class=\"smallcardtext\">\n                <a>You have: 200 DAPP tokens</a><br />\n                <a>You need to send: 100 DAPP tokens</a>\n              </div>\n              <div class=\"trxbutton\">\n                <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/connection.svg\" />\n              </div>\n            </div>\n\n          </div>\n\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default withUAL(App);\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":8,"nodeType":"67","messageId":"68","endLine":1,"endColumn":12},{"ruleId":"65","severity":1,"message":"69","line":4,"column":27,"nodeType":"67","messageId":"68","endLine":4,"endColumn":36},{"ruleId":"65","severity":1,"message":"70","line":5,"column":22,"nodeType":"67","messageId":"68","endLine":5,"endColumn":32},{"ruleId":"65","severity":1,"message":"71","line":40,"column":23,"nodeType":"67","messageId":"68","endLine":40,"endColumn":32},{"ruleId":"65","severity":1,"message":"72","line":40,"column":46,"nodeType":"67","messageId":"68","endLine":40,"endColumn":51},{"ruleId":"65","severity":1,"message":"72","line":64,"column":14,"nodeType":"67","messageId":"68","endLine":64,"endColumn":19},{"ruleId":"65","severity":1,"message":"73","line":64,"column":21,"nodeType":"67","messageId":"68","endLine":64,"endColumn":33},{"ruleId":"65","severity":1,"message":"72","line":139,"column":14,"nodeType":"67","messageId":"68","endLine":139,"endColumn":19},{"ruleId":"65","severity":1,"message":"73","line":139,"column":21,"nodeType":"67","messageId":"68","endLine":139,"endColumn":33},{"ruleId":"74","severity":1,"message":"75","line":200,"column":15,"nodeType":"76","endLine":200,"endColumn":57},{"ruleId":"77","severity":1,"message":"78","line":203,"column":15,"nodeType":"76","endLine":203,"endColumn":18},{"ruleId":"79","severity":1,"message":"80","line":206,"column":28,"nodeType":"81","messageId":"82","endLine":206,"endColumn":30},{"ruleId":"77","severity":1,"message":"78","line":206,"column":36,"nodeType":"76","endLine":206,"endColumn":39},{"ruleId":"74","severity":1,"message":"75","line":211,"column":23,"nodeType":"76","endLine":211,"endColumn":75},{"ruleId":"77","severity":1,"message":"78","line":212,"column":23,"nodeType":"76","endLine":212,"endColumn":47},{"ruleId":"74","severity":1,"message":"75","line":215,"column":23,"nodeType":"76","endLine":215,"endColumn":75},{"ruleId":"77","severity":1,"message":"78","line":216,"column":23,"nodeType":"76","endLine":216,"endColumn":47},{"ruleId":"74","severity":1,"message":"75","line":219,"column":23,"nodeType":"76","endLine":219,"endColumn":72},{"ruleId":"77","severity":1,"message":"78","line":220,"column":23,"nodeType":"76","endLine":220,"endColumn":47},{"ruleId":"79","severity":1,"message":"80","line":222,"column":30,"nodeType":"81","messageId":"82","endLine":222,"endColumn":32},{"ruleId":"74","severity":1,"message":"75","line":224,"column":25,"nodeType":"76","endLine":224,"endColumn":71},{"ruleId":"77","severity":1,"message":"78","line":225,"column":25,"nodeType":"76","endLine":225,"endColumn":49},{"ruleId":"74","severity":1,"message":"75","line":229,"column":25,"nodeType":"76","endLine":229,"endColumn":72},{"ruleId":"77","severity":1,"message":"78","line":230,"column":25,"nodeType":"76","endLine":230,"endColumn":49},{"ruleId":"77","severity":1,"message":"78","line":240,"column":17,"nodeType":"76","endLine":240,"endColumn":20},{"ruleId":"77","severity":1,"message":"78","line":243,"column":17,"nodeType":"76","endLine":243,"endColumn":20},{"ruleId":"77","severity":1,"message":"78","line":243,"column":37,"nodeType":"76","endLine":243,"endColumn":62},{"ruleId":"74","severity":1,"message":"75","line":264,"column":17,"nodeType":"76","endLine":264,"endColumn":145},{"ruleId":"77","severity":1,"message":"78","line":267,"column":17,"nodeType":"76","endLine":267,"endColumn":20},{"ruleId":"77","severity":1,"message":"78","line":268,"column":17,"nodeType":"76","endLine":268,"endColumn":20},{"ruleId":"74","severity":1,"message":"75","line":271,"column":17,"nodeType":"76","endLine":271,"endColumn":89},{"ruleId":"74","severity":1,"message":"75","line":277,"column":17,"nodeType":"76","endLine":277,"endColumn":145},{"ruleId":"77","severity":1,"message":"78","line":280,"column":17,"nodeType":"76","endLine":280,"endColumn":20},{"ruleId":"77","severity":1,"message":"78","line":281,"column":17,"nodeType":"76","endLine":281,"endColumn":20},{"ruleId":"74","severity":1,"message":"75","line":284,"column":17,"nodeType":"76","endLine":284,"endColumn":89},{"ruleId":"74","severity":1,"message":"75","line":290,"column":17,"nodeType":"76","endLine":290,"endColumn":145},{"ruleId":"77","severity":1,"message":"78","line":293,"column":17,"nodeType":"76","endLine":293,"endColumn":20},{"ruleId":"77","severity":1,"message":"78","line":294,"column":17,"nodeType":"76","endLine":294,"endColumn":20},{"ruleId":"74","severity":1,"message":"75","line":297,"column":17,"nodeType":"76","endLine":297,"endColumn":89},{"ruleId":"74","severity":1,"message":"75","line":303,"column":17,"nodeType":"76","endLine":303,"endColumn":145},{"ruleId":"77","severity":1,"message":"78","line":306,"column":17,"nodeType":"76","endLine":306,"endColumn":20},{"ruleId":"77","severity":1,"message":"78","line":307,"column":17,"nodeType":"76","endLine":307,"endColumn":20},{"ruleId":"74","severity":1,"message":"75","line":310,"column":17,"nodeType":"76","endLine":310,"endColumn":89},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'makeStyles' is defined but never used.","'hideModal' is assigned a value but never used.","'login' is assigned a value but never used.","'displayError' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]