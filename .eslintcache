[{"C:\\Users\\Kasutaja\\Desktop\\eosetf\\src\\index.js":"1","C:\\Users\\Kasutaja\\Desktop\\eosetf\\src\\App.js":"2","C:\\Users\\Kasutaja\\Desktop\\eosetf\\src\\reportWebVitals.js":"3"},{"size":1851,"mtime":1612870833934,"results":"4","hashOfConfig":"5"},{"size":45480,"mtime":1612991096297,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1606379858196,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9mcfsq",{"filePath":"10","messages":"11","errorCount":0,"warningCount":125,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Kasutaja\\Desktop\\eosetf\\src\\index.js",[],"C:\\Users\\Kasutaja\\Desktop\\eosetf\\src\\App.js",["15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Slider } from '@material-ui/core';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { withUAL } from \"ual-reactjs-renderer\";\r\nimport Swal from \"sweetalert2\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport Drawer from '@material-ui/core/Drawer';\r\n//import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst CustomSlider = withStyles({\r\n  root: {\r\n    color: '#52af77',\r\n    height: 8,\r\n  },\r\n  thumb: {\r\n    height: 24,\r\n    width: 24,\r\n    backgroundColor: '#fff',\r\n    border: '2px solid currentColor',\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n    '&:focus, &:hover, &$active': {\r\n      boxShadow: 'inherit',\r\n    },\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: 'calc(-50% + 4px)',\r\n  },\r\n  track: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n  rail: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n})(Slider);\r\n\r\nfunction App(props) {\r\n  const {\r\n    ual: { showModal, hideModal, activeUser, login, logout },\r\n  } = props;\r\n  if (activeUser) {\r\n    const accountName = activeUser.getAccountName();\r\n    accountName.then(function (result) {\r\n      setAccountName(result);\r\n    });\r\n  }\r\n  const displayaccountname = () => {\r\n    if (accountname) {\r\n      return accountname;\r\n    }\r\n  };\r\n  const [drawerstate, setDrawerstate] = useState(false)\r\n  const [tokens, setTokens] = useState(0)\r\n  const [redeemtokens, setRedeemtokens] = useState(0)\r\n  const [view, setView] = useState(\"create\")\r\n  const [accountname, setAccountName] = useState(\"\")\r\n\r\n  const logmeout = () => {\r\n    logout()\r\n    setAccountName(\"\")\r\n  }\r\n\r\n  const efxmult = 10.6593\r\n  const dadmult = 1.439439\r\n  const iqmult = 50.082\r\n  const vigmult = 196.7187\r\n  const dappmult = 19.2562\r\n  const boxmult = 0.035523\r\n  const ogxmult = 1.26108207\r\n\r\n  const sucessstake = () => {\r\n    const Toast = Swal.mixin({\r\n      toast: true,\r\n      position: \"bottom-end\",\r\n      showConfirmButton: false,\r\n      timer: 6000,\r\n      timerProgressBar: true,\r\n      onOpen: (toast) => {\r\n        toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n        toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n      },\r\n    });\r\n    Toast.fire({\r\n      icon: \"success\",\r\n      title: \"CETF and EOSETF successfully created!\",\r\n    });\r\n  };\r\n\r\n  const sucessredemption = () => {\r\n    const Toast = Swal.mixin({\r\n      toast: true,\r\n      position: \"bottom-end\",\r\n      showConfirmButton: false,\r\n      timer: 6000,\r\n      timerProgressBar: true,\r\n      onOpen: (toast) => {\r\n        toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n        toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n      },\r\n    });\r\n    Toast.fire({\r\n      icon: \"success\",\r\n      title: \"Tokens successfully redeemed!\",\r\n    });\r\n  };\r\n\r\n\r\n\r\n  const actionpuccis = (err) => {\r\n    const Toast = Swal.mixin({\r\n      toast: true,\r\n      position: \"bottom-end\",\r\n      showConfirmButton: false,\r\n      timer: 5000,\r\n      timerProgressBar: true,\r\n      didOpen: (toast) => {\r\n        toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n        toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n      },\r\n    });\r\n    Toast.fire({\r\n      icon: \"error\",\r\n      title: err,\r\n    });\r\n  };\r\n\r\n\r\n  const [ogxbalance, setOgx] = useState({ rows: [] });\r\n  const [dadbalance, setDad] = useState({ rows: [] });\r\n  const [boxbalance, setBox] = useState({ rows: [] });\r\n  const [vigbalance, setVig] = useState({ rows: [] });\r\n  const [iqbalance, setIq] = useState({ rows: [] });\r\n  const [efxbalance, setEfx] = useState({ rows: [] });\r\n  const [dappbalance, setDapp] = useState({ rows: [] });\r\n  const [eosetfbalance, setEosetf] = useState({ rows: [] });\r\n  const [etfbalance, setEtf] = useState({ rows: [] });\r\n  const [eosetfbalanceind, setEosetfind] = useState({ rows: [] });\r\n  const [etfbalanceind, setEtfind] = useState({ rows: [] });\r\n\r\n  const menuClick = (which) => {\r\n    setView(which)\r\n    setDrawerstate(false)\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"consortiumtt\",\r\n        table: \"accounts\",\r\n        scope: displayaccountname(),\r\n        limit: 3,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((etfbalanceind) => setEtfind(etfbalanceind))\r\n    );\r\n  }, [accountname]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"consortiumtt\",\r\n        table: \"accounts\",\r\n        scope: displayaccountname(),\r\n        limit: 3,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((eosetfbalanceind) => setEosetfind(eosetfbalanceind))\r\n    );\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"consortiumtt\",\r\n        table: \"statnew\",\r\n        scope: \"ETF\",\r\n        limit: 1,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((etfbalance) => setEtf(etfbalance))\r\n    );\r\n  }, [accountname]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        json: true,\r\n        code: \"consortiumtt\",\r\n        table: \"statnew\",\r\n        scope: \"EOSETF\",\r\n        limit: 1,\r\n      }),\r\n    }).then((response) =>\r\n      response.json().then((eosetfbalance) => setEosetf(eosetfbalance))\r\n    );\r\n  }, [accountname]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"core.ogx\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((ogxbalance) => setOgx(ogxbalance))\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"dadtoken1111\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((dadbalance) => setDad(dadbalance))\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"token.defi\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((boxbalance) => setBox(boxbalance))\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"vig111111111\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((vigbalance) => setVig(vigbalance))\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"everipediaiq\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((iqbalance) => setIq(iqbalance))\r\n\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"effecttokens\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((efxbalance) => setEfx(efxbalance))\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (accountname) {\r\n      fetch(\"https://api.main.alohaeos.com:443/v1/chain/get_table_rows\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          json: true,\r\n          code: \"dappservices\",\r\n          table: \"accounts\",\r\n          scope: displayaccountname(),\r\n          limit: 1,\r\n        }),\r\n      }).then((response) =>\r\n        response.json().then((dappbalance) => setDapp(dappbalance))\r\n      );\r\n    }\r\n  }, [accountname]);\r\n\r\n\r\n\r\n  const gettokenbalance = (token) => {\r\n    if (token.rows[0]) {\r\n      return Number(token.rows[0].balance.split(\" \")[0]);\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const gettokenbalanceone = (token) => {\r\n    if (token.rows[0]) {\r\n      return Math.floor(Number(token.rows[0].balance.split(\" \")[0]));\r\n      //return (token.rows[0].balance);\r\n\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const gettokenbalancetwo = (token) => {\r\n    if (token.rows[1]) {\r\n      return Math.floor(Number(token.rows[1].balance.split(\" \")[0]));\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n\r\n  const gettokensupply = (token) => {\r\n    if (token.rows[0]) {\r\n      return Math.floor(Number(token.rows[0].supply.split(\" \")[0]));\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const halvingdivider = () => {\r\n    if (etfbalance.rows[0]) {\r\n      return parseInt(\r\n        Math.pow(\r\n          2,\r\n          parseInt(\r\n            Math.floor(Number(etfbalance.rows[0].supply.split(\" \")[0])) /\r\n            5000000\r\n          )\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  const creationreward = () => {\r\n    return parseInt(\r\n      120000 /\r\n      halvingdivider()\r\n    );\r\n  };\r\n\r\n\r\n  const halvings = (totalcirc) => {\r\n    if (totalcirc < 5000000) {\r\n      return 0;\r\n    } else if (totalcirc >> 5000000 && totalcirc < 10000000) {\r\n      return 1;\r\n    } else if (totalcirc >> 10000000 && totalcirc < 15000000) {\r\n      return 2;\r\n    } else if (totalcirc >> 15000000 && totalcirc < 20000000) {\r\n      return 3;\r\n    } else if (totalcirc >> 20000000 && totalcirc < 25000000) {\r\n      return 4;\r\n    } else if (totalcirc >> 25000000 && totalcirc < 30000000) {\r\n      return 5;\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const send = async () => {\r\n    const {\r\n      ual: { login, displayError, showModal },\r\n    } = props;\r\n    // Via static contextType = UALContext, access to the activeUser object on this.context is now available\r\n    const {\r\n      ual: { activeUser },\r\n    } = props;\r\n\r\n    //console.log(getdapp())\r\n\r\n    if (activeUser) {\r\n      try {\r\n        const transaction = {\r\n          actions: [\r\n            {\r\n              account: \"dappservices\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 19.2562 * tokens + \" DAPP\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(dappmult * tokens).toFixed(4) + \" DAPP\",\r\n\r\n              },\r\n            },\r\n\r\n\r\n            {\r\n              account: \"effecttokens\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 10.6593 * tokens + \" EFX\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(10.6593 * tokens).toFixed(4) + \" EFX\",\r\n\r\n              },\r\n            },\r\n\r\n\r\n\r\n            {\r\n              account: \"core.ogx\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 1.26108207 * tokens + \" OGX\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(ogxmult * tokens).toFixed(8) + \" OGX\",\r\n              },\r\n            },\r\n\r\n\r\n\r\n\r\n            {\r\n              account: \"everipediaiq\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 50.082 * tokens + \" IQ\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(iqmult * tokens).toFixed(3) + \" IQ\",\r\n\r\n              },\r\n            },\r\n\r\n\r\n\r\n\r\n            {\r\n              account: \"vig111111111\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 196.7187 * tokens + \" VIG\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(vigmult * tokens).toFixed(4) + \" VIG\",\r\n\r\n              },\r\n            },\r\n\r\n\r\n\r\n            {\r\n              account: \"token.defi\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: 0.035523 * tokens + \" BOX\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(boxmult * tokens).toFixed(6) + \" BOX\",\r\n\r\n              },\r\n            },\r\n\r\n\r\n\r\n\r\n            {\r\n              account: \"dadtoken1111\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                //quantity: efxmult * tokens + \" DAD\",\r\n                memo: \"EOSETF creation\",\r\n                quantity: parseFloat(dadmult * tokens).toFixed(6) + \" DAD\",\r\n\r\n              },\r\n            },\r\n          ],\r\n        };\r\n        // The activeUser.signTransaction will propose the passed in transaction to the logged in Authenticator\r\n        await activeUser.signTransaction(transaction, {\r\n          broadcast: true,\r\n          expireSeconds: 300,\r\n        });\r\n\r\n        sucessstake();\r\n\r\n      } catch (error) {\r\n        console.log(error.message);\r\n        actionpuccis(\r\n          error.message\r\n        );\r\n      }\r\n    } else {\r\n      showModal();\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  const sendetf = async () => {\r\n    const {\r\n      ual: { login, displayError, showModal },\r\n    } = props;\r\n    // Via static contextType = UALContext, access to the activeUser object on this.context is now available\r\n    const {\r\n      ual: { activeUser },\r\n    } = props;\r\n\r\n\r\n    var eosetf = redeemtokens.toFixed(4);\r\n\r\n\r\n    if (activeUser) {\r\n      try {\r\n        const transaction = {\r\n          actions: [\r\n            {\r\n              account: \"consortiumtt\",\r\n              name: \"transfer\",\r\n              authorization: [\r\n                {\r\n                  actor: displayaccountname(), // use account that was logged in\r\n                  permission: \"active\",\r\n                },\r\n              ],\r\n              data: {\r\n                from: displayaccountname(),\r\n                to: \"consortiumtt\",\r\n                quantity: eosetf + \" EOSETF\",\r\n                memo: \"EOSETF redemption\",\r\n              },\r\n            },\r\n\r\n\r\n          ],\r\n        };\r\n        // The activeUser.signTransaction will propose the passed in transaction to the logged in Authenticator\r\n        await activeUser.signTransaction(transaction, {\r\n          broadcast: true,\r\n          expireSeconds: 300,\r\n        });\r\n\r\n        sucessredemption();\r\n\r\n        //alert(\"GREAT SUCCESS!\")\r\n        //window.location.reload(false);\r\n\r\n      } catch (error) {\r\n        console.log(error.message);\r\n        actionpuccis(\r\n          error.message\r\n        );\r\n      }\r\n    } else {\r\n      showModal();\r\n    }\r\n  };\r\n\r\n  const toggleDrawer = (open) => (event) => {\r\n    setDrawerstate(open);\r\n  };\r\n\r\n  const compare = () => {\r\n    const a = parseFloat(vigmult * tokens).toFixed(4)\r\n    const b = gettokenbalance(vigbalance)\r\n    const c = Math.floor(a * 100) > Math.floor(b * 100)\r\n    return c\r\n\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"App\">\r\n      <ReactTooltip id=\"all\" place=\"bottom\" type=\"dark\"\r\n        effect=\"solid\"\r\n        backgroundColor=\"black\"\r\n        style={{\r\n          fontWeight: \"bold\",\r\n        }} />\r\n\r\n      <header className=\"App-header\">\r\n        <img src=\"assets/burger.svg\" class=\"menubutton\" onClick={toggleDrawer(true)} />\r\n        <div class=\"maincard\">\r\n          <div class=\"outsidebutton govrnbutton\" onClick={() => window.open('https://app.consortium.vote/community/zlmdhu2blclw', \"_blank\")}><img class=\"outsideimg\" src=\"assets/consologo.png\" /><div class=\"outsidebuttontext\">VOTE</div></div>\r\n          <div class=\"outsidebutton buybutton\" onClick={() => window.open('https://newdex.io/', \"_blank\")}><img class=\"outsideimg\" src=\"assets/newdex.png\" /><div class=\"outsidebuttontext\">BUY/SELL</div></div>\r\n          <Drawer\r\n            anchor=\"right\"\r\n            open={drawerstate}\r\n            onClose={toggleDrawer(false)}\r\n            onOpen={toggleDrawer(true)}\r\n            opacity=\"0.5\"\r\n          >\r\n            <div class=\"sidemenu\">\r\n              <div class=\"mobilemenu\">\r\n                <div class=\"logo\">\r\n                  <img width=\"64px\" src=\"assets/logo.svg\" />\r\n                </div>\r\n                <div class=\"appname\">\r\n                  <a>CETF</a>\r\n                </div>\r\n                <div class=\"accountname\">\r\n                  {accountname == \"\" ? <a>not logged in</a> : accountname}\r\n                </div>\r\n                <div class=\"menuitemswrapper\">\r\n                  <table class=\"menuitems\">\r\n                    <tr onClick={() => menuClick(\"create\")}>\r\n                      <td><img class=\"menuimg\" src=\"assets/productbox1.svg\" /></td>\r\n                      <td><a class=\"menuitemtext\">Create</a></td>\r\n                    </tr>\r\n                    <tr onClick={() => menuClick(\"redeem\")}>\r\n                      <td><img class=\"menuimg\" src=\"assets/productbox2.svg\" /></td>\r\n                      <td><a class=\"menuitemtext\">Redeem</a></td>\r\n                    </tr>\r\n                    <tr onClick={() => window.open('https://newdex.io/', \"_blank\")}>\r\n                      <td><img class=\"menuimg\" src=\"assets/checkout.svg\" /></td>\r\n                      <td><a class=\"menuitemtext\">Buy</a></td>\r\n                    </tr>\r\n                    <tr onClick={() => window.open('https://app.consortium.vote/', \"_blank\")}>\r\n                      <td><img class=\"menuimg\" src=\"assets/govern.svg\" /></td>\r\n                      <td><a class=\"menuitemtext\">Govern</a></td>\r\n                    </tr>\r\n                    <tr onClick={() => menuClick(\"stats\")}>\r\n                      <td><img class=\"menuimg\" src=\"assets/stats.svg\" /></td>\r\n                      <td><a class=\"menuitemtext\">Statistics</a></td>\r\n                    </tr>\r\n                    {accountname == \"\" ?\r\n                      <tr onClick={() => showModal()}>\r\n                        <td><img class=\"menuimg\" src=\"assets/login.svg\" /></td>\r\n                        <td><a class=\"menuitemtext\">Login</a></td>\r\n                      </tr>\r\n                      :\r\n                      <tr onClick={() => logmeout()}>\r\n                        <td><img class=\"menuimg\" src=\"assets/logout.svg\" /></td>\r\n                        <td><a class=\"menuitemtext\">Logout</a></td>\r\n                      </tr>\r\n                    }\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Drawer>\r\n          <div class=\"leftbar\">\r\n            <div class=\"logo\">\r\n              <img width=\"64px\" src=\"assets/logo.svg\" />\r\n            </div>\r\n            <div class=\"appname\">\r\n              <a>CETF</a>\r\n            </div>\r\n            <div class=\"accountname\">\r\n              {accountname == \"\" ? <a>Not logged in</a> : accountname}\r\n            </div>\r\n            <div class=\"menuitemswrapper\">\r\n              <table class=\"menuitems\">\r\n                <tr onClick={() => setView(\"create\")}>\r\n                  <td><img class=\"menuimg\" src=\"assets/productbox1.svg\" /></td>\r\n                  <td><a class=\"menuitemtext\">Create</a></td>\r\n                </tr>\r\n                <tr onClick={() => setView(\"redeem\")}>\r\n                  <td><img class=\"menuimg\" src=\"assets/productbox2.svg\" /></td>\r\n                  <td><a class=\"menuitemtext\">Redeem</a></td>\r\n                </tr>\r\n                <tr onClick={() => setView(\"stats\")}>\r\n                  <td><img class=\"menuimg\" src=\"assets/stats.svg\" /></td>\r\n                  <td><a class=\"menuitemtext\">Statistics</a></td>\r\n                </tr>\r\n                {accountname == \"\" ?\r\n                  <tr onClick={() => showModal()}>\r\n                    <td><img class=\"menuimg\" src=\"assets/login.svg\" /></td>\r\n                    <td><a class=\"menuitemtext\">Login</a></td>\r\n                  </tr>\r\n                  :\r\n                  <tr onClick={() => logmeout()}>\r\n                    <td><img class=\"menuimg\" src=\"assets/logout.svg\" /></td>\r\n                    <td><a class=\"menuitemtext\">Logout</a></td>\r\n                  </tr>\r\n                }\r\n              </table>\r\n            </div>\r\n          </div>\r\n          {view == \"create\" ?\r\n            <div class=\"rightbar\">\r\n              <div class=\"rightbartopbox\">\r\n                <div class=\"createetftitle\">\r\n                  <div>\r\n                    <a\r\n                      //class=\"value\"\r\n                      data-html=\"true\"\r\n                      data-for=\"all\"\r\n\r\n                      data-tip={\r\n                        \"<b>*To create EOSETF your account must hold 7 different tokens:  <br/> DAPP, VIG, IQ, OGX, BOX, EFX and DAD. <br/> <br/> *Creation of each EOSETF issues you CETF tokens (starting with 30k CETF<br/>per 1 EOSETF)  that will be used as a governance and fee distribution token.  <br/> <br/> *Each time 5m CETF are issued the issuance of CETF is halved. <br/> circulation <5m CETF | 1 EOSETF = 30k CETF<br/> circulation <10m CETF | 1 EOSETF = 15k CETF etc. <br/> <br/> *At 30m CETF (21166 EOSETF / 5 halvings) no more CETF will be issued.<br/> <br/> *Due to the initial CETF distribution, when <br/> redeeming tokens 10% less is returned. <br/> <br/>  *NB! Creation involves transfer of tokens to cet.f account,<br/> the code is unaudited, please remember that risk.</b> \"\r\n\r\n\r\n                      }\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n\r\n                      Create EOSETF\r\n\r\n                    <InfoIcon\r\n\r\n                        style={{\r\n                          height: \"20px\",\r\n                          width: \"20px\",\r\n                          color: \"black\",\r\n                          opacity: \"0.7\",\r\n                          \"margin-left\": \"2px\",\r\n                          \"vertical-align\": \"top\",\r\n                          \"margin-top\": \"-4px\",\r\n\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      />\r\n\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n                <div class=\"slidertext\">\r\n                  <a>You are creating <input style={{ \"color\": tokens > 70 ? \"red\" : \"inherit\" }} class=\"tokeninput\" type=\"number\" value={tokens} onChange={e => setTokens(e.target.value)}></input> EOSETF</a>\r\n                </div>\r\n                <div class=\"slider\">\r\n                  <CustomSlider\r\n                    defaultValue={0.0000}\r\n                    value={tokens}\r\n                    aria-label=\"custom thumb label\"\r\n                    step={1.0000}\r\n                    min={0}\r\n                    max={70.0000}\r\n                    onChangeCommitted={(e, val) => setTokens(val)}\r\n                    style={{\r\n                      marginBottom: \"10px\",\r\n                      \"margin-top\": \"10px\",\r\n                      color: \"white\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Scrollbars class=\"mask\" style={{ width: \"100%\", height: \"90%\" }} autoHide >\r\n                <div class=\"rightbar\">\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(dappmult * tokens).toFixed(4) > gettokenbalance(dappbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/dapp.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(dappmult * tokens).toFixed(4)} DAPP tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(dappmult * tokens).toFixed(4) < gettokenbalance(dappbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/193', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": compare(vigmult, tokens, vigbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/vigor.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(vigmult * tokens).toFixed(4)} VIG tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(vigmult * tokens).toFixed(4) < gettokenbalance(vigbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/11', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(iqmult * tokens).toFixed(3) > gettokenbalance(iqbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/everipedia.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(iqmult * tokens).toFixed(3)} IQ tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(iqmult * tokens).toFixed(3) < gettokenbalance(iqbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/93', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(ogxmult * tokens).toFixed(8) > gettokenbalance(ogxbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/ogx.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(ogxmult * tokens).toFixed(8)} OGX tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(ogxmult * tokens).toFixed(8) < gettokenbalance(ogxbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/878', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(boxmult * tokens).toFixed(6) > gettokenbalance(boxbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/tokendefi.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(boxmult * tokens).toFixed(6)} BOX tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(boxmult * tokens).toFixed(6) < gettokenbalance(boxbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/878', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(efxmult * tokens).toFixed(4) > gettokenbalance(efxbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/efx.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(10.6593 * tokens).toFixed(4)} EFX tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(efxmult * tokens).toFixed(4) < gettokenbalance(efxbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/191', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"smallcard\" style={{ \"border\": parseFloat(dadmult * tokens).toFixed(6) > gettokenbalance(dadbalance) ? \"solid 2px red\" : \"none\" }}>\r\n                    <div class=\"tokenlogo\">\r\n                      <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/dad.png\" />\r\n                    </div>\r\n                    <div class=\"smallcardtext\">\r\n                      <a> {parseFloat(dadmult * tokens).toFixed(6)} DAD tokens</a>\r\n                    </div>\r\n                    <div class=\"trxbutton\">\r\n                      {parseFloat(dadmult * tokens).toFixed(6) < gettokenbalance(dadbalance) ?\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                        :\r\n                        <img class=\"trximage\" onClick={() => window.open('https://defibox.io/pool-market-details/588', \"_blank\")} height=\"100%\" src=\"assets/connection.svg\" />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                  <div style={{ \"display\": \"block\" }}>.</div>\r\n\r\n\r\n                </div>\r\n              </Scrollbars>\r\n              <div class=\"fade\" />\r\n              <button onClick={() => send()} class=\"createbutton\">Create EOSETF</button>\r\n            </div>\r\n\r\n\r\n            : view == \"redeem\" ?\r\n              <div class=\"rightbar\">\r\n                <div class=\"rightbartopbox\">\r\n                  <div class=\"createetftitle\">\r\n                    <div>\r\n                      <a\r\n                        //class=\"value\"\r\n                        data-html=\"true\"\r\n                        data-for=\"all\"\r\n\r\n                        data-tip={\r\n                          \"<b>*To redeem DAPP, VIG, IQ, OGX, BOX, EFX and DAD tokens your account must hold EOSETF. <br/> <br/>*Due to the initial CETF distribution, when <br/> redeeming tokens 10% less is returned.</b> \"\r\n\r\n\r\n                        }\r\n                        style={{\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      >\r\n\r\n                        Redeem tokens\r\n\r\n                    <InfoIcon\r\n\r\n                          style={{\r\n                            height: \"20px\",\r\n                            width: \"20px\",\r\n                            color: \"black\",\r\n                            opacity: \"0.7\",\r\n                            \"margin-left\": \"2px\",\r\n                            \"vertical-align\": \"top\",\r\n                            \"margin-top\": \"-4px\",\r\n\r\n                            fontWeight: \"bold\",\r\n                          }}\r\n                        />\r\n\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"slidertext\">\r\n                    <a>You are redeeming <input class=\"tokeninput\" type=\"number\" value={redeemtokens} onChange={e => setRedeemtokens(e.target.value)}></input> EOSETF</a>\r\n                  </div>\r\n                  <div class=\"slider\">\r\n                    <CustomSlider\r\n                      defaultValue={0.0000}\r\n                      aria-label=\"custom thumb label\"\r\n                      step={1.0000}\r\n                      value={redeemtokens}\r\n                      min={0}\r\n                      max={70.0000}\r\n                      onChangeCommitted={(e, val) => setRedeemtokens(val)}\r\n                      style={{\r\n                        marginBottom: \"10px\",\r\n                        \"margin-top\": \"10px\",\r\n                        color: \"white\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <Scrollbars class=\"mask\" style={{ width: \"100%\", height: \"90%\" }} autoHide >\r\n                  <div class=\"rightbar\">\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/dapp.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * dappmult).toFixed(4)} DAPP tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/vigor.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * vigmult).toFixed(4)} VIG tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/everipedia.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * iqmult).toFixed(3)} IQ tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/ogx.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * ogxmult).toFixed(8)} OGX tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/tokendefi.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * boxmult).toFixed(6)} BOX tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/efx.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * efxmult).toFixed(4)} EFX tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"smallcard\">\r\n                      <div class=\"tokenlogo\">\r\n                        <img class=\"tokenlogoimage\" height=\"100%\" src=\"assets/tokenlogos/dad.png\" />\r\n                      </div>\r\n                      <div class=\"smallcardtext\">\r\n                        <a>{(redeemtokens * dadmult).toFixed(6)} DAD tokens returned</a>\r\n                      </div>\r\n                      <div class=\"trxbutton\">\r\n                        <img class=\"trximage\" height=\"100%\" src=\"assets/tick.svg\" />\r\n                      </div>\r\n                    </div>\r\n                    <div style={{ \"display\": \"block\" }}>.</div>\r\n\r\n                  </div>\r\n                </Scrollbars>\r\n                <button class=\"createbutton\" onClick={() => sendetf()}>Redeem tokens</button>\r\n              </div>\r\n\r\n              : view == \"stats\" ?\r\n                <div class=\"rightbar\">\r\n                  <div class=\"rightbartopbox\">\r\n                    <div class=\"createetftitle\">\r\n                      <div>\r\n                        <a\r\n                          //class=\"value\"\r\n                          data-html=\"true\"\r\n                          data-for=\"all\"\r\n\r\n                          data-tip={\r\n                            \"<b>*It should be fairly quick distribution of CETF <br/> since when aprox. 25k USD worth of EOSETF is created the circulation will be 30m CETF, <br/> meaning the issusance will end.</b> \"\r\n                          }\r\n                          style={{\r\n                            fontWeight: \"bold\",\r\n                          }}\r\n                        >\r\n\r\n                          Statistics\r\n                    <InfoIcon\r\n\r\n                            style={{\r\n                              height: \"20px\",\r\n                              width: \"20px\",\r\n                              color: \"black\",\r\n                              opacity: \"0.7\",\r\n                              \"margin-left\": \"2px\",\r\n                              \"vertical-align\": \"top\",\r\n                              \"margin-top\": \"-4px\",\r\n\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          />\r\n\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <br /> <br />\r\n\r\n                  <Scrollbars class=\"mask\" style={{ width: \"80%\" }} autoHide >\r\n                    <div class=\"statcards\">\r\n                      <div class=\"statcard\">\r\n                        <a class=\"stat\">{gettokenbalancetwo(eosetfbalanceind).toLocaleString()} EOSETF</a><a class=\"statexplainer\">My balance</a>\r\n                      </div>\r\n\r\n                      <div class=\"statcard\">\r\n                        <a class=\"stat\">{gettokenbalanceone(eosetfbalanceind).toLocaleString()} CETF</a><a class=\"statexplainer\">My balance</a>\r\n                      </div>\r\n\r\n                      <div class=\"statcard\">\r\n                        <a class=\"stat\">{gettokensupply(etfbalance).toLocaleString()} CETF</a><a class=\"statexplainer\">Circulating supply (Max 30m)</a>\r\n                      </div>\r\n\r\n                      <div class=\"statcard\">\r\n                        <a class=\"stat\">{gettokensupply(eosetfbalance).toLocaleString()} EOSETF</a><a class=\"statexplainer\">Circulating supply</a>\r\n                      </div>\r\n                      <div class=\"statcard\">\r\n                        <a class=\"stat\">{creationreward().toLocaleString()} CETF</a><a class=\"statexplainer\"> Issuance per 1 EOSTF</a>\r\n                      </div>\r\n                      <div class=\"statcard\">\r\n                        <a class=\"stat\">{halvings(gettokensupply(etfbalance)).toLocaleString()}</a><a class=\"statexplainer\">Halvings (Max 5)</a>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </Scrollbars>\r\n                  <div class=\"fade\" />\r\n                </div>\r\n\r\n                : <a>Error</a>\r\n          }\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withUAL(App);\r\n//                      <a> My balance: {gettokenbalance(etfbalanceind)} CETF  </a>                       <a>Total supply: {gettokensupply(etfbalance)} CETF  </a>                       <a>Total supply: {gettokensupply(eosetfbalance)} EOSETF  </a>\r\n/*\r\n\r\n\r\n\r\n                      <a> Current supply: {gettokensupply(etfbalance)} CETF (Distribution ends at 30m CETF, no more CETF will be issued) </a>\r\n                      <br></br><br></br>\r\n\r\n                      <a>Current supply: {gettokensupply(eosetfbalance)} EOSETF </a>\r\n                      <br></br><br></br>\r\n\r\n                      <a>Issuance per 1 EOSETF: {creationreward()} CETF   </a>\r\n\r\n                      <br></br><br></br>\r\n\r\n                      <a>Halvings: {halvings(gettokensupply(etfbalance))}   </a>\r\n\r\n*/\r\n","C:\\Users\\Kasutaja\\Desktop\\eosetf\\src\\reportWebVitals.js",[],{"ruleId":"140","severity":1,"message":"141","line":1,"column":8,"nodeType":"142","messageId":"143","endLine":1,"endColumn":12},{"ruleId":"140","severity":1,"message":"144","line":5,"column":22,"nodeType":"142","messageId":"143","endLine":5,"endColumn":32},{"ruleId":"140","severity":1,"message":"145","line":46,"column":23,"nodeType":"142","messageId":"143","endLine":46,"endColumn":32},{"ruleId":"140","severity":1,"message":"146","line":46,"column":46,"nodeType":"142","messageId":"143","endLine":46,"endColumn":51},{"ruleId":"140","severity":1,"message":"147","line":145,"column":10,"nodeType":"142","messageId":"143","endLine":145,"endColumn":23},{"ruleId":"148","severity":1,"message":"149","line":171,"column":6,"nodeType":"150","endLine":171,"endColumn":19,"suggestions":"151"},{"ruleId":"148","severity":1,"message":"149","line":190,"column":6,"nodeType":"150","endLine":190,"endColumn":19,"suggestions":"152"},{"ruleId":"148","severity":1,"message":"149","line":260,"column":6,"nodeType":"150","endLine":260,"endColumn":19,"suggestions":"153"},{"ruleId":"148","severity":1,"message":"149","line":283,"column":6,"nodeType":"150","endLine":283,"endColumn":19,"suggestions":"154"},{"ruleId":"148","severity":1,"message":"149","line":306,"column":6,"nodeType":"150","endLine":306,"endColumn":19,"suggestions":"155"},{"ruleId":"148","severity":1,"message":"149","line":329,"column":6,"nodeType":"150","endLine":329,"endColumn":19,"suggestions":"156"},{"ruleId":"148","severity":1,"message":"149","line":353,"column":6,"nodeType":"150","endLine":353,"endColumn":19,"suggestions":"157"},{"ruleId":"148","severity":1,"message":"149","line":375,"column":6,"nodeType":"150","endLine":375,"endColumn":19,"suggestions":"158"},{"ruleId":"148","severity":1,"message":"149","line":399,"column":6,"nodeType":"150","endLine":399,"endColumn":19,"suggestions":"159"},{"ruleId":"140","severity":1,"message":"146","line":490,"column":14,"nodeType":"142","messageId":"143","endLine":490,"endColumn":19},{"ruleId":"140","severity":1,"message":"160","line":490,"column":21,"nodeType":"142","messageId":"143","endLine":490,"endColumn":33},{"ruleId":"140","severity":1,"message":"146","line":674,"column":14,"nodeType":"142","messageId":"143","endLine":674,"endColumn":19},{"ruleId":"140","severity":1,"message":"160","line":674,"column":21,"nodeType":"142","messageId":"143","endLine":674,"endColumn":33},{"ruleId":"161","severity":1,"message":"162","line":755,"column":9,"nodeType":"163","endLine":755,"endColumn":88},{"ruleId":"161","severity":1,"message":"162","line":757,"column":142,"nodeType":"163","endLine":757,"endColumn":195},{"ruleId":"161","severity":1,"message":"162","line":758,"column":108,"nodeType":"163","endLine":758,"endColumn":158},{"ruleId":"161","severity":1,"message":"162","line":769,"column":19,"nodeType":"163","endLine":769,"endColumn":61},{"ruleId":"164","severity":1,"message":"165","line":772,"column":19,"nodeType":"163","endLine":772,"endColumn":22},{"ruleId":"166","severity":1,"message":"167","line":775,"column":32,"nodeType":"168","messageId":"169","endLine":775,"endColumn":34},{"ruleId":"164","severity":1,"message":"165","line":775,"column":40,"nodeType":"163","endLine":775,"endColumn":43},{"ruleId":"161","severity":1,"message":"162","line":780,"column":27,"nodeType":"163","endLine":780,"endColumn":79},{"ruleId":"164","severity":1,"message":"165","line":781,"column":27,"nodeType":"163","endLine":781,"endColumn":51},{"ruleId":"161","severity":1,"message":"162","line":784,"column":27,"nodeType":"163","endLine":784,"endColumn":79},{"ruleId":"164","severity":1,"message":"165","line":785,"column":27,"nodeType":"163","endLine":785,"endColumn":51},{"ruleId":"161","severity":1,"message":"162","line":788,"column":27,"nodeType":"163","endLine":788,"endColumn":76},{"ruleId":"164","severity":1,"message":"165","line":789,"column":27,"nodeType":"163","endLine":789,"endColumn":51},{"ruleId":"161","severity":1,"message":"162","line":792,"column":27,"nodeType":"163","endLine":792,"endColumn":74},{"ruleId":"164","severity":1,"message":"165","line":793,"column":27,"nodeType":"163","endLine":793,"endColumn":51},{"ruleId":"161","severity":1,"message":"162","line":796,"column":27,"nodeType":"163","endLine":796,"endColumn":73},{"ruleId":"164","severity":1,"message":"165","line":797,"column":27,"nodeType":"163","endLine":797,"endColumn":51},{"ruleId":"166","severity":1,"message":"167","line":799,"column":34,"nodeType":"168","messageId":"169","endLine":799,"endColumn":36},{"ruleId":"161","severity":1,"message":"162","line":801,"column":29,"nodeType":"163","endLine":801,"endColumn":75},{"ruleId":"164","severity":1,"message":"165","line":802,"column":29,"nodeType":"163","endLine":802,"endColumn":53},{"ruleId":"161","severity":1,"message":"162","line":806,"column":29,"nodeType":"163","endLine":806,"endColumn":76},{"ruleId":"164","severity":1,"message":"165","line":807,"column":29,"nodeType":"163","endLine":807,"endColumn":53},{"ruleId":"161","severity":1,"message":"162","line":817,"column":15,"nodeType":"163","endLine":817,"endColumn":57},{"ruleId":"164","severity":1,"message":"165","line":820,"column":15,"nodeType":"163","endLine":820,"endColumn":18},{"ruleId":"166","severity":1,"message":"167","line":823,"column":28,"nodeType":"168","messageId":"169","endLine":823,"endColumn":30},{"ruleId":"164","severity":1,"message":"165","line":823,"column":36,"nodeType":"163","endLine":823,"endColumn":39},{"ruleId":"161","severity":1,"message":"162","line":828,"column":23,"nodeType":"163","endLine":828,"endColumn":75},{"ruleId":"164","severity":1,"message":"165","line":829,"column":23,"nodeType":"163","endLine":829,"endColumn":47},{"ruleId":"161","severity":1,"message":"162","line":832,"column":23,"nodeType":"163","endLine":832,"endColumn":75},{"ruleId":"164","severity":1,"message":"165","line":833,"column":23,"nodeType":"163","endLine":833,"endColumn":47},{"ruleId":"161","severity":1,"message":"162","line":836,"column":23,"nodeType":"163","endLine":836,"endColumn":69},{"ruleId":"164","severity":1,"message":"165","line":837,"column":23,"nodeType":"163","endLine":837,"endColumn":47},{"ruleId":"166","severity":1,"message":"167","line":839,"column":30,"nodeType":"168","messageId":"169","endLine":839,"endColumn":32},{"ruleId":"161","severity":1,"message":"162","line":841,"column":25,"nodeType":"163","endLine":841,"endColumn":71},{"ruleId":"164","severity":1,"message":"165","line":842,"column":25,"nodeType":"163","endLine":842,"endColumn":49},{"ruleId":"161","severity":1,"message":"162","line":846,"column":25,"nodeType":"163","endLine":846,"endColumn":72},{"ruleId":"164","severity":1,"message":"165","line":847,"column":25,"nodeType":"163","endLine":847,"endColumn":49},{"ruleId":"166","severity":1,"message":"167","line":853,"column":17,"nodeType":"168","messageId":"169","endLine":853,"endColumn":19},{"ruleId":"164","severity":1,"message":"165","line":858,"column":21,"nodeType":"163","endLine":871,"endColumn":22},{"ruleId":"164","severity":1,"message":"165","line":894,"column":19,"nodeType":"163","endLine":894,"endColumn":22},{"ruleId":"161","severity":1,"message":"162","line":917,"column":23,"nodeType":"163","endLine":917,"endColumn":100},{"ruleId":"164","severity":1,"message":"165","line":920,"column":23,"nodeType":"163","endLine":920,"endColumn":26},{"ruleId":"161","severity":1,"message":"162","line":924,"column":25,"nodeType":"163","endLine":924,"endColumn":85},{"ruleId":"161","severity":1,"message":"162","line":926,"column":25,"nodeType":"163","endLine":926,"endColumn":175},{"ruleId":"161","severity":1,"message":"162","line":933,"column":23,"nodeType":"163","endLine":933,"endColumn":101},{"ruleId":"164","severity":1,"message":"165","line":936,"column":23,"nodeType":"163","endLine":936,"endColumn":26},{"ruleId":"161","severity":1,"message":"162","line":940,"column":25,"nodeType":"163","endLine":940,"endColumn":85},{"ruleId":"161","severity":1,"message":"162","line":942,"column":25,"nodeType":"163","endLine":942,"endColumn":174},{"ruleId":"161","severity":1,"message":"162","line":949,"column":23,"nodeType":"163","endLine":949,"endColumn":106},{"ruleId":"164","severity":1,"message":"165","line":952,"column":23,"nodeType":"163","endLine":952,"endColumn":26},{"ruleId":"161","severity":1,"message":"162","line":956,"column":25,"nodeType":"163","endLine":956,"endColumn":85},{"ruleId":"161","severity":1,"message":"162","line":958,"column":25,"nodeType":"163","endLine":958,"endColumn":174},{"ruleId":"161","severity":1,"message":"162","line":965,"column":23,"nodeType":"163","endLine":965,"endColumn":99},{"ruleId":"164","severity":1,"message":"165","line":968,"column":23,"nodeType":"163","endLine":968,"endColumn":26},{"ruleId":"161","severity":1,"message":"162","line":972,"column":25,"nodeType":"163","endLine":972,"endColumn":85},{"ruleId":"161","severity":1,"message":"162","line":974,"column":25,"nodeType":"163","endLine":974,"endColumn":175},{"ruleId":"161","severity":1,"message":"162","line":981,"column":23,"nodeType":"163","endLine":981,"endColumn":105},{"ruleId":"164","severity":1,"message":"165","line":984,"column":23,"nodeType":"163","endLine":984,"endColumn":26},{"ruleId":"161","severity":1,"message":"162","line":988,"column":25,"nodeType":"163","endLine":988,"endColumn":85},{"ruleId":"161","severity":1,"message":"162","line":990,"column":25,"nodeType":"163","endLine":990,"endColumn":175},{"ruleId":"161","severity":1,"message":"162","line":997,"column":23,"nodeType":"163","endLine":997,"endColumn":99},{"ruleId":"164","severity":1,"message":"165","line":1000,"column":23,"nodeType":"163","endLine":1000,"endColumn":26},{"ruleId":"161","severity":1,"message":"162","line":1004,"column":25,"nodeType":"163","endLine":1004,"endColumn":85},{"ruleId":"161","severity":1,"message":"162","line":1006,"column":25,"nodeType":"163","endLine":1006,"endColumn":175},{"ruleId":"161","severity":1,"message":"162","line":1013,"column":23,"nodeType":"163","endLine":1013,"endColumn":99},{"ruleId":"164","severity":1,"message":"165","line":1016,"column":23,"nodeType":"163","endLine":1016,"endColumn":26},{"ruleId":"161","severity":1,"message":"162","line":1020,"column":25,"nodeType":"163","endLine":1020,"endColumn":85},{"ruleId":"161","severity":1,"message":"162","line":1022,"column":25,"nodeType":"163","endLine":1022,"endColumn":175},{"ruleId":"166","severity":1,"message":"167","line":1036,"column":20,"nodeType":"168","messageId":"169","endLine":1036,"endColumn":22},{"ruleId":"164","severity":1,"message":"165","line":1041,"column":23,"nodeType":"163","endLine":1054,"endColumn":24},{"ruleId":"164","severity":1,"message":"165","line":1077,"column":21,"nodeType":"163","endLine":1077,"endColumn":24},{"ruleId":"161","severity":1,"message":"162","line":1100,"column":25,"nodeType":"163","endLine":1100,"endColumn":102},{"ruleId":"164","severity":1,"message":"165","line":1103,"column":25,"nodeType":"163","endLine":1103,"endColumn":28},{"ruleId":"161","severity":1,"message":"162","line":1106,"column":25,"nodeType":"163","endLine":1106,"endColumn":85},{"ruleId":"161","severity":1,"message":"162","line":1112,"column":25,"nodeType":"163","endLine":1112,"endColumn":103},{"ruleId":"164","severity":1,"message":"165","line":1115,"column":25,"nodeType":"163","endLine":1115,"endColumn":28},{"ruleId":"161","severity":1,"message":"162","line":1118,"column":25,"nodeType":"163","endLine":1118,"endColumn":85},{"ruleId":"161","severity":1,"message":"162","line":1124,"column":25,"nodeType":"163","endLine":1124,"endColumn":108},{"ruleId":"164","severity":1,"message":"165","line":1127,"column":25,"nodeType":"163","endLine":1127,"endColumn":28},{"ruleId":"161","severity":1,"message":"162","line":1130,"column":25,"nodeType":"163","endLine":1130,"endColumn":85},{"ruleId":"161","severity":1,"message":"162","line":1136,"column":25,"nodeType":"163","endLine":1136,"endColumn":101},{"ruleId":"164","severity":1,"message":"165","line":1139,"column":25,"nodeType":"163","endLine":1139,"endColumn":28},{"ruleId":"161","severity":1,"message":"162","line":1142,"column":25,"nodeType":"163","endLine":1142,"endColumn":85},{"ruleId":"161","severity":1,"message":"162","line":1148,"column":25,"nodeType":"163","endLine":1148,"endColumn":107},{"ruleId":"164","severity":1,"message":"165","line":1151,"column":25,"nodeType":"163","endLine":1151,"endColumn":28},{"ruleId":"161","severity":1,"message":"162","line":1154,"column":25,"nodeType":"163","endLine":1154,"endColumn":85},{"ruleId":"161","severity":1,"message":"162","line":1160,"column":25,"nodeType":"163","endLine":1160,"endColumn":101},{"ruleId":"164","severity":1,"message":"165","line":1163,"column":25,"nodeType":"163","endLine":1163,"endColumn":28},{"ruleId":"161","severity":1,"message":"162","line":1166,"column":25,"nodeType":"163","endLine":1166,"endColumn":85},{"ruleId":"161","severity":1,"message":"162","line":1172,"column":25,"nodeType":"163","endLine":1172,"endColumn":101},{"ruleId":"164","severity":1,"message":"165","line":1175,"column":25,"nodeType":"163","endLine":1175,"endColumn":28},{"ruleId":"161","severity":1,"message":"162","line":1178,"column":25,"nodeType":"163","endLine":1178,"endColumn":85},{"ruleId":"166","severity":1,"message":"167","line":1188,"column":22,"nodeType":"168","messageId":"169","endLine":1188,"endColumn":24},{"ruleId":"164","severity":1,"message":"165","line":1193,"column":25,"nodeType":"163","endLine":1204,"endColumn":26},{"ruleId":"164","severity":1,"message":"165","line":1232,"column":25,"nodeType":"163","endLine":1232,"endColumn":41},{"ruleId":"164","severity":1,"message":"165","line":1232,"column":107,"nodeType":"163","endLine":1232,"endColumn":132},{"ruleId":"164","severity":1,"message":"165","line":1236,"column":25,"nodeType":"163","endLine":1236,"endColumn":41},{"ruleId":"164","severity":1,"message":"165","line":1236,"column":105,"nodeType":"163","endLine":1236,"endColumn":130},{"ruleId":"164","severity":1,"message":"165","line":1240,"column":25,"nodeType":"163","endLine":1240,"endColumn":41},{"ruleId":"164","severity":1,"message":"165","line":1240,"column":95,"nodeType":"163","endLine":1240,"endColumn":120},{"ruleId":"164","severity":1,"message":"165","line":1244,"column":25,"nodeType":"163","endLine":1244,"endColumn":41},{"ruleId":"164","severity":1,"message":"165","line":1244,"column":100,"nodeType":"163","endLine":1244,"endColumn":125},{"ruleId":"164","severity":1,"message":"165","line":1247,"column":25,"nodeType":"163","endLine":1247,"endColumn":41},{"ruleId":"164","severity":1,"message":"165","line":1247,"column":85,"nodeType":"163","endLine":1247,"endColumn":110},{"ruleId":"164","severity":1,"message":"165","line":1250,"column":25,"nodeType":"163","endLine":1250,"endColumn":41},{"ruleId":"164","severity":1,"message":"165","line":1250,"column":100,"nodeType":"163","endLine":1250,"endColumn":125},{"ruleId":"164","severity":1,"message":"165","line":1258,"column":19,"nodeType":"163","endLine":1258,"endColumn":22},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.","'hideModal' is assigned a value but never used.","'login' is assigned a value but never used.","'etfbalanceind' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'displayaccountname'. Either include it or remove the dependency array.","ArrayExpression",["170"],["171"],["172"],["173"],["174"],["175"],["176"],["177"],["178"],"'displayError' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"179","fix":"180"},{"desc":"179","fix":"181"},{"desc":"179","fix":"182"},{"desc":"179","fix":"183"},{"desc":"179","fix":"184"},{"desc":"179","fix":"185"},{"desc":"179","fix":"186"},{"desc":"179","fix":"187"},{"desc":"179","fix":"188"},"Update the dependencies array to be: [accountname, displayaccountname]",{"range":"189","text":"190"},{"range":"191","text":"190"},{"range":"192","text":"190"},{"range":"193","text":"190"},{"range":"194","text":"190"},{"range":"195","text":"190"},{"range":"196","text":"190"},{"range":"197","text":"190"},{"range":"198","text":"190"},[4674,4687],"[accountname, displayaccountname]",[5221,5234],[6869,6882],[7465,7478],[8059,8072],[8655,8668],[9250,9263],[9844,9857],[10445,10458]]